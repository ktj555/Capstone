// TUI Command print RP variables names
(cx-send '(for-each (lambda (v) (pp v)) rp-variables))


// list
(rp-axi? #f boolean #f #f)
(sg-swirl? #f boolean #f #f)
(rp-seg? #t boolean #f #t)
(rf-energy? #f boolean #f #f)
(rp-inviscid? #f boolean #f #f)
(rp-lam? #f boolean #f #f)
(rp-atm? #f boolean #f #f)
(rp-hvac? #f boolean #f #f)
(rp-les? #f boolean #f #f)
(rp-les-sgske? #f boolean #f #f)
(rp-sa? #f boolean #f #f)
(rp-des? #f boolean #f #f)
(rp-ke? #f boolean #f #f)
(rp-kw? #t boolean #f #t)
(rp-kklw? #f boolean #f #f)
(rp-sas? #f boolean #f #f)
(rp-transition-model none symbol #f none)
(rp-trans-one-eqn? #f boolean #f #f)
(rp-trans-sst? #f boolean #f #f)
(rp-v2f? #f boolean #f #f)
(sg-rsm? #f boolean #f #f)
(rp-structure-linear? #f boolean #f #f)
(rp-structure-nonlinear? #f boolean #f #f)
(rp-dual-time? #f boolean #f #f)
(rp-structure-time? #f boolean #f #f)
(rp-structure-damping? #f boolean #f #f)
(rp-spe? #f boolean #f #f)
(rp-spe-surf? #f boolean #f #f)
(rp-sootspecies? #f boolean #f #f)
(rp-spe-part? #f boolean #f #f)
(rp-potential? #f boolean #f #f)
(rp-lithium? #f boolean #f #f)
(rp-electrolysis? #f boolean #f #f)
(rp-dual-potential? #f boolean #f #f)
(rp-electro-chem? #f boolean #f #f)
(sg-pdf-transport? #f boolean #f #f)
(sg-dqmom-iem? #f boolean #f #f)
(rp-react? #f boolean #f #f)
(rp-amg? #f boolean #f #f)
(rp-lsf? #f boolean #f #f)
(rp-sge? #f boolean #f #f)
(rp-unsteady? #f boolean #f #f)
(sg-noniterative? #f boolean #f #f)
(rp-dpm-cache? #f boolean #f #f)
(rp-dpm-cache-serial? #f boolean #f #f)
(sg-dpm? #f boolean #f #f)
(sg-network? #f boolean #f #f)
(sg-pcb? #f boolean #f #f)
(sg-crev? #f boolean #f #f)
(sg-spark? #f boolean #f #f)
(sg-ignite? #f boolean #f #f)
(sg-ecfm? #f boolean #f #f)
(sg-geqn? #f boolean #f #f)
(sg-inert? #f boolean #f #f)
(sg-dtrm? #f boolean #f #f)
(sg-vfr? #f boolean #f #f)
(sg-s2s? #f boolean #f #f)
(sg-montecarlo? #f boolean #f #f)
(sg-solar? #f boolean #f #f)
(sg-p1? #f boolean #f #f)
(sg-twotemp? #f boolean #f #f)
(sg-pb? #f boolean #f #f)
(sg-iac? #f boolean #f #f)
(sg-disco? #f boolean #f #f)
(sg-bee-gees? #f boolean #f #f)
(sg-rosseland? #f boolean #f #f)
(sg-cylindrical? #f boolean #f #f)
(sg-pdf? #f boolean #f #f)
(sg-premixed? #f boolean #f #f)
(sg-par-premix? #f boolean #f #f)
(sg-melt? #f boolean #f #f)
(sg-pull? #f boolean #f #f)
(sg-dynmesh? #f boolean #f #f)
(sg-overset? #f boolean #f #f)
(sg-nox? #f boolean #f #f)
(sg-sox? #f boolean #f #f)
(sg-soot? #f boolean #f #f)
(sg-hg? #f boolean #f #f)
(sg-mphase? #f boolean #f #f)
(rp-acoustics? #f boolean #f #f)
(sg-uds? #f boolean #f #f)
(sg-udm? #f boolean #f #f)
(sg-node-udm? #f boolean #f #f)
(hyb-init? #t boolean #f #t)
(sg-wetsteam? #f boolean #f #f)
(sg-moistair? #f boolean #f #f)
(rp-spe-surf-rc? #f boolean #f #f)
(sizing-function/max-resolution 60 integer () 60)
(sizing-function/resolution 3 integer () 3)
(dynamesh/collapse/skew-max 0.7 real () 0.7)
(smooth-mesh/min-skew 0.4 real () 0.4)
(adapt/coarsen/marker/visible? #f boolean () #f)
(adapt/coarsen/cell/visible? #t boolean () #t)
(adapt/coarsen/cell/filled? #t boolean () #t)
(adapt/refine/marker/visible? #f boolean () #f)
(adapt/refine/cell/visible? #t boolean () #t)
(adapt/refine/cell/filled? #t boolean () #t)
(adapt/method 0 integer () 0)
(workflow/type "" string #f "")
(solver/state () list #f ())
(workflow/state () list #f ())
(femcore/structure/stress/interpolation 0 integer #f 0)
(femcore/structure/coordinate/interpolation 3 integer #f 3)
(femcore/structure/displacement/interpolation 3 integer #f 3)
(femcore/use? #f boolean #f #f)
(point-creation-tolerance 0.0001 real #f 0.0001)
(virtualboundary/use-one-to-one #t boolean #f #t)
(virtualboundary/diag-level 0 integer #f 0)
(virtualboundary/bndint () list #f ())
(virtualboundary/geom () list #f ())
(virtualboundary/geomids () integer-list #f ())
(sponge/verbosity 0 integer #f 0)
(sponge/map () list #f ())
(expr/evaluate-also-in-host? #f boolean #f #f)
(expr/enable-caching? #t boolean #f #t)
(register-reports () list #f ())
(inline-expressions () list #f ())
(named-expressions () list #f ())
(cell-registers () list #f ())
(persistent-user-rpvars () list #f ())
(solid/mrf-motion-forcing? #f boolean #f #f)
(solid/mrf-motion-exist? #f boolean #f #f)
(solid/solid-motion-forcing? #t boolean #f #t)
(solid/motion-copy-mrf-to-solid-t? #t boolean #f #t)
(solid/motion-recommend? #t boolean #f #t)
(reference-frame/ghost-zone-interface-active? #t boolean #f #t)
(reference-frame/relative/origin-absolute? #f boolean #f #f)
(wall-film/allow-both-models 0 integer #f 0)
(wall-film/solution-state () list #f ())
(wall-film/model-parameters () list #f ())
(strategy/solution-strategy/modifications/status () list #f ())
(strategy/solution-strategy/original-settings/status ((executed? . #f) (converged? . #f) (start-iteration . 0)) list #f ((executed? . #f) (converged? . #f) (start-iteration . 0)))
(strategy/solution-strategy/before-init-modification/status ((executed? . #f) (converged? . #f) (start-iteration . 0)) list #f ((executed? . #f) (converged? . #f) (start-iteration . 0)))
(rombuilder/create-rom-cell-functions? #f boolean #f #f)
(rombuilder/post-processing-mode? #f boolean #f #f)
(rombuilder/enabled? #f boolean #f #f)
(rombuilder/selected-variables-unit () string-list #f ())
(rombuilder/selected-variables-pick () string-list #f ())
(rombuilder/selected-variables () string-list #f ())
(rombuilder/variable-zone-map () list #f ())
(strategy/use-strategy? #f boolean #f #f)
(strategy/solution-strategy/modifications ((type . list-class) (min-length . 0) (max-length . #f) (curr-length . 0) (member-vars)) () #f ())
(strategy/solution-strategy/original-settings ((type . struct-class) (members-state (active? (value . #t) (type . boolean-class)) (name (value . "Original Settings") (type . string-class)) (command (value . "") (type . string-class)) (count (type . integer-class) (value . 1) (min . 0) (max . #f)))) () #f ())
(strategy/solution-strategy/before-init-modification ((type . struct-class) (members-state (active? (value . #f) (type . boolean-class)) (name (value . "Pre-Initialization") (type . string-class)) (command (value . "") (type . string-class)) (count (type . integer-class) (value . 0) (min . 0) (max . #f)))) () #f ())
(strategy/initialization-strategy ((selection . init-from-case) (type . union-class) (members-state (init-from-case . #f) (init-from-data-file (type . file-class) (value . "") (remote-file? . #t) (file-pattern . "*.dat*")) (init-from-solution (selection . init-from-case) (type . union-class) (members-state (init-from-case . #f) (init-from-data-file (type . file-class) (value . "") (remote-file? . #t) (file-pattern . "*.dat*")))))) () #f ())
(input-parameters/used-in-udf () () #f ())
(parameters/parametrized-flvars () () #f ())
(parameters/enable-in-tui? #f boolean #f #f)
(parameters/output-parameters () () #f ())
(parameters/input-parameters () () #f ())
(histogram/scaling-method "" string #f "")
(histogram/use-scaling? #f boolean #f #f)
(higherorder-solidconvection? #t boolean #f #t)
(fluent-case-version-in-bc-file 222 integer #f 0)
(fluent-case-version 222 integer #f 160)
(transient-post/monitors () list #f ())
(postdomain/index 1 integer #f 1)
(postdomain? #f boolean #f #f)
(user-wet-steam? #f boolean #f #f)
(udws/libname "" string #f "")
(wetsteam/rgp-table-name "" string #f "")
(wetsteam/use-rgp-tables? #f boolean #f #f)
(wetsteam/beta-young-82 1 real #f 1)
(wetsteam/alfa-young-82 9 real #f 9)
(wetsteam/virial-eq-young? #f boolean #f #f)
(wetsteam/droplet-growth-hill-66? #f boolean #f #f)
(wetsteam/stagnation-b-zero? #f boolean #f #f)
(wetsteam/etta-scale 24540000000000 real #f 24540000000000)
(wetsteam/b-clip-post 1e-06 real #f 1e-06)
(wetsteam/b_max 0.1 real #f 0.1)
(wsr/patch 0 real density 0)
(wsb/patch 0 real liquid-fraction 0)
(wsn/patch 0 real volume-inverse 0)
(wsf/default 0 real #f 0)
(wsr/default 0 real density 0)
(wsb/default 0 real liquid-fraction 0)
(wsn/default 0 real volume-inverse 0)
(wetsteam/upd-sol-clip-type 2 integer #f 2)
(wetsteam/amg-stabilization 0 integer #f 0)
(wetsteam/scheme 0 integer #f 0)
(wetsteam/amg-method 0 integer #f 0)
(wetsteam/cycle-type 0 integer #f 0)
(wetsteam/urf-bound 0.5 real #f 0.5)
(wetsteam/amg-beta 0.7 real #f 0.7)
(wetsteam/amg-alpha 0.1 real #f 0.1)
(wetsteam/relax 0.8 real #f 0.8)
(wetsteam/solve? #t boolean #f #t)
(gcm/debug-verbose -1 integer #f -1)
(gcm/dpm-treatment-on? #f boolean #f #f)
(gcm/enable-dpm? #f boolean #f #f)
(gcm/print-partitions? #f boolean #f #f)
(gcm/ps-pitchratio-limit 2 real #f 2)
(gcm/360-with-no-periodic? #t boolean #f #t)
(gcm/disable-in-unsteady? #f boolean #f #f)
(gcm/all-vars-contours? #f boolean #f #f)
(gcm/contours? #f boolean #f #f)
(mpm/downstream-mixing-only? #t boolean #f #t)
(mpm/enable-avg-option? #f boolean #f #f)
(mpm/rmax-extension-factor 0.2 real #f 0.2)
(mpm/ps-based? #f boolean #f #f)
(mpm/exclude-revflow-faces-averaging? #f boolean #f #f)
(mpm/allow-revflow? #t boolean #f #t)
(mpm/variable-width-bands? #t boolean #f #t)
(mpm/debug-bins-verbose 0 integer #f 0)
(mpm/viability-conds 0.3 real #f 0.3)
(mpm/viability-check? #t boolean #f #t)
(mpm/adjust-rotation? #f boolean #f #f)
(mpm/vmag-scale? #t boolean #f #t)
(mpm/inner-iterations 4 integer #f 4)
(mpm/primitive-var-avg? #t boolean #f #t)
(mixing-plane/rgrad-copy-method 0 integer #f 0)
(mixing-plane/gradient-copy-method 0 integer #f 0)
(mixing-plane/include-species? #f boolean #f #f)
(mixing-plane/reduce-backflow? #f boolean #f #f)
(mixing-plane/ave-method 0 integer #f 0)
(mixing-plane/verbos-t-enthalpy? #f boolean #f #f)
(mixing-plane/conserve-t-enthalpy? #f boolean #f #f)
(mixing-plane/verbos-swirl? #f boolean #f #f)
(mixing-plane/conserve-swirl? #f boolean #f #f)
(mixing-plane/fix-pressure-level? #f boolean #f #f)
(mixing-plane/omega 1 real #f 1)
(mixing-planes () () #f ())
(ablation/consider-flux? #f boolean #f #f)
(ablation/wall-threads () thread-list #f ())
(ablation/mdm-auto? #t boolean #f #t)
(ablation/vielle-n 0 real #f 0)
(ablation/vielle-a 0 real #f 0)
(ablation/model 1 integer #f 1)
(ablation/on? #f boolean #f #f)
(perforated/cd-profile? (0) integer-list #f (0))
(perforated/report? #f boolean #f #f)
(perforated/mf-urf 1 real #f 1)
(perforated/input-file-name "" string #f "")
(perforated/parameters (()) list #f (()))
(perforated/model-setup ((-1 0 #t #t #f (-1 0 0 0))) list #f ((-1 0 #t #t #f (-1 0 0 0))))
(perforated/model-setup-valid? () boolean-list #f ())
(perforated/num-inj-thread 1 integer #f 1)
(perforated/model-method 0 integer #f 0)
(perforated/model-on? #f boolean #f #f)
(perforated/version "" string #f "")
(perforated/switch? #f boolean #f #f)
(wall/secondary-gradient-limiter-fmax 0.9 real #f 0.9)
(wall/secondary-gradient-limiter-fmin 0.7 real #f 0.7)
(energy/wall/secondary-gradient-limiter-fmax 0.9 real #f 0.9)
(energy/wall/secondary-gradient-limiter-fmin 0.7 real #f 0.7)
(energy/wall/modify-orthogonality-limits? #f boolean #f #f)
(energy/wall/secondary-gradient-limiter? #f boolean #f #f)
(uds/wall/secondary-gradient-limiter-fmax 0.9 real #f 0.9)
(uds/wall/secondary-gradient-limiter-fmin 0.7 real #f 0.7)
(uds/wall/modify-orthogonality-limits? #f boolean #f #f)
(uds/wall/secondary-gradient-limiter? #f boolean #f #f)
(wall/boundary-solid-advection-rotating? #f boolean #f #f)
(wall/boundary-solid-advection? #t boolean #f #t)
(wall/new-advection-linearization-t? #f boolean #f #f)
(wall/new-solid-advection? #t boolean #f #t)
(wall/vnormal-tolerance 20 real #f 20)
(wall/check-vnormal-solid? #t boolean #f #t)
(wall/finite-slip-condition? #f boolean #f #f)
(outflow/multiplicative-correction? #f boolean #f #f)
(mfinlet/ecmf-linearize? #f boolean #f #f)
(mfinlet/forced-supersonic-treatment? #f boolean #f #f)
(mfinlet/mfout-mach 0.98 real #f 0.98)
(mfinlet/mfout-urf 1 real #f 1)
(mfinlet/non-constant-flux? #t boolean #f #t)
(mfinlet/allow-reverse-flow? #t boolean #f #t)
(pinlet/cell-velocity-supersonic-switch? #t boolean #f #t)
(pinlet/use-normal-mach-number? #t boolean #f #t)
(pinlet/press-v13-init? #t boolean #f #t)
(pinlet/use-extrapolated-pressure? #f boolean #f #f)
(pinlet/enhanced-backflow? #f boolean #f #f)
(non-reflecting/verbosity 1 integer #f 1)
(non-reflecting/recon? #t boolean #f #t)
(non-reflecting/omega 0.75 real #f 0.75)
(non-reflecting-bcs? #f boolean #f #f)
(target-mfr-solver-flux? #t boolean #f #t)
(target-mfr-mach 0.98 real #f 0.98)
(target-mfr-pmin 1 real pressure 1)
(target-mfr-pmax 5000000 real pressure 5000000)
(target-mfr-urf 0.05 real #f 0.05)
(target-mfr-method 2 integer #f 2)
(target-mfr-verbos? #f boolean #f #f)
(target-mfr? #t boolean #f #t)
(vent-fan/show-hidden-options? #f boolean #f #f)
(poutlet/apply-backflow-jacobian? #f boolean #f #f)
(poutlet/full-viscous-force? #f boolean #f #f)
(poutlet/press-profile-blend 0 real #f 0)
(poutlet/pavg-nbins 65 integer #f 65)
(poutlet/pavg-debug? #f boolean #f #f)
(poutlet/p-split-back? #t boolean #f #t)
(poutlet/fifth-ord-poly? #f boolean #f #f)
(poutlet/p-ave-strong? #f boolean #f #f)
(poutlet/p-split-ausm? #f boolean #f #f)
(poutlet/ignore-back-swirl? #t boolean #f #t)
(inert/enth-dt 10 real #f 10)
(inert/enth-tmax 5000 real #f 5000)
(inert/enth-dt-urf 0.2 real #f 0.2)
(inert/min-sto-xi 0.01 real #f 0.01)
(inert/egr-reset-match-temp? #t boolean #f #t)
(inert/species-lumping? #f boolean #f #f)
(inert/max-h-iterations 50 integer #f 50)
(inert/user-specified? #f boolean #f #f)
(inert/assumed? #t boolean #f #t)
(inert/mixture-name "inert-mixture" string #f "inert-mixture")
(inert/nspecies 3 integer #f 3)
(inert/composition (0.19110313 0.088028589 0.72086828) real-list #f (0.19110313 0.088028589 0.72086828))
(inert/species ("co2" "h2o" "n2") string-list #f ("co2" "h2o" "n2"))
(inert/assumed-species ("co2" "h2o" "n2") string-list #f ("co2" "h2o" "n2"))
(inert/assumed-comp (0.19110313 0.088028589 0.72086828) real-list #f (0.19110313 0.088028589 0.72086828))
(inert/user-species ("co2" "h2o" "n2") string-list #f ("co2" "h2o" "n2"))
(inert/user-comp (0.19110313 0.088028589 0.72086828) real-list #f (0.19110313 0.088028589 0.72086828))
(inert/h-c-ratio 2.25 real #f 2.25)
(inert/amg-stabilization 0 integer #f 0)
(inert/default 0 real #f 0)
(inert/patch 0 real #f 0)
(inert/amg-method 0 integer #f 0)
(inert/cycle-type 0 integer #f 0)
(inert/amg-beta 0.7 real #f 0.7)
(inert/amg-alpha 0.1 real #f 0.1)
(inert/scheme 1 integer #f 1)
(inert/relax 1 real #f 1)
(inert/solve? #t boolean #f #t)
(inert/off? #t boolean #f #t)
(premix/les-peters-sct-factor 0.7 real #f 0.7)
(premix/ewald-exponent-q 0.66 real #f 0.66)
(premix/peters-coeff-cs 2 real #f 2)
(premix/peters-coeff-b3 1 real #f 1)
(premix/peters-coeff-b1 2 real #f 2)
(premix/blint-coeff-bl2 0.7 real #f 0.7)
(premix/blint-coeff-bl1 2 real #f 2)
(premix/blint-modifier? #f boolean #f #f)
(premix-c-eqn/ewald-peters-corrector? #t boolean #f #t)
(premix-c-eqn/turb-flame-speed-model "zimont" string #f "zimont")
(premix-g-eqn/turb-flame-speed-model "peters" string #f "peters")
(premix-g-var/max-iter 5 integer #f 5)
(premix-g-var/residual-tolerance 0.0001 real #f 0.0001)
(premix-g-var/iter-tolerance 0.05 real #f 0.05)
(premix-g-var/amg-stabilization 0 integer #f 0)
(premix-g-var/amg-method 0 integer #f 0)
(premix-g-var/cycle-type 0 integer #f 0)
(premix-g-var/amg-beta 0.7 real #f 0.7)
(premix-g-var/amg-alpha 0.1 real #f 0.1)
(premix-g-var/scheme 1 integer #f 1)
(premix-g-var/gvar-limit 2 integer #f 2)
(premix-g-var/aniso-diff? #f boolean #f #f)
(premix-g-var/default 0 real #f 0)
(premix-g-var/patch 0 real #f 0)
(premix-g-var/relax 0.8 real #f 0.8)
(premix-g-var/solve? #t boolean #f #t)
(premix-g-eqn/re-init-urf 0.1 real #f 0.1)
(premix-g-eqn/num-les-smooths 2 integer #f 2)
(premix-g-eqn/cusp-g-gmag-limit 0.5 real #f 0.5)
(premix-g-eqn/g-var-type "solve" string #f "solve")
(premix-g-eqn/max-iter 5 integer #f 5)
(premix-g-eqn/residual-tolerance 0.0001 real #f 0.0001)
(premix-g-eqn/iter-tolerance 0.05 real #f 0.05)
(premix-g-eqn/amg-stabilization 0 integer #f 0)
(premix-g-eqn/amg-method 0 integer #f 0)
(premix-g-eqn/cycle-type 0 integer #f 0)
(premix-g-eqn/amg-beta 0.7 real #f 0.7)
(premix-g-eqn/amg-alpha 0.1 real #f 0.1)
(premix-g-eqn/scheme 1 integer #f 1)
(premix-g-eqn/verbosity 0 integer #f 0)
(premix-g-eqn/curvature-dfac 2 real #f 2)
(premix-g-eqn/curvature-source? #f boolean #f #f)
(premix-g-eqn/default 0 real #f 0)
(premix-g-eqn/patch 0 real #f 0)
(premix-g-eqn/relax 0.5 real #f 0.5)
(premix-g-eqn/solve? #t boolean #f #t)
(par-premix/local-unburnt-props? #t boolean #f #t)
(ecfm-sigma/verbosity 0 integer #f 0)
(ecfm-sigma/kinetic-theory-ktc? #t boolean #f #t)
(ecfm-sigma/p-restrict? #t boolean #f #t)
(ecfm-sigma/p3-rho-ratio? #f boolean #f #f)
(ecfm-sigma/ecfm-type "veynante" string #f "veynante")
(ecfm-sigma/delta-type "sutherland" string #f "sutherland")
(ecfm-sigma/itnfs-type "poinsot" string #f "poinsot")
(ecfm-sigma/beta2-les 1.33333333 real #f 1.33333333)
(ecfm-sigma/beta1-les 0.4 real #f 0.4)
(ecfm-sigma/alpha1-les 0.5 real #f 0.5)
(ecfm-sigma/nres-les 5 real #f 5)
(ecfm-sigma/spark-const (50) real-list #f (50))
(ecfm-sigma/ecfm-spark-type ("zimont") string-list #f ("zimont"))
(ecfm-sigma/min-itnfs 0 real #f 0)
(ecfm-sigma/itnfs-fixed-val 50 real #f 50)
(ecfm-sigma/delta-l 0.001 real #f 0.001)
(ecfm-sigma/ucfm/beta2 0.1 real #f 0.1)
(ecfm-sigma/ucfm/beta1 1 real #f 1)
(ecfm-sigma/ucfm/alpha3 1.4 real #f 1.4)
(ecfm-sigma/ucfm/alpha2 8.5 real #f 8.5)
(ecfm-sigma/ucfm/alpha1 0.012 real #f 0.012)
(ecfm-sigma/ucfm/alpha0 1 real #f 1)
(ecfm-sigma/std3/beta1 0.4 real #f 0.4)
(ecfm-sigma/std3/alpha4 1 real #f 1)
(ecfm-sigma/std3/alpha3 0.5 real #f 0.5)
(ecfm-sigma/std3/alpha2 1 real #f 1)
(ecfm-sigma/std3/alpha1 1.6 real #f 1.6)
(ecfm-sigma/std3/alpha0 1 real #f 1)
(ecfm-sigma/std2/beta1 1 real #f 1)
(ecfm-sigma/std2/alpha3 1 real #f 1)
(ecfm-sigma/std2/alpha2 1 real #f 1)
(ecfm-sigma/std2/alpha1 1.6 real #f 1.6)
(ecfm-sigma/std2/alpha0 1 real #f 1)
(ecfm-sigma/std1/beta1 1 real #f 1)
(ecfm-sigma/std1/alpha3 1 real #f 1)
(ecfm-sigma/std1/alpha2 1 real #f 1)
(ecfm-sigma/std1/alpha1 1.6 real #f 1.6)
(ecfm-sigma/std1/alpha0 1 real #f 1)
(ecfm-sigma/min-dl 1e-06 real #f 1e-06)
(ecfm-sigma/wall-flux-const 0.5 real #f 0.5)
(ecfm-sigma/max-destruction-c 0.999999 real #f 0.999999)
(ecfm-sigma/min-p3-c 0.001 real #f 0.001)
(ecfm-sigma/min-destruction-sl 0.001 real #f 0.001)
(ecfm-sigma/min-production-sl 0.001 real #f 0.001)
(ecfm-sigma/amg-stabilization 0 integer #f 0)
(ecfm-sigma/default 1 real #f 1)
(ecfm-sigma/patch 0 real #f 0)
(ecfm-sigma/amg-method 0 integer #f 0)
(ecfm-sigma/cycle-type 0 integer #f 0)
(ecfm-sigma/amg-beta 0.7 real #f 0.7)
(ecfm-sigma/amg-alpha 0.1 real #f 0.1)
(ecfm-sigma/scheme 1 integer #f 1)
(ecfm-sigma/relax 0.9 real #f 0.9)
(ecfm-sigma/solve? #t boolean #f #t)
(ecfm-sigma/off? #t boolean #f #t)
(ignition/octane-exp-gen 1 real #f 1)
(ignition/equiv-exp-gen 1 real #f 1)
(ignition/rpm-exp-gen 1 real #f 1)
(ignition/temp-exp-gen 1 real #f 1)
(ignition/press-exp-gen 1 real #f 1)
(ignition/activate-gen 20080 real #f 20080)
(ignition/octane-gen 90 real #f 90)
(ignition/pre-exp-gen 0.0405 real #f 0.0405)
(ignition/press-exp-de -1.7 real #f -1.7)
(ignition/activate-de 3800 real #f 3800)
(ignition/octane-exp-de 3.402 real #f 3.402)
(ignition/octane-de 90 real #f 90)
(ignition/pre-exp-de 0.01768 real #f 0.01768)
(ignition/press-exp-hh 0.63 real #f 0.63)
(ignition/activate-hh 618840 real #f 618840)
(ignition/cetane-hh 25 real #f 25)
(ignition/pre-exp-hh 0.36 real #f 0.36)
(ignition/dt-multiplier 3 real #f 3)
(ignition/knock-act-temp -15078 real #f -15078)
(ignition/knock-pre-exp 860000000000 real #f 860000000000)
(ignition/ignite-sp-cut 0.5 real #f 0.5)
(ignition/prod-fuel-cut 0.99 real #f 0.99)
(ignition/burning-cutoff 1 real #f 1)
(ignition/ignite-sp-max 5 real #f 5)
(ignition/stoich-a-f-ratio 14.7 real #f 14.7)
(ignition/fuel-species "" string #f "")
(ignition/amg-stabilization 0 integer #f 0)
(ignition/default 0 real #f 0)
(ignition/patch 0 real #f 0)
(ignition/amg-method 0 integer #f 0)
(ignition/cycle-type 0 integer #f 0)
(ignition/amg-beta 0.7 real #f 0.7)
(ignition/amg-alpha 0.1 real #f 0.1)
(ignition/scheme 1 integer #f 1)
(ignition/relax 0.7 real #f 0.7)
(ignition/general? #f boolean #f #f)
(ignition/douaud? #f boolean #f #f)
(ignition/hardenburg? #f boolean #f #f)
(ignition/delay? #f boolean #f #f)
(ignition/knock? #f boolean #f #f)
(ignition/solve? #t boolean #f #t)
(ignition/off? #t boolean #f #t)
(spark/verbosity? #f boolean #f #f)
(spark/r150-energy (0) real-list #f (0))
(spark/fix-rtrans? #f boolean #f #f)
(spark/rtrans-max-cells 10000 real #f 10000)
(spark/rtrans-min-cells 3 real #f 3)
(spark/flame-speed-model 1 integer #f 1)
(spark/burn-old-time-levels? #f boolean #f #f)
(spark/burn-init-fuel? #f boolean #f #f)
(spark/diffusion-num-smooths 1 integer #f 1)
(spark/diffusion-factor 1.5 real #f 1.5)
(spark/diffusion-dist 0.02 real #f 0.02)
(spark/diffusion-time (1e-05) real-list #f (1e-05))
(spark/max-temp (2500) real-list #f (2500))
(spark/energy (0.1) real-list #f (0.1))
(spark/duration (0.001) real-list #f (0.001))
(spark/start-ca (0) real-list #f (0))
(spark/start-time (0) real-list #f (0))
(spark/time-exponent (0.333333) real-list #f (0.333333))
(spark/user-geom? (#f) boolean-list #f (#f))
(spark/time-dep-geom? (#t) boolean-list #f (#t))
(spark/fixed-geom? (#f) boolean-list #f (#f))
(spark/fixed-box? (#f) boolean-list #f (#f))
(spark/fixed-cylinder? (#f) boolean-list #f (#f))
(spark/fixed-sphere? (#t) boolean-list #f (#t))
(spark/shape ("hexahedron") string-list #f ("hexahedron"))
(spark/z-height (0.002) real-list #f (0.002))
(spark/y-height (0.002) real-list #f (0.002))
(spark/x-height (0.002) real-list #f (0.002))
(spark/rtrans (0) real-list #f (0))
(spark/rk (0.002) real-list #f (0.002))
(spark/radius-final (0.005) real-list #f (0.005))
(spark/radius (0.002) real-list #f (0.002))
(spark/z-loc (0) real-list #f (0))
(spark/y-loc (0) real-list #f (0))
(spark/x-loc (0) real-list #f (0))
(spark/off? (#t) boolean-list #f (#t))
(spark/name ("spark-1") string-list #f ("spark-1"))
(spark/num 1 integer #f 1)
(crevice/threads () integer-list #f ())
(crevice/unit-roundoff 1e-06 real #f 1e-06)
(crevice/relax 0.8 real #f 0.8)
(crevice/exit-pressure 101325 real #f 101325)
(crevice/mid-gap-cd 0.7 real #f 0.7)
(crevice/pressures (101325 101325 101325 101325 101325) real-list #f (101325 101325 101325 101325 101325))
(crevice/bot-ring-gap (1e-05 1e-05 1e-05) real-list #f (1e-05 1e-05 1e-05))
(crevice/mid-ring-gap (4e-06 4e-06 4e-06) real-list #f (4e-06 4e-06 4e-06))
(crevice/top-ring-gap (1e-05 1e-05 1e-05) real-list #f (1e-05 1e-05 1e-05))
(crevice/land-length (0.00391 0.00391 0.00391) real-list #f (0.00391 0.00391 0.00391))
(crevice/ring-spacing (0.00391 0.00391 0.00391) real-list #f (0.00391 0.00391 0.00391))
(crevice/ring-mass (0.00375 0.00375 0.00375) real-list #f (0.00375 0.00375 0.00375))
(crevice/ring-thickness (0.002 0.002 0.002) real-list #f (0.002 0.002 0.002))
(crevice/ring-width (0.00375 0.00375 0.00375) real-list #f (0.00375 0.00375 0.00375))
(crevice/piston-bore-clearance 5.08e-05 real #f 5.08e-05)
(crevice/sector-angle 360 real degrees 360)
(crevice/piston-temperature 400 real temperature 400)
(crevice/output-file "crev.out" string #f "crev.out")
(crevice/bore 0.1016 real #f 0.1016)
(crevice/n-rings 3 integer #f 3)
(crevice/ring-dynamics? #f boolean #f #f)
(crevice/write? #f boolean #f #f)
(crevice/solve? #f boolean #f #f)
(crevice/enabled? #f boolean #f #f)
(acoustics/time-stepn "" string #f "")
(acoustics/q-mesh-filename "" string #f "")
(acoustics/mesh-filename "" string #f "")
(acoustics/write-cgns? #f boolean #f #f)
(acoustics/cylindrical-export? #f boolean #f #f)
(acoustics/auto-prune? #t boolean #f #t)
(acoustics/interior-list () list #f ())
(acoustics/write-only? #f boolean #f #f)
(acoustics/write? #f boolean #f #f)
(acoustics/flow-time () list #f ())
(acoustics/asd-format ".asd" string #f ".asd")
(acoustics/source-files () list #f ())
(acoustics/thread-types () list #f ())
(acoustics/required-filenames () list #f ())
(acoustics/writable-threads () integer-list #f ())
(acoustics/required-threads () list #f ())
(acoustics/receivers () list #f ())
(acoustics/file-lines 500 integer #f 500)
(acoustics/read-and-compute? #f boolean #f #f)
(acoustics/on-the-fly? #f boolean #f #f)
(acoustics/index-filename "" string #f "")
(acoustics/source-filename "" string #f "")
(acoustics/base-filename "" string #f "")
(acoustics/frequency 1 integer #f 1)
(models/equation-order 0 integer #f 0)
(models/timer-print/skip-certain-models? #t boolean #f #t)
(models/timer-threshold-percentage 5 real #f 5)
(models/timer-cutoff 0.1 real #f 0.1)
(show-beta-features? #f boolean #f #f)
(charge-density/enabled? #f boolean #f #f)
(magnetic-permeability/enabled? #f boolean #f #f)
(electric-conductivity/only-const-enabled? #f boolean #f #f)
(electric-conductivity/enabled? #f boolean #f #f)
(em/model-enabled? #f boolean #f #f)
(save-cell-residuals? #f boolean #f #f)
(domains (((1 geom-domain mixture) (children) (material . air))) () #f ())
(md/verbosity 0 integer #f 0)
(target/sv-list () string-list #f ())
(target/domain-list () integer-list #f ())
(target/thread-list () integer-list #f ())
(turbo-mode/turbomachine-description () () #f ())
(turbo-mode/enable? #f boolean #f #f)
(turbo-vector? #f boolean #f #f)
(turbo-projection/method (0) integer-list #f (0))
(turbo-search/method (1) integer-list #f (1))
(turbo-grid/method (0) integer-list #f (0))
(turbo/current-topology -1 integer #f -1)
(turbo/topology-count 0 integer #f 0)
(turbo/machine-type 0 integer #f 0)
(turbo/zones/blade () thread-list #f ())
(turbo/zones/outlet () thread-list #f ())
(turbo/zones/inlet () thread-list #f ())
(turbo/zones/theta-periodic () thread-list #f ())
(turbo/zones/theta-max () thread-list #f ())
(turbo/zones/theta-min () thread-list #f ())
(turbo/zones/shroud () thread-list #f ())
(turbo/zones/hub () thread-list #f ())
(turbo/topology-list () () #f ())
(turbo? #f boolean #f #f)
(network/thermal-coupling-options 2 integer #f 2)
(network/history-file "" string #f "")
(save-network-history? #f boolean #f #f)
(profile/parameter-list () () #f ())
(sc/update-mesh-motion-before-mesh-transfer? #t boolean #f #t)
(reference-yplus 300 real #f 300)
(sc/volumetric-cell-zones () integer-list #f ())
(sc/coupling-iteration-index 1 integer #f 1)
(sc/coupling-step-index 1 integer #f 1)
(sc/enable-new-defaults-for-transfers? #t boolean #f #t)
(sc/use-global-node-weights? #t boolean #f #t)
(sc/number-of-substeps-per-coupling-step 1 integer #f 1)
(sc/enable-sub-stepping-option-per-coupling-step? #f boolean #f #f)
(sc/htc-calculation-method? 0 integer #f 0)
(sc/htc-epsilon 1e-06 real #f 1e-06)
(sc/enable-thermal-stabilization? #f boolean #f #f)
(sc/enable-htc-dt-in-solid-cell? #f boolean #f #f)
(sc/default-htc-method? #t boolean #f #t)
(sc/steady/default-iteration-method? #t boolean #f #t)
(sc/independent-rotation? #t boolean #f #t)
(sc/miniter-per-coupling-iter 5 integer #f 5)
(sc/verbosity 0 integer #f 0)
(oned/oldflowinterfaces? #f boolean #f #f)
(oned/verbosity? #f boolean #f #f)
(oned/modified-walls? #f boolean #f #f)
(oned/modified-wall-ids () int-list #f ())
(oned/modified-wall-names () string-list #f ())
(oned/library-case "" string #f "")
(oned/library-name "none" string #f "none")
(glass-model? #f boolean #f #f)
(shell/append-mesh-without-deletion? #f boolean #f #f)
(shell/map-uds-at-external-surface? #t boolean #f #t)
(shell/oto-nci? #t boolean #f #t)
(shell/modified-sliding-interfaces () list #f ())
(shell/nci-parent-info () list #f ())
(shell/original-wall-info () list #f ())
(shell/thread-ids () list #f ())
(shell/zone-io? #t boolean #f #t)
(shell/check-contact-points? #f boolean #f #f)
(shell/allow-partitioning? #f boolean #f #f)
(mesh/new-encap-from-tui? (#f #f) list #f (#f #f))
(shell/skip-creation? #f boolean #f #f)
(shell/verbosity? #f boolean #f #f)
(shell/restore-inner-temp? #f boolean #f #f)
(shell/new-encapsulation? #t boolean #f #t)
(shell/create-edge-children? #f boolean #f #f)
(shell/multi/data () list #f ())
(shell/multi/cond-rule 1 integer #f 1)
(shell/new-method-from-tui? (#f #f) list #f (#f #f))
(shell/new-method? #t boolean #f #t)
(shell/max-migration-iteration 1 integer #f 1)
(shell/alternate-junction-formulation? #f boolean #f #f)
(disabled-planar-walls () list #f ())
(shell/ignore-partition-check? #f boolean #f #f)
(shell/check-orientation? #f boolean #f #f)
(in-plane/zero-dir (0 1 0) real-list #f (0 1 0))
(cht/solid-time 0 real #f 0)
(cht/solid-time-step-auto? #t boolean #f #t)
(cht/solid-time-step-size 10 real #f 10)
(cht/enable-solid-time-step? #f boolean #f #f)
(cht/unsteady/dataset-id-map () list #f ())
(cht/unsteady/mov-avg/couple-with-full-window-data? #t boolean #f #t)
(cht/unsteady/mov-avg-window-size 1 integer #f 1)
(cht/unsteady/use-mov-avg? #f boolean #f #f)
(cht/unsteady/htc-ramp-factor 0 real #f 0)
(cht/unsteady/enable-mapped-intf-tui? #f boolean #f #f)
(cht/unsteady/time-sampling-info () list #f ())
(cht/use-yplus-based-htc? #f boolean #f #f)
(cht/fixed-htc 200 real #f 200)
(cht/use-fixed-htc? #f boolean #f #f)
(cht/use-rel-ref-temperature? #t boolean #f #t)
(cht/delta-t-percent 5 real #f 5)
(cht/delta-t 0 real #f 0)
(cht/enhanced-mapped-connectivity? #t boolean #f #t)
(cht/explicit-profile-splitted-conservation? #t boolean #f #t)
(cht/solid-solid/allow-explicit? #f boolean #f #f)
(cht/auto-tolerance/scaling-factor 1.25 real #f 1.25)
(cht/auto-tolerance? #t boolean #f #t)
(cht/interface-type-wall #f boolean #f #f)
(cht/interpolation-method 0 integer #f 0)
(cht/mapping-method 3 integer #f 3)
(cht/urf 1 real #f 1)
(cht/qdot-tolerance 0.0001 real #f 0.0001)
(cht/force-conservation? #t boolean #f #t)
(cht/verbosity -1 integer #f -1)
(cht/htc-wall-function-based? #f boolean #f #f)
(cht/mapping-frequency 1 integer #f 1)
(cht/mapped-interfaces () () #f ())
(dual-cell/centroid-tolerance 1e-06 real #f 1e-06)
(dual-cell/nbr-tolerance 1e-07 real #f 1e-07)
(dual-cell/store-nbr-data? #f boolean #f #f)
(dual-cell/conservative-heat-transfer? #f boolean #f #f)
(dual-cell-heatxc/verbosity? #f boolean #f #f)
(dc/extrapolation-method "default" string #f "default")
(dual-cell/alternate-formulation? #f boolean #f #f)
(dual-cell-heatxc/data () list #f ())
(dual-cell-heatxc/on? #f boolean #f #f)
(heatxc/update-ntu-for-varying-cp? #f boolean #f #f)
(heatxc/initialize-metrics? #t boolean #f #t)
(heatxc/inlet-temp/urf 0.8 real #f 0.8)
(heatxc/cross-flow? #t boolean #f #t)
(heatxc/groups () list #f ())
(heatxc/geom () list #f ())
(heatxc/ntu-approach? () list #f ())
(heatxc/sv-ratio 1 real #f 1)
(heatxc/verbosity 0 integer #f 0)
(heatxc/h-inlets () list #f ())
(heatxc/models () list #f ())
(heatxc/on? #f boolean #f #f)
(case-file-units "si" string #f "si")
(airpak-specific? #f boolean #f #f)
(tgrid-file? #f boolean #f #f)
(pcb/zone-info () list #f ())
(ccs-scale-factor 1 real #f 1)
(active-ccs-name "" string #f "")
(ccs-display-settings () list #f ())
(ccs-dir/settings () list #f ())
(icepak/siwavemap_files () list #f ())
(icepak/board-config-file "board_config.dat" string #f "board_config.dat")
(icepak/pcb-model-options 0 integer #f 0)
(temperature/split-source-by-ratio? #f boolean #f #f)
(atm-ht-v5? #f boolean #f #f)
(planar-conduction? #f boolean #f #f)
(init-fans? #f boolean #f #f)
(icepak? #f boolean #f #f)
(ffc? #f boolean #f #f)
(monitor/commands () list #f ())
(monitor/convergence-running-averages 1 integer #f 1)
(monitor/convergence-def-list (((check-nth 1) (logic #f))) list #f (((check-nth 1) (logic #f))))
(monitor/integrate-over-state () list #f ())
(monitor/average-over-state () list #f ())
(monitor/report-definitions () list #f ())
(monitor/plotsets () list #f ())
(monitor/convergencesets ((frequency . 1) (condition . #f) (conv-reports) (check-for . #f)) list #f ())
(monitor/monitorsets () list #f ())
(monitor/volume () list #f ())
(monitor/surfaces () list #f ())
(monitor/compute-node-values? #t boolean #f #t)
(graphics/materials () list #f ())
(graphics/animation-objects/recent/history () list #f ())
(graphics/animation-objects () list #f ())
(graphics/xy-plot () list #f ())
(graphics/scene () list #f ())
(graphics/particle-tracks () list #f ())
(graphics/pathlines () list #f ())
(graphics/olic () list #f ())
(graphics/lic () list #f ())
(graphics/vectors/auto-scale-average? #t boolean #f #t)
(graphics/vectors () list #f ())
(graphics/contours () list #f ())
(graphics/mesh () list #f ())
(report/energy-flux/include-viscous-work? #t boolean #f #t)
(report/cell-value? #f boolean #f #f)
(report/forces/print-vec? #t boolean #f #t)
(mesh_user_defined_cells_freed? #f boolean #f #f)
(statistics/x-axis "Iteration" string #f "Iteration")
(statistics/file-basename "statistics-.out" string #f "statistics-.out")
(statistics/write? #f boolean #f #f)
(statistics/window -1 integer #f -1)
(statistics/plot? #f boolean #f #f)
(statistics/print? #f boolean #f #f)
(statistics/monitors () list #f ())
(dynamesh/per/aeromech-method 1 integer #f 1)
(dynamesh/per/aerodamping-monitor? #f boolean #f #f)
(monitor/modal-force () list #f ())
(monitor/aerodamping () list #f ())
(monitor/zero-time-values? #t boolean #f #t)
(monitor/all-mon-values () list #f ())
(fmon/unscaled? #f boolean #f #f)
(fmon/cm-thread-list () thread-list #f ())
(fmon/cl-thread-list () thread-list #f ())
(fmon/cd-thread-list () thread-list #f ())
(monitor/window 0 integer #f 0)
(monitor/moment () list #f ())
(monitor/lift () list #f ())
(monitor/drag () list #f ())
(fmon/old-method? #f boolean #f #f)
(reference-frames/entity-link? #f boolean #f #f)
(file-write/frequency 1 integer #f 1)
(stop-writing-case-data-if-disk-is-full? #f boolean #f #f)
(mmp/autosave/file-decimal-digits 6 integer #f 6)
(mmp/autosave/file-suffix-type "time-step" string #f "time-step")
(mmp/autosave/overwrite? #f boolean #f #f)
(mmp/autosave/filename "" string #f "")
(mmp/autosave/numfiles 0 integer #f 0)
(mmp/autosave/frequency/data 1 integer #f 1)
(mmp/autosave/frequency/case 1 integer #f 1)
(wb/deleted-sliding-interfaces () () #f ())
(wb/container/flags () list #f ())
(wb/original-mesh? #t boolean #f #t)
(wb/original-case? #t boolean #f #t)
(autosave/run-number 1 integer #f 0)
(last-cdat-casefile-name "FFF.msh" string #f "")
(last-casefile-name "FFF.msh" string #f "")
(export/cdat/surfaces () list #f ())
(export/cdat-history () list #f ())
(autosave/solution-points () list #f ())
(autosave/save-case-preference 0 integer #f 0)
(autosave/file-decimal-digits 6 integer #f 6)
(autosave/save-frequency-type "Time Steps" string #f "Time Steps")
(autosave/frequency/crank-angle 0 integer #f 0)
(autosave/file-suffix-type "time-step" string #f "time-step")
(autosave/overwrite? #f boolean #f #f)
(autosave/filename "" string #f "")
(autosave/numfiles 0 integer #f 0)
(autosave/flow-time-freq/data 0 real #f 0)
(autosave/frequency/data 0 integer #f 0)
(autosave/frequency/case 0 integer #f 0)
(hg/wilcox_r14_r (44000000 0 81670) real-list #f (44000000 0 81670))
(hg/wilcox_r14_f (7190000000 -2 0) real-list #f (7190000000 -2 0))
(hg/wilcox_r13_r (100000000000 0 47490) real-list #f (100000000000 0 47490))
(hg/wilcox_r13_f (85900000 0 1170) real-list #f (85900000 0 1170))
(hg/wilcox_r12_r (1450000 1.44 2460) real-list #f (1450000 1.44 2460))
(hg/wilcox_r12_f (1470000 1.63 3160) real-list #f (1470000 1.63 3160))
(hg/wilcox_r11_r (223 0 -1800) real-list #f (223 0 -1800))
(hg/wilcox_r11_f (8510000000 0 55840) real-list #f (8510000000 0 55840))
(hg/wilcox_r10_f (319000 0 87000) real-list #f (319000 0 87000))
(hg/wilcox_r9_f (18270 0 500) real-list #f (18270 0 500))
(hg/wilcox_r8_r (687000 0 6200) real-list #f (687000 0 6200))
(hg/wilcox_r8_f (30600000 0 36600) real-list #f (30600000 0 36600))
(hg/wilcox_r7_f (3090 0 8800) real-list #f (3090 0 8800))
(hg/wilcox_r6_f (18115 0 0) real-list #f (18115 0 0))
(hg/wilcox_r5_f (135 0 76080) real-list #f (135 0 76080))
(hg/wilcox_r4_r (7230000 0 11800) real-list #f (7230000 0 11800))
(hg/wilcox_r4_f (61500000 0 43300) real-list #f (61500000 0 43300))
(hg/wilcox_r3_r (2550000 0 13800) real-list #f (2550000 0 13800))
(hg/wilcox_r3_f (19300000 0 93300) real-list #f (19300000 0 93300))
(hg/wilcox_r2_f (45000000 0 30270) real-list #f (45000000 0 30270))
(hg/wilcox_r1_f (42500000 0 16130) real-list #f (42500000 0 16130))
(hg/hg-hgo-rate (3090 0 8800) real-list #f (3090 0 8800))
(hg/hg-hcl-rate (12044.09 0 18000) real-list #f (12044.09 0 18000))
(hg/h2-h-ratio 1 real #f 1)
(hg/h-o-ratio 0.5 real #f 0.5)
(hg/oh-mode 1 integer #f 1)
(hg/o-mode 0 integer #f 0)
(hg/eval-hg-balance? #f boolean #f #f)
(hg/rate-limit 1e+30 real #f 1e+30)
(hg/model 0 integer #f 0)
(hg/fuel-data-list2 ("" "" "" "" "") string-list #f ("" "" "" "" ""))
(hg/fuel-data-list1 (-1 0 2 0 0 0 0 1 0 0 0 0 1 0) real-list #f (-1 0 2 0 0 0 0 1 0 0 0 0 1 0))
(hg/tmax-value2 2300 real #f 2300)
(hg/tmax-value1 1.1 real #f 1.1)
(hg/tmax-method 0 integer #f 0)
(hg/pdf-type 0 integer #f 0)
(hg/tvar-method 0 integer #f 0)
(hg/turbulent-nint 10 integer #f 10)
(hg/turbulent-spe1 "" string #f "")
(hg/turbulent-mode 0 integer #f 0)
(hg/turbulent? #f boolean #f #f)
(hg/inlet-diffusion? #f boolean #f #f)
(hg/user-source-only? #f boolean #f #f)
(hg/user-hg? #f boolean #f #f)
(soot/max-udf-rate 1000000000000000 real #f 1000000000000000)
(soot/nuc-mass-rates-udf-add (#f #f #f #f #f) boolean-list #f (#f #f #f #f #f))
(soot/nuc-mass-rates-udf (#f #f #f #f #f) boolean-list #f (#f #f #f #f #f))
(soot/ctar-soot-rate (502000000 0 198900) real-list #f (502000000 0 198900))
(soot/ctar-gasf-rate (97700000000 0 286900) real-list #f (97700000000 0 286900))
(soot/ctar-oxid-rate (677000 0 52300) real-list #f (677000 0 52300))
(soot/ctar-fuels ("") string-list #f (""))
(soot/ctar-nfspe (0) integer-list #f (0))
(soot/ctar-pdfsid (0) integer-list #f (0))
(soot/ctar-frac (0.3) real-list #f (0.3))
(soot/uds-id 0 integer #f 0)
(soot/precmixf-from-uds 0 integer #f 0)
(soot/precmixf-from-pdf 1 integer #f 1)
(soot/prec-coeffs (3 3 0 0.0575 3.797003e-06 -0.001920161 0.05277236 7 0.0575 0.128 1.051312 -71.34743 1964.038 -28182.59 223543.4 -932192 1599627 3 0.128 1 0.007988927999999999 -0.008440912 0.0004273194) real-list #f (3 3 0 0.0575 3.797003e-06 -0.001920161 0.05277236 7 0.0575 0.128 1.051312 -71.34743 1964.038 -28182.59 223543.4 -932192 1599627 3 0.128 1 0.007988927999999999 -0.008440912 0.0004273194))
(soot/h2o-massfrac 0 real #f 0)
(soot/co2-massfrac 0 real #f 0)
(soot/o2-massfrac 0.233 real #f 0.233)
(soot/precmw 26 real #f 26)
(soot/fuel-mf (1) real-list #f (1))
(soot/fuel-hnum (4) real-list #f (4))
(soot/fuel-cnum (1) real-list #f (1))
(soot/fuel-spec-list () string-list #f ())
(soot/fuel-nsfuel 1 integer #f 1)
(soot/oh-mode 1 integer #f 1)
(soot/o-mode 0 integer #f 0)
(soot/lee-t2 19778 real temperature 19778)
(soot/lee-c2 8903.51 real soot-oxidation-constant 8903.51)
(soot/lee-c1 105.81 real soot-oxidation-constant 105.81)
(soot/lee-coxid 0.015 real #f 0.015)
(soot/lee-coleff 0.13 real #f 0.13)
(soot/fjo-coxid 1 real #f 1)
(soot/fjo-coleff 0.04 real #f 0.04)
(soot/fjo-comega 105.8125 real soot-oxidation-constant 105.8125)
(soot/mbh-nuc-t2 6390 real temperature 6390)
(soot/mbh-nuc-t1 4378 real temperature 4378)
(soot/mbh-nuc-c2 (178 9.5) real-list #f (178 9.5))
(soot/mbh-nuc-c1 (127 8.880000000000001) real-list #f (127 8.880000000000001))
(soot/mbh-cgamma 9000.6 real soot-surface-growth-scale-factor 9000.6)
(soot/mbo-tgamma 12100 real temperature 12100)
(soot/mbo-talpha 21100 real temperature 21100)
(soot/mbo-cgamma 11700 real soot-surface-growth-scale-factor 11700)
(soot/mbo-cbeta 1 real #f 1)
(soot/mbo-calpha 54 real time-inverse 54)
(soot/sgs-soot () string-list #f ())
(soot/prec-soot () string-list #f ())
(soot/prec-from 0 integer #f 0)
(soot/precsgs-list ("c2h2" "c6h6" "c2h4") string-list #f ("c2h2" "c6h6" "c2h4"))
(soot/two-magnus 4 real #f 4)
(soot/two-beta 8e-14 real soot-linear-termination 8e-14)
(soot/two-alpha 100000 real time-inverse 100000)
(soot/two-activ-energ 90000 real temperature 90000)
(soot/two-exp 2.32e+17 real soot-pre-exponential-constant 2.32e+17)
(soot/two-linear 1e-15 real soot-linear-termination 1e-15)
(soot/two-branch 100 real time-inverse 100)
(soot/two-limit 1e-10 real soot-limiting-nuclei-rate 1e-10)
(soot/one-magnus 4 real #f 4)
(soot/one-activ-energ 20000 real temperature 20000)
(soot/one-equi-max 3 real #f 3)
(soot/one-equi-min 1.67 real #f 1.67)
(soot/one-equi-exp 3 real #f 3)
(soot/one-cf 1.5 real soot-formation-constant-unit 1.5)
(soot/oxid-soot "" string #f "")
(soot/fuel-soot () string-list #f ())
(soot/fuel-stoich 3.6363 real #f 3.6363)
(soot/soot-stoich 2.6667 real #f 2.6667)
(soot/soot-mean-dens 2000 real density 2000)
(soot/soot-incp-mass 144 real #f 144)
(soot/soot-mean-diam 2.2e-08 real length 2.2e-08)
(soot/user-source-only? #f boolean #f #f)
(soot/radio-soot-general? #f boolean #f #f)
(soot/radio-soot-none? #t boolean #f #t)
(soot/oxidation-user? #f boolean #f #f)
(soot/oxidation-lee? #f boolean #f #f)
(soot/oxidation-fjo? #t boolean #f #t)
(soot/tar-species "" string #f "")
(soot/solve-ctar? #f boolean #f #f)
(soot/coal-derived? #f boolean #f #f)
(soot/method-of-moments? #f boolean #f #f)
(soot/moss-brookes-hall? #f boolean #f #f)
(soot/moss-brookes? #f boolean #f #f)
(soot/two-step? #f boolean #f #f)
(soot/one-step? #f boolean #f #f)
(soot/tmax-value2 2300 real #f 2300)
(soot/tmax-value1 1.1 real #f 1.1)
(soot/tmax-method 0 integer #f 0)
(soot/pdf-type 0 integer #f 0)
(soot/tvar-method 0 integer #f 0)
(soot/turbulent-nint 10 integer #f 10)
(soot/turbulent-spe1 "" string #f "")
(soot/turbulent-mode 0 integer #f 0)
(soot/turbulent? #f boolean #f #f)
(soot/turb-schmidt 0.7 real #f 0.7)
(soot/inlet-diffusion? #f boolean #f #f)
(soot/max-soot-fuel 3 integer #f 3)
(soot/max-sgs-spec 5 integer #f 5)
(soot/max-prec-spec 5 integer #f 5)
(sox/h-oh-f (22000000000 -2 0) real-list #f (22000000000 -2 0))
(sox/so-o-r (190546000000000 0 124404) real-list #f (190546000000000 0 124404))
(sox/so-o-f (8709650000 -1.8 0) real-list #f (8709650000 -1.8 0))
(sox/sh-h-r (866961000000000 0 91247) real-list #f (866961000000000 0 91247))
(sox/sh-h-f (1096.48 0 0) real-list #f (1096.48 0 0))
(sox/so-o2-r (1663410 0 18189) real-list #f (1663410 0 18189))
(sox/so-o2-f (446683 0 6458) real-list #f (446683 0 6458))
(sox/h2s-o-r (988553000 0 14420) real-list #f (988553000 0 14420))
(sox/h2s-o-f (4365.16 0 3298) real-list #f (4365.16 0 3298))
(sox/sh-o-r (2985390000 0 40484) real-list #f (2985390000 0 40484))
(sox/sh-o-f (354814000 0 642) real-list #f (354814000 0 642))
(sox/so-oh-r (7691300000 0 28358) real-list #f (7691300000 0 28358))
(sox/so-oh-f (162181000 0 613) real-list #f (162181000 0 613))
(sox/h2s-oh-r (31045600 0 29111) real-list #f (31045600 0 29111))
(sox/h2s-oh-f (138.039 0 894) real-list #f (138.039 0 894))
(sox/h2s-h-r (9375620 0 14940) real-list #f (9375620 0 14940))
(sox/h2s-h-f (18197000 0 1788) real-list #f (18197000 0 1788))
(sox/so3-o-r (100 0 9500) real-list #f (100 0 9500))
(sox/so3-o-f (1200000 0 9500) real-list #f (1200000 0 9500))
(sox/so2-o-r (741000000000000 -1 82689) real-list #f (741000000000000 -1 82689))
(sox/so2-o-f (363 0 -1000) real-list #f (363 0 -1000))
(sox/h2-h-ratio 1 real #f 1)
(sox/h-o-ratio 0.5 real #f 0.5)
(sox/eval-s-balance? #f boolean #f #f)
(sox/rate-limit 1000000 real #f 1000000)
(sox/old-kp? #f boolean #f #f)
(sox/product-intermed? #f boolean #f #f)
(sox/product-so3? #f boolean #f #f)
(sox/fuel-chars-h2s-frac 0 real #f 0)
(sox/fuel-chars-so2-frac 1 real #f 1)
(sox/fuel-chars-convfrac 1 real #f 1)
(sox/fuel-volts-h2s-frac 1 real #f 1)
(sox/fuel-volts-so2-frac 0 real #f 0)
(sox/fuel-volts-convfrac 1 real #f 1)
(sox/fuel-fuels-h2s-frac 1 real #f 1)
(sox/fuel-fuels-so2-frac 0 real #f 0)
(sox/fuel-fuels-convfrac 1 real #f 1)
(sox/fuel-char-s-to 0 integer #f 0)
(sox/fuel-s-intermediate 0 integer #f 0)
(sox/fuel-ys-char 0 real #f 0)
(sox/fuel-ys-volatile 0 real #f 0)
(sox/fuel-ys-fuel 0 real #f 0)
(sox/fuel-species "" string #f "")
(sox/fuel-type 1 integer #f 1)
(sox/fuel-data-list4-combusting () () #f ())
(sox/fuel-data-list3-droplet () () #f ())
(sox/fuel-data-list2 ("" "" "" "" "") string-list #f ("" "" "" "" ""))
(sox/fuel-data-list1 (-1 0 2 0 0 0 1 0 1 0 0 1 1 0) real-list #f (-1 0 2 0 0 0 1 0 1 0 0 1 1 0))
(sox/oh-mode 1 integer #f 1)
(sox/o-mode 0 integer #f 0)
(sox/tmax-value2 2300 real #f 2300)
(sox/tmax-value1 1.1 real #f 1.1)
(sox/tmax-method 0 integer #f 0)
(sox/pdf-type 0 integer #f 0)
(sox/tvar-method 0 integer #f 0)
(sox/turbulent-nint 10 integer #f 10)
(sox/turbulent-spe1 "" string #f "")
(sox/turbulent-mode 0 integer #f 0)
(sox/turbulent? #f boolean #f #f)
(sox/inlet-diffusion? #f boolean #f #f)
(sox/user-replace? #f boolean #f #f)
(sox/user-sox? #f boolean #f #f)
(nox/sncr-urea-n2o-m-f (6.9e+17 -2.5 64760) real-list #f (6.9e+17 -2.5 64760))
(nox/sncr-urea-n2o-oh-f (2000000 0 10000) real-list #f (2000000 0 10000))
(nox/sncr-urea-nco-oh-f (10000000 0 0) real-list #f (10000000 0 0))
(nox/sncr-urea-nco-no-f (10000000 0 -390) real-list #f (10000000 0 -390))
(nox/sncr-urea-hnco-m-f (240000000 0.85 68000) real-list #f (240000000 0.85 68000))
(nox/sncr-urea-decomp-2 (61300 0 20980) real-list #f (61300 0 20980))
(nox/sncr-urea-decomp-1 (12700 0 15540) real-list #f (12700 0 15540))
(nox/sncr-nh3-no-f2 (0.35 7.65 125300) real-list #f (0.35 7.65 125300))
(nox/sncr-nh3-n2-f2 (424 5.3 83600) real-list #f (424 5.3 83600))
(nox/sncr-nh3-no-f (221000000000000 0 38160) real-list #f (221000000000000 0 38160))
(nox/sncr-nh3-n2-f (245000000000000 0 29400) real-list #f (245000000000000 0 29400))
(nox/reburn-oh-h2-r (452000 1.6 80815) real-list #f (452000 1.6 80815))
(nox/reburn-oh-h2-f (102000 1.6 13802) real-list #f (102000 1.6 13802))
(nox/reburn-ch1-peq-ch0 (580000 -2.64 -77077) real-list #f (580000 -2.64 -77077))
(nox/reburn-ch1-peq-ch1 (63000000 -3.33 15090) real-list #f (63000000 -3.33 15090))
(nox/reburn-ch1-peq-ch2 (0 0 0) real-list #f (0 0 0))
(nox/reburn-ch2-peq-ch0 (130000000 -2.64 -77077) real-list #f (130000000 -2.64 -77077))
(nox/reburn-ch2-peq-ch1 (14000000000 -3.33 15090) real-list #f (14000000000 -3.33 15090))
(nox/reburn-ch2-peq-ch2 (2300000 -1.54 27977) real-list #f (2300000 -1.54 27977))
(nox/reburn-ch3-peq-ch0 (21000000000 -2.64 -77077) real-list #f (21000000000 -2.64 -77077))
(nox/reburn-ch3-peq-ch1 (2300000000000 -3.33 15090) real-list #f (2300000000000 -3.33 15090))
(nox/reburn-ch3-peq-ch2 (370000000 -1.54 27977) real-list #f (370000000 -1.54 27977))
(nox/reburn-ch4-peq-ch0 (306000000000 -2.64 -77077) real-list #f (306000000000 -2.64 -77077))
(nox/reburn-ch4-peq-ch1 (33100000000000 -3.33 15090) real-list #f (33100000000000 -3.33 15090))
(nox/reburn-ch4-peq-ch2 (5300000000 -1.54 27977) real-list #f (5300000000 -1.54 27977))
(nox/reburn-ch3-no (200000 0 0) real-list #f (200000 0 0))
(nox/reburn-ch2-no (1400000 0 550) real-list #f (1400000 0 550))
(nox/reburn-ch1-no (100000000 0 0) real-list #f (100000000 0 0))
(nox/n2opath-n2o-no1-r (1.45e-29 9.259 11651) real-list #f (1.45e-29 9.259 11651))
(nox/n2opath-n2o-no1-f (29000000 0 11651) real-list #f (29000000 0 11651))
(nox/n2opath-n2-n2o-r (400000000 0 28234) real-list #f (400000000 0 28234))
(nox/n2opath-n2-n2o-f (4.44e+32 -8.358000000000001 28234) real-list #f (4.44e+32 -8.358000000000001 28234))
(nox/fuel-char-no (230 0 34100) real-list #f (230 0 34100))
(nox/fuel-nh3-no-r (180000000 0 27000) real-list #f (180000000 0 27000))
(nox/fuel-nh3-no-f (4000000 0 32000) real-list #f (4000000 0 32000))
(nox/fuel-hcn-no-r (3000000000000 0 60000) real-list #f (3000000000000 0 60000))
(nox/fuel-hcn-no-f (10000000000 0 67000) real-list #f (10000000000 0 67000))
(nox/prompt-no (6400000 0 72500) real-list #f (6400000 0 72500))
(nox/thermal-oh-pe (212.9 -0.57 4595) real-list #f (212.9 -0.57 4595))
(nox/thermal-o-fe (397000 -0.5 31090) real-list #f (397000 -0.5 31090))
(nox/thermal-o-pe (36.64 0.5 27123) real-list #f (36.64 0.5 27123))
(nox/thermal-z3-r (170000000 0 24560) real-list #f (170000000 0 24560))
(nox/thermal-z3-f (71000000 0 450) real-list #f (71000000 0 450))
(nox/thermal-z2-r (3810 1 20820) real-list #f (3810 1 20820))
(nox/thermal-z2-f (18000 1 4680) real-list #f (18000 1 4680))
(nox/thermal-z1-r (38000000 0 425) real-list #f (38000000 0 425))
(nox/thermal-z1-f (180000000 0 38370) real-list #f (180000000 0 38370))
(nox/urea-to-hnco-frac 0.45 real #f 0.45)
(nox/urea-to-nh3-frac 0.55 real #f 0.55)
(nox/urea-decomp-model 0 integer #f 0)
(nox/sncr-co-shift-const (17.5 68) real-list #f (17.5 68))
(nox/sncr-co-shift? #f boolean #f #f)
(nox/sncr-o2vf-limit 0 real #f 0)
(nox/sncr-temp-max 1373 real #f 1373)
(nox/sncr-temp-min 1073 real #f 1073)
(nox/sncr-chem-model 1 integer #f 1)
(nox/sncr-pdf-f-reagent 1 real #f 1)
(nox/sncr-pdf-stream-id 1 integer #f 1)
(nox/sncr-species "" string #f "")
(nox/sncr-injection-type 0 integer #f 0)
(nox/reburn-temp-max 2100 real #f 2100)
(nox/reburn-temp-min 1600 real #f 1600)
(nox/reburn-modhcn-rate 0.0004 real #f 0.0004)
(nox/reburn-modno-rate 0.0004 real #f 0.0004)
(nox/reburn-fuel-species-list () string-list #f ())
(nox/reburn-fuel-species "" string #f "")
(nox/reburn-fuel-type 0 integer #f 0)
(nox/reburn-model 0 integer #f 0)
(nox/n2opath-oh-mode 0 integer #f 0)
(nox/n2opath-o-mode 0 integer #f 0)
(nox/n2opath-n2o-model 0 integer #f 0)
(nox/fuel-nh3-switch 1 integer #f 1)
(nox/fuel-charn-nh3-frac 0 real #f 0)
(nox/fuel-charn-hcn-frac 0 real #f 0)
(nox/fuel-charn-nox-frac 1 real #f 1)
(nox/fuel-charn-convfrac 1 real #f 1)
(nox/fuel-char-n-to 3 integer #f 3)
(nox/fuel-bet-area 25000 real #f 25000)
(nox/fuel-yn-char 0 real #f 0)
(nox/fuel-yn-volatile 0 real #f 0)
(nox/fuel-yn-fuel 0 real #f 0)
(nox/fuel-voltn-nh3-frac 0 real #f 0)
(nox/fuel-voltn-hcn-frac 1 real #f 1)
(nox/fuel-voltn-nox-frac 0 real #f 0)
(nox/fuel-voltn-convfrac 1 real #f 1)
(nox/fuel-fueln-nh3-frac 0 real #f 0)
(nox/fuel-fueln-hcn-frac 1 real #f 1)
(nox/fuel-fueln-nox-frac 0 real #f 0)
(nox/fuel-fueln-convfrac 1 real #f 1)
(nox/fuel-n-intermediate 2 integer #f 2)
(nox/fuel-fuel-species "" string #f "")
(nox/fuel-type 0 integer #f 0)
(nox/fuel-data-list4-combusting () () #f ())
(nox/fuel-data-list3-droplet () () #f ())
(nox/fuel-data-list2 ("" "" "" "" "") string-list #f ("" "" "" "" ""))
(nox/fuel-data-list1 (-1 0 2 0 1 1 2 0 1 0 1 0 3 0 1 1 0 0 25000) real-list #f (-1 0 2 0 1 1 2 0 1 0 1 0 3 0 1 1 0 0 25000))
(nox/prompt-equivalence-ratio 1 real #f 1)
(nox/prompt-carbon-number 1 real #f 1)
(nox/prompt-fuel-species-list () string-list #f ())
(nox/prompt-fuel-species "" string #f "")
(nox/thermal-limit-switch 0 integer #f 0)
(nox/thermal-oh-mode 0 integer #f 0)
(nox/thermal-o-mode 0 integer #f 0)
(nox/user-eq-mw (30.0061 27.02582 17.03061 44.0128 60.05583 43.02522 42.01725) real-list #f (30.0061 27.02582 17.03061 44.0128 60.05583 43.02522 42.01725))
(nox/set-user-mw? #f boolean #f #f)
(nox/tmax-value2 2300 real #f 2300)
(nox/tmax-value1 1.1 real #f 1.1)
(nox/tmax-method 0 integer #f 0)
(nox/pdf-type 0 integer #f 0)
(nox/tvar-method 0 integer #f 0)
(nox/turbulent-nint 10 integer #f 10)
(nox/turbulent-spe1 "" string #f "")
(nox/turbulent-mode 0 integer #f 0)
(nox/turbulent? #f boolean #f #f)
(nox/inlet-diffusion? #f boolean #f #f)
(nox/sncr-udf-replace? #f boolean #f #f)
(nox/n2opath-udf-replace? #f boolean #f #f)
(nox/fuel-udf-replace? #f boolean #f #f)
(nox/prompt-udf-replace? #f boolean #f #f)
(nox/thermal-udf-replace? #f boolean #f #f)
(nox/user-nox? #f boolean #f #f)
(nox/sncr-nox? #f boolean #f #f)
(nox/reburn-nox? #f boolean #f #f)
(nox/n2opath-nox? #f boolean #f #f)
(nox/fuel-nox? #f boolean #f #f)
(nox/prompt-nox? #f boolean #f #f)
(nox/thermal-nox? #f boolean #f #f)
(nox/max-rbfuel-spec 5 integer #f 5)
(nox/max-fuel-spec 10 integer #f 10)
(soot/beta-models? #f boolean #f #f)
(sox/beta-models? #f boolean #f #f)
(pollutant/pdf-all-cells? #t boolean #f #t)
(pollutant/int-data 0 integer #f 0)
(pollutant/real-data 0 real #f 0)
(pollut_hg/eq_start 15 integer #f 15)
(pollut_soot/eq_start 12 integer #f 12)
(pollut_sox/eq_start 7 integer #f 7)
(pollut_hocl/patch 0 real #f 0)
(pollut_hgcl/patch 0 real #f 0)
(pollut_cl2/patch 0 real #f 0)
(pollut_cl/patch 0 real #f 0)
(pollut_hgo/patch 0 real #f 0)
(pollut_hcl/patch 0 real #f 0)
(pollut_hgcl2/patch 0 real #f 0)
(pollut_hg/patch 0 real #f 0)
(pollut_ctar/patch 0 real #f 0)
(pollut_nuclei/patch 0 real #f 0)
(pollut_soot/patch 0 real #f 0)
(pollut_so/patch 0 real #f 0)
(pollut_sh/patch 0 real #f 0)
(pollut_so3/patch 0 real #f 0)
(pollut_h2s/patch 0 real #f 0)
(pollut_so2/patch 0 real #f 0)
(pollut_nco/patch 0 real #f 0)
(pollut_hnco/patch 0 real #f 0)
(pollut_urea/patch 0 real #f 0)
(pollut_n2o/patch 0 real #f 0)
(pollut_nh3/patch 0 real #f 0)
(pollut_hcn/patch 0 real #f 0)
(pollut_no/patch 0 real #f 0)
(tvar/cdiss 2 real #f 2)
(tvar/cprod 2.86 real #f 2.86)
(tvar/explicit-relax 1 real #f 1)
(tvar/residual-tolerance 0.0001 real #f 0.0001)
(tvar/iter-tolerance 0.05 real #f 0.05)
(tvar/max-iter 5 integer #f 5)
(tvar/patch 0 real mixture-fraction-variance 0)
(tvar/default 0 real mixture-fraction-variance 0)
(tvar/amg-stabilization 0 integer #f 0)
(tvar/amg-method 0 integer #f 0)
(tvar/cycle-type 0 integer #f 0)
(tvar/amg-beta 0.7 real #f 0.7)
(tvar/amg-alpha 0.1 real #f 0.1)
(tvar/scheme 1 integer #f 1)
(tvar/relax 0.9 real #f 0.9)
(tvar/solve? #f boolean #f #f)
(soot-mom/nucl-scalar-id 0 integer #f 0)
(soot-mom/nucl-src-udm-id 0 integer #f 0)
(soot-mom/nucl-feedback? #f boolean #f #f)
(soot-mom/use-scalar-nucl? #f boolean #f #f)
(soot-mom/src-linearization-apfac 0.5 real #f 0.5)
(soot-mom/integration-method 1 integer #f 1)
(soot-mom/src-linearization-const 0.5 real #f 0.5)
(soot-mom/src-linearization? #t boolean #f #t)
(soot-mom/clip-vars? #f boolean #f #f)
(soot-mom/init-agg-values (0 0 0 0 0 0 0 0 0 0) real-list #f (0 0 0 0 0 0 0 0 0 0))
(soot-mom/agg-exp-urf (1 1 1 1 1 1) real-list #f (1 1 1 1 1 1))
(soot-mom/exp-urf (1 1 1 1 1 1) real-list #f (1 1 1 1 1 1))
(soot-mom/max-np-agg 200 integer #f 200)
(soot-mom/agg-tol 1e-06 real #f 1e-06)
(soot-mom/fract-dim 1.8 real #f 1.8)
(soot-mom/min-dia-agg 1e-08 real #f 1e-08)
(soot-mom/show-agg-model? #t boolean #f #t)
(soot-mom/min-act-site-frac 0.2 real #f 0.2)
(soot-mom/init-mom-values (0 0 0 0 0 0 0 0 0 0) real-list #f (0 0 0 0 0 0 0 0 0 0))
(soot-mom/oxid-mode 0 integer #f 0)
(soot-mom/sgs? #t boolean #f #t)
(soot-mom/coag? #t boolean #f #t)
(soot-mom/nuc? #t boolean #f #t)
(soot-mom/agg-apfac 0.25 real #f 0.25)
(soot-mom/apfac 0.25 real #f 0.25)
(soot-mom/min-dia-fac 0.001 real #f 0.001)
(soot-mom/nnorm 1000000000000000 real #f 1000000000000000)
(soot-mom/sgs-rxn-params ((0 42000000000 54390000 0 3900000000 46020000 0) (1 10000000 5983000 0.734 368000 71550000 1.139) (2 20000000000 0 0 0 0 0) (3 80000 15900000 1.56) (4 2000000000 31387000 0) (5 0.13 0 0)) () #f ((0 42000000000 54390000 0 3900000000 46020000 0) (1 10000000 5983000 0.734 368000 71550000 1.139) (2 20000000000 0 0 0 0 0) (3 80000 15900000 1.56) (4 2000000000 31387000 0) (5 0.13 0 0)))
(soot-mom/sgs-user-mech? #f boolean #f #f)
(soot-mom/site-density 2300000000000000 real #f 2300000000000000)
(soot-mom/interp-order-agg 1 integer #f 1)
(soot-mom/gfn-interp-order 2 integer #f 2)
(soot-mom/exterp-order 1 integer #f 1)
(soot-mom/interp-order 2 integer #f 2)
(soot-mom/cont-ca-limit 0.1 real #f 0.1)
(soot-mom/free-ca-limit 10 real #f 10)
(soot-mom/pah-multi-fac 1 real #f 1)
(soot-mom/prec-stick-coeffs () () #f ())
(soot-mom/nuc-pahs ("c2h2") string-list #f ("c2h2"))
(soot-mom/epsilon 2.2 real #f 2.2)
(soot-mom/avg-pah-conc? #f boolean #f #f)
(soot-mom/nuc-rxn-params () () #f ())
(soot-mom/num-nuc-rxns 1 integer #f 1)
(soot-mom/nuc-mech? #f boolean #f #f)
(soot-mom/inlet-diffusion? #t boolean #f #t)
(soot-mom/active? #f boolean #f #f)
(soot-mom/solve-area-density? #f boolean #f #f)
(soot-mom/solve-agg-moments? #f boolean #f #f)
(soot-mom/n-moments 3 integer #f 3)
(soot-mom/solve? #f boolean #f #f)
(soot-mom/residual-tolerance 0.0001 real #f 0.0001)
(soot-mom/iter-tolerance 0.05 real #f 0.05)
(soot-mom/explicit-relax 1 real #f 1)
(soot-agg-moment/patch (0 0 0 0 0 0 0 0 0 0) real-list #f (0 0 0 0 0 0 0 0 0 0))
(soot-moment/patch (0 0 0 0 0 0 0 0 0 0) real-list #f (0 0 0 0 0 0 0 0 0 0))
(soot-mom/default 0 real #f 0)
(soot-mom/max-iter 5 integer #f 5)
(soot-mom/amg-stabilization 0 integer #f 0)
(soot-mom/amg-method 0 integer #f 0)
(soot-mom/cycle-type 0 integer #f 0)
(soot-mom/amg-beta 0.1 real #f 0.1)
(soot-mom/amg-alpha 0.1 real #f 0.1)
(soot-mom/scheme 1 integer #f 1)
(soot-mom/relax 1 real #f 1)
(soot-mom/allow-max-moments? #f boolean #f #f)
(soot-mom/enable? #f boolean #f #f)
(soot-mom/show-mom? #t boolean #f #t)
(sootspecies-21/patch 0 real #f 0)
(sootspecies-20/patch 0 real #f 0)
(sootspecies-19/patch 0 real #f 0)
(sootspecies-18/patch 0 real #f 0)
(sootspecies-17/patch 0 real #f 0)
(sootspecies-16/patch 0 real #f 0)
(sootspecies-15/patch 0 real #f 0)
(sootspecies-14/patch 0 real #f 0)
(sootspecies-13/patch 0 real #f 0)
(sootspecies-12/patch 0 real #f 0)
(sootspecies-11/patch 0 real #f 0)
(sootspecies-10/patch 0 real #f 0)
(sootspecies-9/patch 0 real #f 0)
(sootspecies-8/patch 0 real #f 0)
(sootspecies-7/patch 0 real #f 0)
(sootspecies-6/patch 0 real #f 0)
(sootspecies-5/patch 0 real #f 0)
(sootspecies-4/patch 0 real #f 0)
(sootspecies-3/patch 0 real #f 0)
(sootspecies-2/patch 0 real #f 0)
(sootspecies-1/patch 0 real #f 0)
(sootspecies-0/patch 0 real #f 0)
(soot-mom/user-rates? #f boolean #f #f)
(soot-mom/soot-mech-exist? #f boolean #f #f)
(soot-mom/mech-chemkin? #f boolean #f #f)
(soot-mech-imported #f boolean #f #f)
(soot-mech-on? #f boolean #f #f)
(soot-mech-userdefined #f boolean #f #f)
(sootspecies/default (0) real-list #f (0))
(sootspecies/pseudo-relax 0.75 real #f 0.75)
(sootspecies/pseudo-specific? #f boolean #f #f)
(sootspecies/pseudo-cycle-type 3 integer #f 3)
(sootspecies/pseudo-time-scale-factor 1 real #f 1)
(sootspecies/pseudo-implicit-relax 1 real #f 1)
(sootspecies/secondary-gradient? #t boolean #f #t)
(sootspecies/inlet-diffusion? #f boolean #f #f)
(sootspecies/sct 0.7 real #f 0.7)
(sootspecies/urf 1 real #f 1)
(sootspecies/explicit-relax? #f boolean #f #f)
(sootspecies/relax 1 real #f 1)
(sootspecies/normalize-sootspecies? #t boolean #f #t)
(sootspecies/residual-tolerance (1e-05) real-list #f (1e-05))
(sootspecies/iter-tolerance (0.05) real-list #f (0.05))
(sootspecies/max-iter (5) integer-list #f (5))
(sootspecies/set-urf-together? #t boolean #f #t)
(sootspecies/explicit-relax (1) real-list #f (1))
(sootspecies/scheme 1 integer #f 1)
(sootspecies/amg-stabilization 0 integer #f 0)
(sootspecies/amg-method 0 integer #f 0)
(sootspecies/cycle-type 0 integer #f 0)
(sootspecies/amg-beta 0.7 real #f 0.7)
(sootspecies/amg-alpha 0.1 real #f 0.1)
(sootspecies/solve? #f boolean #f #f)
(sootspecies/active? #f boolean #f #f)
(pollut/unity-le-use-k? #t boolean #f #t)
(pollutant/old-injection-material-sources-need-update? #f cxboolean #f #f)
(pollutant/patch (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) real-list #f (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(pollutant/default (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) real-list #f (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(pollutant/amg-stabilization (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) integer-list #f (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(pollutant/amg-method (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) integer-list #f (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(pollutant/cycle-type (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) integer-list #f (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(pollutant/amg-beta (0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7) real-list #f (0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.7))
(pollutant/amg-alpha (0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1) real-list #f (0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1))
(pollutant/scheme (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) integer-list #f (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(pollutant/relax (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) real-list #f (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(pollutant/solve? (#f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f) boolean-list #f (#f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f))
(pollutant/active? (#f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f) boolean-list #f (#f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f))
(pollut/isat-solve-pollut-only? #t boolean #f #t)
(pollut/pollut-spe-sol-list () string-list #f ())
(pollut/equil-spe-list () string-list #f ())
(pollut/orig-spe-list () string-list #f ())
(pollut/detailed-chem-post-proc? #f boolean #f #f)
(ecfm-sigma/dual-ts-cycle-type 0 integer #f 0)
(ecfm-sigma/dual-ts-implicit-relax 1 real #f 1)
(ecfm-sigma/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(ecfm-sigma/dual-ts-limit-eff-relax? #f boolean #f #f)
(lithium/dual-ts-cycle-type 3 integer #f 3)
(lithium/dual-ts-implicit-relax 1 real #f 1)
(lithium/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(lithium/dual-ts-limit-eff-relax? #f boolean #f #f)
(potential-2/dual-ts-cycle-type 3 integer #f 3)
(potential-2/dual-ts-implicit-relax 1 real #f 1)
(potential/dual-ts-cycle-type 3 integer #f 3)
(potential/dual-ts-implicit-relax 1 real #f 1)
(potential/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(potential/dual-ts-limit-eff-relax? #f boolean #f #f)
(uds/dual-ts-cycle-type (3 3) integer-list #f (3))
(uds/dual-ts-implicit-relax (1 1) real-list #f (1))
(uds/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(uds/dual-ts-limit-eff-relax? #f boolean #f #f)
(vd-fvar/dual-ts-cycle-type 0 integer #f 0)
(vd-fvar/dual-ts-implicit-relax 0.9 real #f 0.9)
(vd-fvar/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(vd-fvar/dual-ts-limit-eff-relax? #f boolean #f #f)
(vc-fvar/dual-ts-cycle-type 0 integer #f 0)
(vc-fvar/dual-ts-implicit-relax 0.9 real #f 0.9)
(vc-fvar/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(vc-fvar/dual-ts-limit-eff-relax? #f boolean #f #f)
(ic-fvar/dual-ts-cycle-type 0 integer #f 0)
(ic-fvar/dual-ts-implicit-relax 0.9 real #f 0.9)
(ic-fvar/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(ic-fvar/dual-ts-limit-eff-relax? #f boolean #f #f)
(inert/dual-ts-cycle-type 0 integer #f 0)
(inert/dual-ts-implicit-relax 1 real #f 1)
(inert/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(inert/dual-ts-limit-eff-relax? #f boolean #f #f)
(soot-mom/dual-ts-cycle-type 0 integer #f 0)
(soot-mom/dual-ts-implicit-relax 1 real #f 1)
(soot-mom/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(soot-mom/dual-ts-limit-eff-relax? #f boolean #f #f)
(species/dual-ts-cycle-type (0) integer-list #f (0))
(species/dual-ts-implicit-relax (1) real-list #f (1))
(species/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(species/dual-ts-limit-eff-relax? (#f) boolean-list #f (#f))
(sootspecies/dual-ts-cycle-type 0 integer #f 0)
(sootspecies/dual-ts-implicit-relax 1 real #f 1)
(sootspecies/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(sootspecies/dual-ts-limit-eff-relax? #f boolean #f #f)
(pollutant/dual-ts-cycle-type (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) integer-list #f (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
(pollutant/dual-ts-implicit-relax (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) real-list #f (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(pollutant/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(pollutant/dual-ts-limit-eff-relax? #f boolean #f #f)
(pdftss/dual-ts-cycle-type 0 integer #f 0)
(pdftss/dual-ts-explicit-relax 0.75 real #f 0.75)
(pdftss/dual-ts-implicit-relax 1 real #f 1)
(pdftss/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(pdftss/dual-ts-limit-eff-relax? #f boolean #f #f)
(pdftss/dual-ts-time-scale-factor 1 real #f 1)
(pdftss/dual-ts-specific? #f boolean #f #f)
(premix-g-var/dual-ts-cycle-type 0 integer #f 0)
(premix-g-var/dual-ts-explicit-relax 0.75 real #f 0.75)
(premix-g-var/dual-ts-implicit-relax 0.8 real #f 0.8)
(premix-g-var/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(premix-g-var/dual-ts-limit-eff-relax? #f boolean #f #f)
(premix-g-var/dual-ts-time-scale-factor 1 real #f 1)
(premix-g-var/dual-ts-specific? #f boolean #f #f)
(premixc/dual-ts-cycle-type 0 integer #f 0)
(premixc/dual-ts-explicit-relax 0.75 real #f 0.75)
(premixc/dual-ts-implicit-relax 0.9 real #f 0.9)
(premixc/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(premixc/dual-ts-limit-eff-relax? #f boolean #f #f)
(premixc/dual-ts-time-scale-factor 1 real #f 1)
(premixc/dual-ts-specific? #f boolean #f #f)
(fvar2/dual-ts-cycle-type 0 integer #f 0)
(fvar2/dual-ts-explicit-relax 0.75 real #f 0.75)
(fvar2/dual-ts-implicit-relax 0.9 real #f 0.9)
(fvar2/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(fvar2/dual-ts-limit-eff-relax? #f boolean #f #f)
(fvar2/dual-ts-time-scale-factor 1 real #f 1)
(fvar2/dual-ts-specific? #f boolean #f #f)
(fvar/dual-ts-cycle-type 0 integer #f 0)
(fvar/dual-ts-explicit-relax 0.75 real #f 0.75)
(fvar/dual-ts-implicit-relax 0.9 real #f 0.9)
(fvar/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(fvar/dual-ts-limit-eff-relax? #f boolean #f #f)
(fvar/dual-ts-time-scale-factor 1 real #f 1)
(fvar/dual-ts-specific? #f boolean #f #f)
(fmean2/dual-ts-cycle-type 0 integer #f 0)
(fmean2/dual-ts-explicit-relax 0.75 real #f 0.75)
(fmean2/dual-ts-implicit-relax 1 real #f 1)
(fmean2/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(fmean2/dual-ts-limit-eff-relax? #f boolean #f #f)
(fmean2/dual-ts-time-scale-factor 1 real #f 1)
(fmean2/dual-ts-specific? #f boolean #f #f)
(fmean/dual-ts-cycle-type 0 integer #f 0)
(fmean/dual-ts-explicit-relax 0.75 real #f 0.75)
(fmean/dual-ts-implicit-relax 1 real #f 1)
(fmean/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(fmean/dual-ts-limit-eff-relax? #f boolean #f #f)
(fmean/dual-ts-time-scale-factor 1 real #f 1)
(fmean/dual-ts-specific? #f boolean #f #f)
(f/dual-ts-cycle-type 0 integer #f 0)
(f/dual-ts-explicit-relax 0.75 real #f 0.75)
(f/dual-ts-implicit-relax 0.8 real #f 0.8)
(f/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(f/dual-ts-limit-eff-relax? #f boolean #f #f)
(f/dual-ts-time-scale-factor 1 real #f 1)
(f/dual-ts-specific? #f boolean #f #f)
(v2/dual-ts-cycle-type 0 integer #f 0)
(v2/dual-ts-explicit-relax 0.75 real #f 0.75)
(v2/dual-ts-implicit-relax 0.8 real #f 0.8)
(v2/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(v2/dual-ts-limit-eff-relax? #f boolean #f #f)
(v2/dual-ts-time-scale-factor 1 real #f 1)
(v2/dual-ts-specific? #f boolean #f #f)
(retheta/dual-ts-cycle-type 0 integer #f 0)
(retheta/dual-ts-explicit-relax 0.75 real #f 0.75)
(retheta/dual-ts-implicit-relax 0.8 real #f 0.8)
(retheta/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(retheta/dual-ts-limit-eff-relax? #f boolean #f #f)
(retheta/dual-ts-time-scale-factor 1 real #f 1)
(retheta/dual-ts-specific? #f boolean #f #f)
(intermit/dual-ts-cycle-type 0 integer #f 0)
(intermit/dual-ts-explicit-relax 0.75 real #f 0.75)
(intermit/dual-ts-implicit-relax 0.8 real #f 0.8)
(intermit/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(intermit/dual-ts-limit-eff-relax? #f boolean #f #f)
(intermit/dual-ts-time-scale-factor 1 real #f 1)
(intermit/dual-ts-specific? #f boolean #f #f)
(drsm/dual-ts-cycle-type 0 integer #f 0)
(drsm/dual-ts-explicit-relax 0.75 real #f 0.75)
(drsm/dual-ts-implicit-relax 0.5 real #f 0.5)
(drsm/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(drsm/dual-ts-limit-eff-relax? #f boolean #f #f)
(drsm/dual-ts-time-scale-factor 1 real #f 1)
(drsm/dual-ts-specific? #f boolean #f #f)
(nut/dual-ts-cycle-type 0 integer #f 0)
(nut/dual-ts-explicit-relax 0.75 real #f 0.75)
(nut/dual-ts-implicit-relax 0.8 real #f 0.8)
(nut/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(nut/dual-ts-limit-eff-relax? #f boolean #f #f)
(nut/dual-ts-time-scale-factor 1 real #f 1)
(nut/dual-ts-specific? #f boolean #f #f)
(omega/dual-ts-cycle-type 0 integer #f 0)
(omega/dual-ts-explicit-relax 0.75 real #f 0.75)
(omega/dual-ts-implicit-relax 0.8 real #f 0.8)
(omega/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(omega/dual-ts-limit-eff-relax? #f boolean #f #f)
(omega/dual-ts-time-scale-factor 1 real #f 1)
(omega/dual-ts-specific? #f boolean #f #f)
(epsilon/dual-ts-cycle-type 0 integer #f 0)
(epsilon/dual-ts-explicit-relax 0.75 real #f 0.75)
(epsilon/dual-ts-implicit-relax 0.8 real #f 0.8)
(epsilon/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(epsilon/dual-ts-limit-eff-relax? #f boolean #f #f)
(epsilon/dual-ts-time-scale-factor 1 real #f 1)
(epsilon/dual-ts-specific? #f boolean #f #f)
(kl/dual-ts-cycle-type 0 integer #f 0)
(kl/dual-ts-explicit-relax 0.75 real #f 0.75)
(kl/dual-ts-implicit-relax 0.8 real #f 0.8)
(kl/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(kl/dual-ts-limit-eff-relax? #f boolean #f #f)
(kl/dual-ts-time-scale-factor 1 real #f 1)
(kl/dual-ts-specific? #f boolean #f #f)
(k/dual-ts-cycle-type 0 integer #f 0)
(k/dual-ts-explicit-relax 0.75 real #f 0.75)
(k/dual-ts-implicit-relax 0.8 real #f 0.8)
(k/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(k/dual-ts-limit-eff-relax? #f boolean #f #f)
(k/dual-ts-time-scale-factor 1 real #f 1)
(k/dual-ts-specific? #f boolean #f #f)
(enthalpy/dual-ts-cycle-type 3 integer #f 3)
(enthalpy/dual-ts-explicit-relax 0.75 real #f 0.75)
(enthalpy/dual-ts-implicit-relax 1 real #f 1)
(enthalpy/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(enthalpy/dual-ts-limit-eff-relax? #f boolean #f #f)
(enthalpy/dual-ts-time-scale-factor 1 real #f 1)
(enthalpy/dual-ts-specific? #f boolean #f #f)
(tvar/dual-ts-cycle-type 0 integer #f 0)
(tvar/dual-ts-explicit-relax 0.75 real #f 0.75)
(tvar/dual-ts-implicit-relax 0.9 real #f 0.9)
(tvar/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(tvar/dual-ts-limit-eff-relax? #f boolean #f #f)
(tvar/dual-ts-time-scale-factor 1 real #f 1)
(tvar/dual-ts-specific? #f boolean #f #f)
(temperature/dual-ts-cycle-type 3 integer #f 3)
(temperature/dual-ts-explicit-relax 0.75 real #f 0.75)
(temperature/dual-ts-implicit-relax 1 real #f 1)
(temperature/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(temperature/dual-ts-limit-eff-relax? #f boolean #f #f)
(temperature/dual-ts-time-scale-factor 1 real #f 1)
(temperature/dual-ts-specific? #f boolean #f #f)
(w-swirl/dual-ts-cycle-type 0 integer #f 0)
(w-swirl/dual-ts-explicit-relax 0.75 real #f 0.75)
(w-swirl/dual-ts-implicit-relax 0.9 real #f 0.9)
(w-swirl/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(w-swirl/dual-ts-limit-eff-relax? #f boolean #f #f)
(w-swirl/dual-ts-time-scale-factor 1 real #f 1)
(w-swirl/dual-ts-specific? #f boolean #f #f)
(z-mom/dual-ts-cycle-type 0 integer #f 0)
(y-mom/dual-ts-cycle-type 0 integer #f 0)
(x-mom/dual-ts-cycle-type 0 integer #f 0)
(pressure/dual-ts-cycle-type 1 integer #f 1)
(mom/dual-ts-explicit-relax 0.5 real #f 0.5)
(mom/dual-ts-implicit-relax 0.7 real #f 0.7)
(mom/dual-ts-minmax-eff-relax (0.01 1) real-list #f (0.01 1))
(mom/dual-ts-limit-eff-relax? #f boolean #f #f)
(pressure/dual-ts-explicit-relax 0.5 real #f 0.5)
(pressure/dual-ts-implicit-relax 0.7 real #f 0.7)
(temperature-var/dual-ts-explicit-relax 1 real #f 1)
(density/dual-ts-explicit-relax 1 real #f 1)
(body-force/dual-ts-explicit-relax 1 real #f 1)
(turb-viscosity/dual-ts-explicit-relax 1 real #f 1)
(delh/dual-ts-explicit-relax 0.9 real #f 0.9)
(p1/dual-ts-cycle-type 0 integer #f 0)
(p1/dual-ts-explicit-relax 1 real #f 1)
(disco/dual-ts-cycle-type 0 integer #f 0)
(disco/dual-ts-explicit-relax 1 real #f 1)
(dual-ts/solid-pseudo-time-scale-factor 1 real #f 1)
(dual-ts/solid-zones-specific? #f boolean #f #f)
(dual-ts/cell-ar/cflvnn 1 real #f 1)
(dual-ts/cell-ar/cflmult 100 real #f 100)
(dual-ts/converg-accelerate-stretch-mesh? #f boolean #f #f)
(dual-ts/use-preconditioned-velocity? #t boolean #f #t)
(dual-ts/relax-compress-density-correction-t? #f boolean #f #f)
(dual-ts/use-coupled-explicit-relax? #t boolean #f #t)
(dual-ts/use-explicit-relax? #f boolean #f #f)
(dual-ts/rm-atau-local-resid? #f boolean #f #f)
(dual-ts/verbosity 0 integer #f 0)
(dual-ts/dtau-prec-vel (#t #t #t) boolean-list #f (#t #t #t))
(dual-ts/compute-every-subiter? #t boolean #f #t)
(dual-ts/courant-number-method "dbns" string #f "dbns")
(dual-ts/courant-number 5 real #f 5)
(mom/pbns-time-stepping-refactor? #t boolean #f #t)
(pseudo/effective-relax-verbosity 0 integer #f 0)
(pressure/pseudo-cpl-expl-omega-v 0.5 real #f 0.5)
(pressure/pseudo-cpl-expl-omega-p 0.5 real #f 0.5)
(pressure-coupled/mom/pseudo-explicit-relax 0.5 real #f 0.5)
(pressure-coupled/pressure/pseudo-explicit-relax 0.5 real #f 0.5)
(uds/pseudo-cycle-type (3 3) integer-list #f (3))
(uds/pseudo-time-scale-factor (1 1) real-list #f (1))
(uds/pseudo-implicit-relax (1 1) real-list #f (1))
(uds/pseudo-specific? (#f #f) boolean-list #f (#f))
(uds/pseudo-relax (0.75 0.75) real-list #f (0.75))
(soot-mom/pseudo-cycle-type 3 integer #f 3)
(disco/pseudo-cycle-type 3 integer #f 3)
(p1/pseudo-cycle-type 3 integer #f 3)
(twotemp/pseudo-cycle-type 3 integer #f 3)
(wetsteam/pseudo-cycle-type 3 integer #f 3)
(iac/pseudo-cycle-type 3 integer #f 3)
(pb-disc/pseudo-cycle-type (3) integer-list #f (3))
(pb-dqmom/pseudo-cycle-type (3) integer-list #f (3))
(pb-smm/pseudo-cycle-type (3) integer-list #f (3))
(pb-qmom/pseudo-cycle-type (3) integer-list #f (3))
(pollutant/pseudo-cycle-type (3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3) integer-list #f (3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3))
(ufla-y/pseudo-cycle-type 3 integer #f 3)
(inert/pseudo-cycle-type 3 integer #f 3)
(premix-g-var/pseudo-cycle-type 3 integer #f 3)
(ecfm-sigma/pseudo-cycle-type 3 integer #f 3)
(granular-temperature/pseudo-cycle-type 3 integer #f 3)
(pull/pseudo-cycle-type 3 integer #f 3)
(pdftss/pseudo-cycle-type 3 integer #f 3)
(premixc/pseudo-cycle-type 3 integer #f 3)
(fvar2/pseudo-cycle-type 3 integer #f 3)
(fvar/pseudo-cycle-type 3 integer #f 3)
(fmean2/pseudo-cycle-type 3 integer #f 3)
(fmean/pseudo-cycle-type 3 integer #f 3)
(drsm/pseudo-cycle-type 3 integer #f 3)
(retheta/pseudo-cycle-type 3 integer #f 3)
(intermit/pseudo-cycle-type 3 integer #f 3)
(omega/pseudo-cycle-type 3 integer #f 3)
(kl/pseudo-cycle-type 3 integer #f 3)
(f/pseudo-cycle-type 3 integer #f 3)
(v2/pseudo-cycle-type 3 integer #f 3)
(epsilon/pseudo-cycle-type 3 integer #f 3)
(k/pseudo-cycle-type 3 integer #f 3)
(nut/pseudo-cycle-type 3 integer #f 3)
(w-swirl/pseudo-cycle-type 3 integer #f 3)
(mp/pseudo-cycle-type 3 integer #f 3)
(dqmom-iem/pseudo-cycle-type 3 integer #f 3)
(species/pseudo-cycle-type (3) integer-list #f (3))
(enthalpy/pseudo-cycle-type 3 integer #f 3)
(tvar/pseudo-cycle-type 3 integer #f 3)
(temperature/pseudo-cycle-type 3 integer #f 3)
(soot-mom/pseudo-time-scale-factor 1 real #f 1)
(twotemp/pseudo-time-scale-factor 1 real #f 1)
(wetsteam/pseudo-time-scale-factor 1 real #f 1)
(iac/pseudo-time-scale-factor 1 real #f 1)
(pb-disc/pseudo-time-scale-factor (1) real-list #f (1))
(pb-dqmom/pseudo-time-scale-factor (1) real-list #f (1))
(pb-smm/pseudo-time-scale-factor (1) real-list #f (1))
(pb-qmom/pseudo-time-scale-factor (1) real-list #f (1))
(pollutant/pseudo-time-scale-factor (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) real-list #f (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(ufla-y/pseudo-time-scale-factor 1 real #f 1)
(inert/pseudo-time-scale-factor 1 real #f 1)
(premix-g-var/pseudo-time-scale-factor 1 real #f 1)
(ecfm-sigma/pseudo-time-scale-factor 1 real #f 1)
(granular-temperature/pseudo-time-scale-factor 1 real #f 1)
(pull/pseudo-time-scale-factor 1 real #f 1)
(pdftss/pseudo-time-scale-factor 1 real #f 1)
(premixc/pseudo-time-scale-factor 1 real #f 1)
(fvar2/pseudo-time-scale-factor 1 real #f 1)
(fvar/pseudo-time-scale-factor 1 real #f 1)
(fmean2/pseudo-time-scale-factor 1 real #f 1)
(fmean/pseudo-time-scale-factor 1 real #f 1)
(drsm/pseudo-time-scale-factor 1 real #f 1)
(retheta/pseudo-time-scale-factor 1 real #f 1)
(intermit/pseudo-time-scale-factor 1 real #f 1)
(omega/pseudo-time-scale-factor 1 real #f 1)
(kl/pseudo-time-scale-factor 1 real #f 1)
(f/pseudo-time-scale-factor 1 real #f 1)
(v2/pseudo-time-scale-factor 1 real #f 1)
(epsilon/pseudo-time-scale-factor 1 real #f 1)
(k/pseudo-time-scale-factor 1 real #f 1)
(nut/pseudo-time-scale-factor 1 real #f 1)
(w-swirl/pseudo-time-scale-factor 1 real #f 1)
(mp/pseudo-time-scale-factor 1 real #f 1)
(dqmom-iem/pseudo-time-scale-factor 1 real #f 1)
(species/pseudo-time-scale-factor (1) real-list #f (1))
(enthalpy/pseudo-time-scale-factor 1 real #f 1)
(tvar/pseudo-time-scale-factor 1 real #f 1)
(temperature/pseudo-time-scale-factor 1 real #f 1)
(dynamesh/smooth/laplace/pseudo-time-step 1 real #f 1)
(wd-phi/pseudo-time-scale-factor 1 real #f 1)
(soot-mom/pseudo-implicit-relax 1 real #f 1)
(twotemp/pseudo-implicit-relax 0.1 real #f 0.1)
(wetsteam/pseudo-implicit-relax 0.1 real #f 0.1)
(iac/pseudo-implicit-relax 0.3 real #f 0.3)
(pb-disc/pseudo-implicit-relax (0.5) real-list #f (0.5))
(pb-dqmom/pseudo-implicit-relax (0.5) real-list #f (0.5))
(pb-smm/pseudo-implicit-relax (0.5) real-list #f (0.5))
(pb-qmom/pseudo-implicit-relax (0.5) real-list #f (0.5))
(pollutant/pseudo-implicit-relax (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) real-list #f (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
(inert/pseudo-implicit-relax 1 real #f 1)
(premix-g-var/pseudo-implicit-relax 0.8 real #f 0.8)
(ecfm-sigma/pseudo-implicit-relax 0.9 real #f 0.9)
(granular-temperature/pseudo-implicit-relax 0.2 real #f 0.2)
(pdftss/pseudo-implicit-relax 1 real #f 1)
(premixc/pseudo-implicit-relax 0.9 real #f 0.9)
(fvar2/pseudo-implicit-relax 0.9 real #f 0.9)
(fvar/pseudo-implicit-relax 0.9 real #f 0.9)
(fmean2/pseudo-implicit-relax 1 real #f 1)
(fmean/pseudo-implicit-relax 1 real #f 1)
(drsm/pseudo-implicit-relax 0.5 real #f 0.5)
(retheta/pseudo-implicit-relax 0.8 real #f 0.8)
(intermit/pseudo-implicit-relax 0.8 real #f 0.8)
(omega/pseudo-implicit-relax 0.8 real #f 0.8)
(kl/pseudo-implicit-relax 0.8 real #f 0.8)
(f/pseudo-implicit-relax 0.8 real #f 0.8)
(v2/pseudo-implicit-relax 0.8 real #f 0.8)
(epsilon/pseudo-implicit-relax 0.8 real #f 0.8)
(k/pseudo-implicit-relax 0.8 real #f 0.8)
(nut/pseudo-implicit-relax 0.8 real #f 0.8)
(w-swirl/pseudo-implicit-relax 0.9 real #f 0.9)
(mp/pseudo-implicit-relax 0.5 real #f 0.5)
(dqmom-iem/pseudo-implicit-relax 1 real #f 1)
(species/pseudo-implicit-relax (1) real-list #f (1))
(enthalpy/pseudo-implicit-relax 1 real #f 1)
(tvar/pseudo-implicit-relax 0.9 real #f 0.9)
(temperature/pseudo-implicit-relax 1 real #f 1)
(soot-mom/pseudo-specific? #f boolean #f #f)
(twotemp/pseudo-specific? #t boolean #f #t)
(wetsteam/pseudo-specific? #t boolean #f #t)
(iac/pseudo-specific? #t boolean #f #t)
(pb-disc/pseudo-specific? (#t) boolean-list #f (#t))
(pb-dqmom/pseudo-specific? (#t) boolean-list #f (#t))
(pb-smm/pseudo-specific? (#t) boolean-list #f (#t))
(pb-qmom/pseudo-specific? (#t) boolean-list #f (#t))
(pollutant/pseudo-specific? (#f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f) boolean-list #f (#f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f))
(inert/pseudo-specific? #f boolean #f #f)
(premix-g-var/pseudo-specific? #f boolean #f #f)
(ecfm-sigma/pseudo-specific? #f boolean #f #f)
(granular-temperature/pseudo-specific? #t boolean #f #t)
(pdftss/pseudo-specific? #f boolean #f #f)
(premixc/pseudo-specific? #f boolean #f #f)
(fvar2/pseudo-specific? #f boolean #f #f)
(fvar/pseudo-specific? #f boolean #f #f)
(fmean2/pseudo-specific? #f boolean #f #f)
(fmean/pseudo-specific? #f boolean #f #f)
(drsm/pseudo-specific? #t boolean #f #t)
(retheta/pseudo-specific? #t boolean #f #t)
(intermit/pseudo-specific? #t boolean #f #t)
(omega/pseudo-specific? #t boolean #f #t)
(kl/pseudo-specific? #t boolean #f #t)
(f/pseudo-specific? #t boolean #f #t)
(v2/pseudo-specific? #t boolean #f #t)
(epsilon/pseudo-specific? #t boolean #f #t)
(k/pseudo-specific? #t boolean #f #t)
(nut/pseudo-specific? #t boolean #f #t)
(w-swirl/pseudo-specific? #t boolean #f #t)
(mp/pseudo-specific? #t boolean #f #t)
(dqmom-iem/pseudo-specific? #f boolean #f #f)
(species/pseudo-specific? (#f) boolean-list #f (#f))
(enthalpy/pseudo-specific? #f boolean #f #f)
(tvar/pseudo-specific? #f boolean #f #f)
(temperature/pseudo-specific? #t boolean #f #t)
(soot-mom/pseudo-relax 0.75 real #f 0.75)
(p1/pseudo-relax 1 real #f 1)
(turb-viscosity/pseudo-relax 1 real #f 1)
(body-force/pseudo-relax 1 real #f 1)
(density/pseudo-relax 1 real #f 1)
(twotemp/pseudo-relax 0.75 real #f 0.75)
(wetsteam/pseudo-relax 0.6 real #f 0.6)
(iac/pseudo-relax 0.75 real #f 0.75)
(pb-disc/pseudo-relax (0.75) real-list #f (0.75))
(pb-dqmom/pseudo-relax (0.75) real-list #f (0.75))
(pb-smm/pseudo-relax (0.75) real-list #f (0.75))
(pb-qmom/pseudo-relax (0.75) real-list #f (0.75))
(pollutant/pseudo-relax (0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75) real-list #f (0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75))
(inert/pseudo-relax 0.75 real #f 0.75)
(premix-g-var/pseudo-relax 0.75 real #f 0.75)
(ecfm-sigma/pseudo-relax 0.75 real #f 0.75)
(granular-temperature/pseudo-relax 0.75 real #f 0.75)
(pull/pseudo-relax 0.75 real #f 0.75)
(pdftss/pseudo-relax 0.75 real #f 0.75)
(premixc/pseudo-relax 0.75 real #f 0.75)
(fvar2/pseudo-relax 0.75 real #f 0.75)
(fvar/pseudo-relax 0.75 real #f 0.75)
(fmean2/pseudo-relax 0.75 real #f 0.75)
(fmean/pseudo-relax 0.75 real #f 0.75)
(drsm/pseudo-relax 0.75 real #f 0.75)
(retheta/pseudo-relax 0.75 real #f 0.75)
(intermit/pseudo-relax 0.75 real #f 0.75)
(omega/pseudo-relax 0.75 real #f 0.75)
(kl/pseudo-relax 0.75 real #f 0.75)
(f/pseudo-relax 0.75 real #f 0.75)
(v2/pseudo-relax 0.75 real #f 0.75)
(epsilon/pseudo-relax 0.75 real #f 0.75)
(k/pseudo-relax 0.75 real #f 0.75)
(nut/pseudo-relax 0.75 real #f 0.75)
(w-swirl/pseudo-relax 0.75 real #f 0.75)
(mp/pseudo-relax 0.5 real #f 0.5)
(dqmom-iem/pseudo-relax 0.75 real #f 0.75)
(species/pseudo-relax (0.75) real-list #f (0.75))
(enthalpy/pseudo-relax 0.75 real #f 0.75)
(tvar/pseudo-relax 0.75 real #f 0.75)
(temperature/pseudo-relax 0.75 real #f 0.75)
(pressure/pseudo-relax 0.5 real #f 0.5)
(mom/pseudo-relax 0.5 real #f 0.5)
(dynamesh/smooth/laplace/pseudo-relax 0.75 real #f 0.75)
(wd-phi/pseudo-relax 0.75 real #f 0.75)
(cvt/pseudo-relax 1 real #f 1)
(disco/pseudo-relax 1 real #f 1)
(delh/pseudo-relax 0.9 real #f 0.9)
(drift/pseudo-relax 0.1 real #f 0.1)
(pseudo-time-method/limit-max-implicit-relax 1 real #f 1)
(pseudo-time-method/limit-min-implicit-relax 0.001 real #f 0.001)
(pseudo-time-method/limiting-method 0 integer #f 0)
(pseudo-time-method/relaxation-method 0 integer #f 0)
(pseudo/energy-solid-dt-in-melt-porous-zone? #t boolean #f #t)
(pseudo/autotime-step-option 1 integer #f 1)
(pseudo/autotime-lscale-userspec 1 real #f 1)
(pseudo/autotime-lscale-option 1 integer #f 1)
(pseudo-auto-time-verbosity 0 integer #f 0)
(pseudo-auto-time-step-scale-factor 1 real #f 1)
(pseudo-solid-dt 1000 real #f 1000)
(pseudo-auto-time-solid-scale-factor 1 real #f 1)
(pseudo-auto-time-solid? #t boolean #f #t)
(pseudo-auto-time-step 1 real #f 1)
(pseudo-auto-time-step? #t boolean #f #t)
(pseudo/pv-coupling-all? #f boolean #f #f)
(pseudo-transient-mode 0 integer #f 0)
(pseudo-time-step 1 real time 1)
(pseudo-transient-formulation? #t boolean #f #f)
(pseudo-time-method/implicit-dbns/dt-method 0 integer #f 0)
(pseudo-time-method/coupled-pbns/dt-method 1 integer #f 1)
(pseudo-time-method/segregated-pbns/dt-method 0 integer #f 0)
(pseudo-time-method/implicit-dbns/user-defined-settings? #f boolean #f #f)
(pseudo-time-method/coupled-pbns/user-defined-settings? #f boolean #f #f)
(pseudo-time-method/segregated-pbns/user-defined-settings? #f boolean #f #f)
(dpm/reinject/homogenize? #t boolean #f #t)
(dpm/tabulated-size-dist-random-sampling? #t boolean #f #t)
(dpm/tabulated-size-dist-debug-output? #f boolean #f #f)
(dpm/blocking-effect-scale-drag-coeff? #f boolean #f #f)
(dpm/min-vf-threshold-for-dpm-src-scaling 0.05 real #f 0.05)
(dpm/blocking-effect-scale-dpm-sources? #f boolean #f #f)
(dpm/max-vf-allowed-for-blocking 0.95 real #f 0.95)
(dpm/blocking-effect? #f boolean #f #f)
(dpm-to-vof/vof-to-lwf/second-layer-by-nodes? #t boolean #f #t)
(dpm-to-vof/vof-to-lwf/vof-cutoff 0.001 real #f 0.001)
(dpm-to-vof/average-temp-not-enth? #t boolean #f #t)
(dpm-to-vof/max-n-adaption-cycles-to-do 8 integer #f 8)
(dpm-to-vof/smooth-vol-vs-rad-interpol? #f boolean #f #f)
(dpm-to-vof/allowed-relative-deviation 0.5 real #f 0.5)
(dpm-to-vof/interpol-cycle-tolerance 0.001 real #f 0.001)
(dpm-to-vof/interpol-cycle-vol-extend-factor 1.5 real #f 1.5)
(dpm-to-vof/interpol-cycle-interval-vol-frac 0.1 real #f 0.1)
(dpm-to-vof/num-of-vol-vs-rad-interpol-bins 100 integer #f 100)
(dpm-to-vof/num-of-vol-vs-rad-interpol-rounds 8 integer #f 8)
(dpm-to-vof/number-of-para-cycle-extra-rounds 8 integer #f 8)
(dpm-to-vof/move-p-to-liq-core/vof-epsilon 1e-05 real #f 1e-05)
(dpm-to-vof/conversion-chunk-size 1000 integer #f 1000)
(dpm-to-vof/search-radius-add-factor 2 real #f 2)
(dpm-to-vof/search-radius-factor 3 real #f 3)
(vof-to-dpm/report-sig-fig 8 integer #f 8)
(vof-to-dpm/lump-charact/calc-vof-slope-from-node-values? #t boolean #f #t)
(vof-to-dpm/lump-convert/average-enthalpy? #t boolean #f #t)
(vof-to-dpm/lump-detect/vof-surface 0.999999 real #f 0.999999)
(vof-to-dpm/lump-detect/vof-lower-limit 1e-06 real #f 1e-06)
(vof-to-dpm/lump-detect/max-lump-vof 1.1 real #f 1.1)
(vof-to-dpm/lump-detect/vof-inside 0.9 real #f 0.9)
(vof-to-dpm/force-over-invalid-setup #f boolean #f #f)
(dpm/store-vof? #f boolean #f #f)
(dpm/liquid-p/max-vof 2 real #f 2)
(dpm/liquid-p/relax 1 real #f 1)
(dpm/liquid-p/cole-n 7 real #f 7)
(dpm/liquid-p/speed-of-sound 5 real #f 5)
(dpm/liquid-p/force 0 integer #f 0)
(dpm/ddpm-level-form-residual-compatibility? #f boolean #f #f)
(dpm/dpm-wall-force? #t boolean #f #t)
(dpm/momentum-relaxation-time-ratio 100 real #f 100)
(dpm/minimum-wall-impact-angle 0.0001745 real #f 0.0001745)
(dpm/push-from-wall-fraction 0.005 real #f 0.005)
(dpm/erosion/is-deform-report-setup? #f boolean #f #f)
(dpm/erosion/plot-save-steps 0 integer #f 0)
(dpm/erosion/save-steps 0 integer #f 0)
(dpm/erosion/file-name "" string #f "")
(dpm/erosion/counter 0 integer #f 0)
(dpm/erosion/simulation-control/twoway-couple-dpm-and-flow? #f boolean #f #f)
(dpm/erosion/simulation-control/number-of-iters-per-tstep 20 integer #f 20)
(dpm/erosion/simulation-control/number-of-tsteps-per-loop 1 integer #f 1)
(dpm/erosion/simulation-control/number-of-flow-iterations 100 integer #f 100)
(dpm/erosion/smoothing/kernel 1 integer #f 1)
(dpm/erosion/smoothing/sweeps 1 integer #f 1)
(dpm/erosion/smoothing? #t boolean #f #t)
(dpm/erosion/dynamesh/meshing-steps 1 integer #f 1)
(dpm/erosion/dynamesh/max-displacement 10 real #f 10)
(dpm/erosion/dynamesh/termination/max-displacement 1000 real #f 1000)
(dpm/erosion/dynamesh/termination/total-time 3600 real #f 3600)
(dpm/erosion/dynamesh/max-dt 10000000000 real #f 10000000000)
(dpm/erosion/dynamesh/min-dt 0 real #f 0)
(dpm/erosion/dynamesh/dt 60 real #f 60)
(dpm/erosion/dynamesh/elapsed-time 0 real #f 0)
(dpm/erosion/dynamesh/general/abrasive-erosion? #f boolean #f #f)
(dpm/erosion/dynamesh/general/wall-density 2719 real #f 2719)
(dpm/erosion/dynamesh/general/ref-erosion-model 1 integer #f 1)
(dpm/erosion/dynamesh/wall-surfaces () thread-list #f ())
(dpm/erosion/dynamesh/auto-setup? #t boolean #f #t)
(dpm/erosion/dynamesh/cplng? #f boolean #f #f)
(dpm/zero-velocity-derivatives? #f boolean #f #f)
(dpm/zero-pressure-derivatives? #f boolean #f #f)
(dpm/update-pressure-derivatives #t boolean #f #t)
(dpm/set-injection-scaling 0.1 real #f 0.1)
(dpm/visualize-injections? #t boolean #f #t)
(dpm/dpm-in-ee/mixture-acceleration #f boolean #f #f)
(dpm/dpm-in-ee/enable? #f boolean #f #f)
(dpm/visualize-rotation? #f boolean #f #f)
(dpm/volume-injection/trying-cycle-stop-criterion? #t boolean #f #t)
(dpm/volume-injection/maximum-tries 100 integer #f 100)
(dpm/volume-injection/minimum-cell-volume -1 real #f -1)
(dpm/volume-injection/minimum-parcels-per-cell 5 integer #f 5)
(dpm/volume-injection/zone-injection-method 1 integer #f 1)
(dpm/volume-injection/use-cartesian-mesh? #f boolean #f #f)
(dpm/volume-injection/show-bound-geom? #f boolean #f #f)
(dpm/cell-functions/level 0 integer #f 0)
(dpm/io/export-2d-in-plane? #t boolean #f #t)
(dpm/io/cfd-post/export-2d-in-plane? #t boolean #f #t)
(dpm/io/cfd-post/export-residence-time? #t boolean #f #t)
(dpm/io/cfd-post/export-step? #f boolean #f #f)
(dpm/io/cfd-post/export-int64? #f boolean #f #f)
(dpm/io/cfd-post/export-float64? #f boolean #f #f)
(dpm/io/cfd-post/export-float-binary? #t boolean #f #t)
(dpm/io/cfd-post/export-int-binary? #f boolean #f #f)
(dpm/io/xml-encoding "iso-8859-1" string #f "iso-8859-1")
(dpm/io/buffer-size 10000 integer #f 10000)
(dpm/io/export-periodic-points? #t boolean #f #t)
(dpm/io/export-history? #f boolean #f #f)
(dpm/allow-nita? #f boolean #f #f)
(dpm/statistics/format 0 integer #f 0)
(dpm/verbosity 1 integer #f 1)
(dpm/transient/changing-mesh/discard-grads? #t boolean #f #t)
(dpm/transient/fix-high-particle-age? #f boolean #f #f)
(dpm/transient/fix-low-particle-age? #t boolean #f #t)
(dpm/transient/export-name "particle-data-1" string #f "particle-data-1")
(dpm/pic/mp? #f boolean #f #f)
(dpm/pic/enabled? #f boolean #f #f)
(dpm/log-id -1 integer #f -1)
(dpm/dpm-vof/solids-drag/scaling-factor 0.3 real #f 0.3)
(dpm/dpm-vof/solids-drag/enable? #f boolean #f #f)
(dpm/dpm-vof/close-packing/overpacking-max-corrected-cells 10 integer #f 10)
(dpm/dpm-vof/close-packing/overpacking-iterations 1 integer #f 1)
(dpm/dpm-vof/close-packing/corrector-sort-particles? #f boolean #f #f)
(dpm/dpm-vof/close-packing/corrector-update-distribution-vof? #t boolean #f #t)
(dpm/dpm-vof/close-packing/corrector-update-vof? #t boolean #f #t)
(dpm/dpm-vof/close-packing/corrector-packing-limit 0.63 real #f 0.63)
(dpm/dpm-vof/close-packing/corrector-move-all-particles? #f boolean #f #f)
(dpm/dpm-vof/close-packing/corrector-cell-factor 4 integer #f 4)
(dpm/dpm-vof/close-packing/corrector-dist-factor 1 real #f 1)
(dpm/dpm-vof/close-packing/overpacking-correction-tracking? #t boolean #f #t)
(dpm/dpm-vof/close-packing/overpacking-correction? #f boolean #f #f)
(dpm/dpm-vof/close-packing/static-gpress-shift 0.8 real #f 0.8)
(dpm/dpm-vof/close-packing/static-gpress-slope 60 real #f 60)
(dpm/dpm-vof/close-packing/step-factor 10 real #f 10)
(dpm/dpm-vof/close-packing/threshold-frac-pack-lim-vof 0.985 real #f 0.985)
(dpm/dpm-vof/close-packing/sub-model 0 integer #f 0)
(dpm/dpm-vof/static-pileup/zero-gran-press-grad-at-bott-walls? #f boolean #f #f)
(dpm/dpm-vof/static-pileup/zero-gran-press-grad-at-all-walls? #f boolean #f #f)
(dpm/dpm-vof/static-pileup/do-max-not-avg-in-ddpm-volfrac-nba? #t boolean #f #t)
(dpm/dpm-vof/static-pileup/use-fixed-thread-vel? #t boolean #f #t)
(dpm/dpm-vof/static-pileup/surface/restit-coeff/wallnormal 0.7 real #f 0.7)
(dpm/dpm-vof/static-pileup/surface/restit-coeff/tangential 0.7 real #f 0.7)
(dpm/dpm-vof/static-pileup/bott-wall-max-slope-angle-in-deg 60 real #f 60)
(dpm/dpm-vof/static-pileup/surface/control-parameter 1 real #f 1)
(dpm/dpm-vof/static-pileup/pack-flag-grad/threshold 0.1 real #f 0.1)
(dpm/dpm-vof/static-pileup/pack-flag-grad/smooth/num 2 integer #f 2)
(dpm/dpm-vof/static-pileup/pack-flag-grad/node-based-lsq? #t boolean #f #t)
(dpm/dpm-vof/static-pileup/pack-flag-grad/node-based-deriv? #t boolean #f #t)
(dpm/dpm-vof/static-pileup/local-cell-velocity-scale-factor 0 real #f 0)
(dpm/dpm-vof/static-pileup/instant-cell-vol-frac-use-factor 0 real #f 0)
(dpm/dpm-vof/static-pileup/high-ddpm-phase-vol-frac-limit 0 real #f 0)
(dpm/dpm-vof/static-pileup/halt-picle-above-vol-frac 0.88 real #f 0.88)
(dpm/dpm-vof/static-pileup/holefiller/vol-frac-thrsh 0.6 real #f 0.6)
(dpm/dpm-vof/static-pileup/frict-drag/vol-frac-onset 0.55 real #f 0.55)
(dpm/dpm-vof/static-pileup/frict-drag/vol-frac-limit 0.6 real #f 0.6)
(dpm/dpm-vof/static-pileup/frict-drag/slope-at-onset 1000 real #f 1000)
(dpm/dpm-vof/static-pileup/frict-drag/drag-coeff-max 1e+20 real #f 1e+20)
(dpm/dpm-vof/static-pileup/frict-drag/mom-source/suppress? #t boolean #f #t)
(dpm/dpm-vof/static-pileup/added-hint "If transport equations are switched off, may need to set 'dpm/dpm-vof/fixed-urf-in-fix-dpm-svar to 1.0 and type '(dpm-parameters-changed)'." string #f "If transport equations are switched off, may need to set 'dpm/dpm-vof/fixed-urf-in-fix-dpm-svar to 1.0 and type '(dpm-parameters-changed)'.")
(dpm/dpm-vof/fixed-urf-in-fix-dpm-svar -1 real #f -1)
(dpm/dpm-vof/average/nodes/ddpm-phs-vol-frac/also-do-max? #f boolean #f #f)
(dpm/dpm-vof/gran-pack/max-vof-extra 0 real #f 0)
(dpm/dpm-vof/sub-stepping-compatibility? #t boolean #f #t)
(dpm/dpm-vof/implicit-drag-udf? #t boolean #f #t)
(dpm/dpm-vof/euler/allow-parallel-hybrid? #f boolean #f #f)
(dpm/dpm-vof/euler/check-neighbour-vof? #t boolean #f #t)
(dpm/dpm-vof/skip-mom-ap? #t boolean #f #t)
(dpm/n-dpm-domains 0 integer #f 0)
(dpm/dpm-vof/vof-max-limit 0.9 real #f 0.9)
(dpm/dpm-vof/vof-low-cutoff 1e-08 real #f 1e-08)
(dpm/dpm-vof-gran-temp-lower-limit 1e-05 real #f 1e-05)
(dpm/dpm-vof-velocity-correction? #f boolean #f #f)
(dpm/dpm-vof-scheme-type 0 integer #f 0)
(dpm/average/heat-coeff-volume? #f boolean #f #f)
(dpm/dpm-vof-show-internal-variables? #f boolean #f #f)
(dpm/dpm_vof? #f boolean #f #f)
(dpm/static-film-condensation? #t boolean #f #t)
(dpm/check-dpm-iteration-limit 0 real #f 0)
(dpm/check-dpm-iteration? #t boolean #f #t)
(dpm/check-node-coords? #f boolean #f #f)
(dpm/latent-heat-at-boiling? #t boolean #f #t)
(dpm/absolute-pressure? #t boolean #f #t)
(dpm/raoult? #f boolean #f #f)
(dpm/multicomponent-remove-particle-at-rk-failure? #f boolean #f #f)
(dpm/multicomponent-min-dt 0.001 real #f 0.001)
(dpm/multicomponent-maximum-step-reductions 500 integer #f 500)
(dpm/multicomponent-maximum-integration-steps 10000 integer #f 10000)
(dpm/multicomponent-tolerance 1e-05 real #f 1e-05)
(dpm/fill-sources-per-material? #f boolean #f #f)
(dpm/density-multispecies? #f boolean #f #f)
(dpm/multicomponent-boiling? #t boolean #f #t)
(dpm/cp-correction? #t boolean #f #t)
(dpm/fractional-change-limit-heat 0.1 real #f 0.1)
(dpm/fractional-change-limit-mass 0.3 real #f 0.3)
(dpm/rkmulticomponent? #f boolean #f #f)
(dpm/serial-particle-ids? #t boolean #f #t)
(dpm/breakup/new-partid? #t boolean #f #t)
(dpm/boundary-face-smoothing/conservative-smoothing? #f boolean #f #f)
(dpm/boundary-face-smoothing/weighting-option 0 integer #f 0)
(dpm/boundary-face-smoothing/number-of-sweeps 3 integer #f 3)
(dpm/erosion/couple-with-mdm #f boolean #f #f)
(dpm/surf-inj-cont-partid? #t boolean #f #t)
(dpm/random/seed-injection-name? #t boolean #f #t)
(dpm/random/seed-timestep-corrected? #t boolean #f #t)
(dpm/random/seed-timestep? #t boolean #f #t)
(dpm/random/seed-iteration? #t boolean #f #t)
(dpm/random/use-particle-seeds? #t boolean #f #t)
(dpm/random/seed-restore? #t boolean #f #t)
(dpm/gauss-random 0.5 real #f 0.5)
(dpm/random-gauss? #t boolean #f #t)
(dpm/uniform-random 0.5 real #f 0.5)
(dpm/random-uniform? #t boolean #f #t)
(dpm/tracking-order-randomizations 0 integer #f 0)
(dpm/set-particle-law-on-first-timestep? #f boolean #f #f)
(dpm/high-temperature-correction? #f boolean #f #f)
(dpm/allow-supercritical-pressure? #t boolean #f #t)
(dpm/allow-condensation? #f boolean #f #f)
(dpm/check-critical-flux? #f boolean #f #f)
(dpm/apply-leidenfrost-on-droplets? #t boolean #f #t)
(dpm/apply-leidenfrost? #f boolean #f #f)
(dpm/check-leidenfrost-on-faces? #t boolean #f #t)
(dpm/variable-pr-number-in-boiling? #t boolean #f #t)
(dpm/allow-mc-boiling-failure? #f boolean #f #f)
(dpm/mc-film-boiling-formulation 1 integer #f 1)
(dpm/mc-boiling-formulation 1 integer #f 1)
(dpm/latent-heat-temperature-depend? #f boolean #f #f)
(dpm/boiling-pressure-depend? #f boolean #f #f)
(dpm/rkvaporization? #f boolean #f #f)
(dpm/surface-composition-assumption 1 integer #f 1)
(dpm/limiting-time-algorithm? #t boolean #f #t)
(dpm/minimum-vapor-fraction-new 1e-05 real #f 1e-05)
(dpm/minimum-vapor-fraction 0.01 real #f 0.01)
(dpm/virtual-mass-factor 0.5 real #f 0.5)
(dpm/virtual-mass? #f boolean #f #f)
(dpm/pressure-force? #f boolean #f #f)
(dpm/pressure-force-explicit? #f boolean #f #f)
(dpm/at-time-step/do-before-calc-mass-flux/dpm-to-vof? #t boolean #f #t)
(dpm/at-time-step/do-before-calc-mass-flux/always? #f boolean #f #f)
(dpm/flush-sources-at-timestep? #f boolean #f #f)
(dpm/fluid-flow-time-stepping? #t boolean #f #t)
(dpm/create-particles-with-particle-time-step? #f boolean #f #f)
(dpm/last-time-step 0 real time 0)
(dpm/n-time-steps 1 integer #f 1)
(dpm/time-step 0 integer #f 0)
(dpm/injection-time-scale-factor 1 real #f 1)
(dpm/physical-time-step 0.001 real time 0.001)
(dpm/flow-time 0 real time 0)
(dpm/short-wave-airblast? #f boolean #f #f)
(dpm/atomizer-uniform-mass-distribution? #f boolean #f #f)
(dpm/solid-cone-uniform-mass-distribution? #f boolean #f #f)
(dpm/stagger-bndry-surf-injs/across-cells? #f boolean #f #f)
(dpm/stagger-spatially-ntries 5 integer #f 5)
(dpm/stagger-factor 1 real #f 1)
(dpm/stagger_radius_standard_inj 0 real length 0)
(dpm/stagger-temporally? #f boolean #f #f)
(dpm/stagger_atomizer_inj? #t boolean #f #t)
(dpm/stagger_standard_inj? #f boolean #f #f)
(dpm/scr/urea-depo-risk/wall-face-zone-list () list #f ())
(dpm/scr/urea-depo-risk/hydrodynamic-risk-weight 0.3333333 real #f 0.3333333)
(dpm/scr/urea-depo-risk/velocity-based-risk-weight 0.3333333 real #f 0.3333333)
(dpm/scr/urea-depo-risk/heat-flux-risk-weight 0.3333333 real #f 0.3333333)
(dpm/scr/urea-depo-risk/cryst-weight 0.5 real #f 0.5)
(dpm/scr/urea-depo-risk/seco-rx-min-hnco 0.03 real #f 0.03)
(dpm/scr/urea-depo-risk/seco-rx-max-temp 523 real temperature 523)
(dpm/scr/urea-depo-risk/seco-rx-min-temp 423 real temperature 423)
(dpm/scr/urea-depo-risk/cryst-max-temp 406 real temperature 406)
(dpm/scr/urea-depo-risk/cryst-min-temp 278 real temperature 278)
(dpm/scr/urea-depo-risk/cryst-max-mass-fraction 1 real #f 1)
(dpm/scr/urea-depo-risk/cryst-min-mass-fraction 0.43 real #f 0.43)
(dpm/scr/urea-depo-risk/enabled? #f boolean #f #f)
(dpm/wall-film-ot-based-interaction? #f boolean #f #f)
(dpm/wall-film/abort-on-face-track-failure? #f boolean #f #f)
(dpm/wall-film/include-in-concentration? #f boolean #f #f)
(dpm/wall-film-expert? #f boolean #f #f)
(dpm/film-interpolate-mesh? #t boolean #f #t)
(dpm/film-splash-angle-slope 0.266 real #f 0.266)
(dpm/film-splash-angle 65.40000000000001 real #f 65.40000000000001)
(dpm/film-min-dsplash-param 0.02 real #f 0.02)
(dpm/film-max-face-dist 1e-05 real length 1e-05)
(dpm/film-m-imp-interaction 0 real #f 0)
(dpm/film-p-imp-interaction 0 real #f 0)
(dpm/film-mean-interaction 0 real #f 0)
(dpm/film-gas-interaction #t boolean #f #t)
(dpm/film-visc-interaction #t boolean #f #t)
(dpm/film-separation-height 1e-05 real length 1e-05)
(dpm/film-separation-angle 90 real degrees 90)
(dpm/film-node-values? #t boolean #f #t)
(dpm/pathlines-single-id -1 integer #f -1)
(dpm/pathline-scheme 1 integer #f 1)
(dpm/pathlines-low-order? #f boolean #f #f)
(dpm/pathlines-relative? #t boolean #f #t)
(dpm/pathline-face-intersection-algorithm 0 integer #f 0)
(dpm/particle-relocation-with-cellids-after-migration? #t boolean #f #t)
(dpm/particle-relocation-with-cellids? #t boolean #f #t)
(dpm/particle-relocation 2 integer #f 2)
(dpm/particle-synchronization 1 integer #f 1)
(dpm/particle-recreate 1 integer #f 1)
(dpm/particle-reset 2 integer #f 2)
(dpm/particle-repartition-algorithm 3 integer #f 3)
(dpm/use-single-prec-face-point-method? #f boolean #f #f)
(dpm/locate/method 0 integer #f 0)
(dpm/face-intersection-algorithm 5 integer #f 5)
(dpm/display-steps 1 integer #f 1)
(dpm/leidenfrost-dt 50 real #f 50)
(dpm/lowest-film-diameter 1e-07 real #f 1e-07)
(dpm/lowest-diameter 1e-08 real #f 1e-08)
(dpm/number-of-cells-to-cross 1 real #f 1)
(dpm/acceleration-to-faces-for-rk? #t boolean #f #t)
(dpm/update-properties-before-tracking? #f boolean #f #f)
(dpm/boiling/subcooling-temperature-offset 0 real #f 0)
(dpm/boiling/pabs-to-pvap-ratio 1.000001 real #f 1.000001)
(dpm/htc/improved-film-gas-energy-balance? #t boolean #f #t)
(dpm/htc/film-bl-model-wall? #f boolean #f #f)
(dpm/timestep-limiter/use-time-to-boil? #f boolean #f #f)
(dpm/timestep-limiter/thermal-relaxation-time-scale-factor 1 real #f 1)
(dpm/timestep-limiter/thermal-relaxation-time? #f boolean #f #f)
(dpm/auto-max-step-size-refinements 20 integer #f 20)
(dpm/auto-max-error 1e-05 real #f 1e-05)
(dpm/auto-tracking-scheme-selection? #t boolean #f #t)
(dpm/limit-min-time-step? #t boolean #f #t)
(dpm/tracking-scheme-film 0 integer #f 0)
(dpm/tracking-scheme 1 integer #f 1)
(dpm/tracking-scheme-high 1 integer #f 1)
(dpm/tracking-scheme-low 0 integer #f 0)
(dpm/auto-step-size-control? #t boolean #f #t)
(dpm/max-find-cell-depth 2000 integer #f 2000)
(dpm/debug-output-level 0 integer #f 0)
(dpm/allow-node-based-avg-with-lin-src-terms? #f boolean #f #f)
(dpm/average/each-step? #f boolean #f #f)
(dpm/average/ddpm-vars? #t boolean #f #t)
(dpm/average/source-terms? #t boolean #f #t)
(dpm/average/kernel-gaussian 1 real #f 1)
(dpm/average/kernel 2 integer #f 2)
(dpm/average/nodes? #f boolean #f #f)
(dpm/variable-interpolation/bci/min-viscosity 1e-10 real #f 1e-10)
(dpm/variable-interpolation/bci/min-density 1e-10 real #f 1e-10)
(dpm/variable-interpolation/bci/nci-node-correction-algorithm 1 integer #f 1)
(dpm/variable-interpolation/bci/in-time? #f boolean #f #f)
(dpm/variable-interpolation/bci/use-face-udm? #f boolean #f #f)
(dpm/variable-interpolation/bci/recon-face-values-old? #f boolean #f #f)
(dpm/variable-interpolation/bci/reconstruct-face-values? #f boolean #f #f)
(dpm/variable-interpolation/bci/reconstruct-cell-values? #f boolean #f #f)
(dpm/variable-interpolation/bci/precompute-pdf-species? #f boolean #f #f)
(dpm/variable-interpolation/bci/clip-species-fractions? #f boolean #f #f)
(dpm/variable-interpolation/bci/clip-lwf-interpolation-weights? #t boolean #f #t)
(dpm/variable-interpolation/bci/clip-interpolation-weights? #t boolean #f #t)
(dpm/variable-interpolation/bci/extrapolate-from-subtet? #f boolean #f #f)
(dpm/variable-interpolation/bci/use-vof-face-svars-for-interp? #t boolean #f #t)
(dpm/variable-interpolation/bci/interpolate-vof? #t boolean #f #t)
(dpm/variable-interpolation/bci/interpolate-flow-gradients? #t boolean #f #t)
(dpm/variable-interpolation/barycentric? #t boolean #f #t)
(cp/interpolate #f boolean #f #f)
(laminar-viscosity/interpolate #f boolean #f #f)
(density/interpolate #f boolean #f #f)
(uw-stress/interpolate #t boolean #f #t)
(vw-stress/interpolate #t boolean #f #t)
(uv-stress/interpolate #t boolean #f #t)
(ww-stress/interpolate #t boolean #f #t)
(vv-stress/interpolate #t boolean #f #t)
(uu-stress/interpolate #t boolean #f #t)
(omega/interpolate #t boolean #f #t)
(epsilon/interpolate #t boolean #f #t)
(k/interpolate #t boolean #f #t)
(temperature/interpolate #f boolean #f #f)
(z-velocity/interpolate #t boolean #f #t)
(y-velocity/interpolate #t boolean #f #t)
(x-velocity/interpolate #t boolean #f #t)
(pressure/interpolate #f boolean #f #f)
(dpm/in-situ-data-redu/logscale? (#f #f #f #f #f #f #f #f #f) boolean-list 9 (#f #f #f #f #f #f #f #f #f))
(dpm/in-situ-data-redu/n-steps (2 2 2 1 1 1 1 1 1) integer-list 9 (2 2 2 1 1 1 1 1 1))
(dpm/in-situ-data-redu/cellwise? #t boolean #f #t)
(dpm/in-situ-data-redu/lwf? #t boolean #f #t)
(dpm/gradient-interpolation? #f boolean #f #f)
(dpm/variable-interpolation/coarse-new? #f boolean #f #f)
(dpm/variable-interpolation/coarse-sources? #f boolean #f #f)
(dpm/variable-interpolation/coarse-test-length 0 real #f 0)
(dpm/variable-interpolation/coarse-factor 1 real #f 1)
(dpm/variable-interpolation/coarse? #f boolean #f #f)
(dpm/variable-interpolation/separate-turb-fields? #t boolean #f #t)
(dpm/variable-interpolation/default-all-on? #f boolean #f #f)
(dpm/variable-interpolation/kernel-gaussian 1 real #f 1)
(dpm/variable-interpolation/stencil 1 integer #f 1)
(dpm/variable-interpolation/kernel 2 integer #f 2)
(dpm/variable-interpolation/nodes? #f boolean #f #f)
(dpm/variable-interpolation/velocity-wall-interpolation? #f boolean #f #f)
(dpm/temperature-interpolation? #f boolean #f #f)
(dpm/variable-interpolation? #t boolean #f #t)
(dpm/search-before-iteration? #f boolean #f #f)
(dpm/closest-face-search? #t boolean #f #t)
(dpm/pre-write-particle-project-dem? #f boolean #f #f)
(dpm/pre-write-particle-project? #t boolean #f #t)
(dpm/pre-write-particle-check? #f boolean #f #f)
(dpm/use-face-v-with-b-injection? #t boolean #f #t)
(dpm/relocate-init-particles? #f boolean #f #f)
(dpm/disallow-aborted-particles? #t boolean #f #t)
(dpm/closest-cell-search? #t boolean #f #t)
(dpm/full-pointwise-search? #f boolean #f #f)
(dpm/nd-point-search/polyhedron-tet-division-level 0 integer #f 0)
(dpm/nd-point-search? #t boolean #f #t)
(dpm/sample/plane/tolerance 1e-12 real #f 1e-12)
(dpm/sample-file/sort? #f boolean #f #f)
(dpm/sample-pre "" string #f "")
(dpm/collect-sample? #f boolean #f #f)
(dpm/relocate-unsteady-particles-for-mdm? #t boolean #f #t)
(dpm/consider-discrete-phase-volume-fraction? #t boolean #f #t)
(dpm/dpm-vof/heat-exchange-method "standard" string #f "standard")
(dpm/dpm-vof/temperature-average-method "ensemble" string #f "ensemble")
(dpm/dpm-vof/iad-particle? #f boolean #f #f)
(dpm/relax-linear-accum 0 real #f 0)
(dpm/dpm-vof/heat-source-prior-r222? #t boolean #f #t)
(dpm/use-interp-flow-vars-for-sources? #f boolean #f #f)
(dpm/view-full-sources? #t boolean #f #t)
(dpm/replace-mass-source-by-mixture-fraction? #f boolean #f #f)
(dpm/linearize-mixture-fraction-source-terms? #f boolean #f #f)
(dpm/linearize-species-source-terms? #t boolean #f #t)
(dpm/dpm-linear-source-term-change? #f boolean #f #f)
(dpm/species-ap-coeff-multiplier 1 real #f 1)
(dpm/energy-ap-coeff-multiplier 1 real #f 1)
(dpm/momentum-ap-coeff-multiplier 1 real #f 1)
(dpm/source-linearization-limit 0 real #f 0)
(dpm/constant-linearized-source? #f boolean #f #f)
(dpm/source-terms-linearized-pic? #f boolean #f #f)
(dpm/source-terms-linearized? #f boolean #f #f)
(dpm/dpm-vof/energy-coupling-via-source-term? #f boolean #f #f)
(dpm/dpm-vof/total-src-correction? #f boolean #f #f)
(dpm/eulerian_source_term_coupling? #f boolean #f #f)
(dpm/sources-max-part-ap 0.1 real #f 0.1)
(dpm/sources-as-in-v61? #f boolean #f #f)
(dpm/sources-delta-implicit? #t boolean #f #t)
(dpm/sources-implicit? #t boolean #f #t)
(dpm/sources-every-flow-iteration? #f boolean #f #f)
(dpm/implicit-momentum-coupling? #t boolean #f #t)
(dpm/levich-breakup-constant 14.9 real #f 14.9)
(dpm/levich-breakup-type 0 integer #f 0)
(dpm/spray-suite-consts (8 5 0.5 0.333333333 3.33333333 1 0.188 1.73 0.61 0 5.7 0.5 1) real-list #f (8 5 0.5 0.333333333 3.33333333 1 0.188 1.73 0.61 0 5.7 0.5 1))
(dpm/wave-mass-cutoff 0.05 real #f 0.05)
(dpm/pressure-swirl-atomizer-swirl-direction 1 integer #f 1)
(dpm/randomize-theta-pos-for-axi-swirl-injections? #t boolean #f #t)
(dpm/atomizer-downstream-try-locate? #t boolean #f #t)
(dpm/atomizer-downstream-iterations 1 integer #f 1)
(dpm/atomizer-downstream-closest-cell-epsilon 0.001 real #f 0.001)
(dpm/atomizer-critical-cavitation-number 2 real #f 2)
(dpm/atomizer-spread-param 3.5 real #f 3.5)
(dpm/tab-spread-parameter 3.5 real #f 3.5)
(dpm/lower-tab-diameter-ratio 0 real #f 0)
(dpm/number-tab-diameters 2 integer #f 2)
(dpm/random-tab-diam? #f boolean #f #f)
(dpm/all-particles-in-liquid-core? #t boolean #f #t)
(dpm/spray-suite/schmehl-min-diam 1e-06 real #f 1e-06)
(dpm/spray-suite/schmehl-np 1 integer #f 1)
(dpm/spray-suite-schmehl? #f boolean #f #f)
(dpm/spray-suite/ssd-nu-t 1 real #f 1)
(dpm/spray-suite/ssd-x-si -0.1 real #f -0.1)
(dpm/spray-suite/ssd-x-ratio 1.2 real #f 1.2)
(dpm/spray-suite/ssd-min-diam 1e-06 real #f 1e-06)
(dpm/spray-suite/ssd-np-target 1000 real #f 1000)
(dpm/spray-suite/ssd-core-bu 1.73 real #f 1.73)
(dpm/spray-suite/ssd-we-cr 6 real #f 6)
(dpm/spray-suite/ssd-np-max-child 10 integer #f 10)
(dpm/spray-suite-ssd? #f boolean #f #f)
(dpm/spray-suite/madabhushi-wave-child-stay-wave? #f boolean #f #f)
(dpm/spray-suite/madabhushi-pe-child-stay-pe? #t boolean #f #t)
(dpm/spray-suite/madabhushi-min-diam 5e-05 real #f 5e-05)
(dpm/spray-suite/madabhushi-cb-vnormal-scaling-factor 5 real #f 5)
(dpm/spray-suite/madabhushi-vnormal-scaling-factor 5 real #f 5)
(dpm/spray-suite/madabhushi-cb-np-child 5 integer #f 5)
(dpm/spray-suite/madabhushi-np-child 5 integer #f 5)
(dpm/spray-suite/madabhushi-jet-diameter 0.001 real #f 0.001)
(dpm/spray-suite/madabhushi-ligament-factor 0.4 real #f 0.4)
(dpm/spray-suite/madabhushi-column-drag-cd 1.48 real #f 1.48)
(dpm/spray-suite/madabhushi-c0 3.44 real #f 3.44)
(dpm/spray-suite-madabhushi? #f boolean #f #f)
(dpm/spray-suite-khrt? #f boolean #f #f)
(dpm/spray-suite/wave-vnormal-scaling-factor 1 real #f 1)
(dpm/spray-suite-wave-rayleigh-growth? #t boolean #f #t)
(dpm/wave-mass-cutoff-adjust? #t boolean #f #t)
(dpm/spray-suite-wave-collide? #t boolean #f #t)
(dpm/spray-suite-wave? #f boolean #f #f)
(dpm/spray-suite-tab-evaluate-double-ddrag? #f boolean #f #f)
(dpm/spray-suite-tab? #t boolean #f #t)
(dpm/spray-suite-break-up? #f boolean #f #f)
(dpm/spray-suite-coalescence? #t boolean #f #t)
(dpm/spray-suite-beta-models? #f boolean #f #f)
(dpm/coalesc/avg-enth-not-temp? #f boolean #f #f)
(dpm/this-inject-break-up? #t boolean #f #t)
(dpm/collision/dem/max_van_der_waals_range 1e-06 real #f 1e-06)
(dpm/collision/dem/force-range-factor 0 real #f 0)
(dpm/collision/dem/have-friction-cundall-strack? #f boolean #f #f)
(dpm/collision/dem/inhibit-particle-tracking #f boolean #f #f)
(dpm/collision/dem/auto-create-collision-partners? #t boolean #f #t)
(dpm/collision/dem/collision-laws () list #f ())
(dpm/collision/dem/collision-partners-w () list #f ())
(dpm/collision/dem/collision-partners-p () list #f ())
(dpm/collision/dem/friction-force-equiv-min-acceleration 1e-06 real #f 1e-06)
(dpm/collision/dem/static-edge-length 0.001 real #f 0.001)
(dpm/collision/dem/edge-length-factor 1.5 real #f 1.5)
(dpm/collision/dem/adaptive-edge-length? #t boolean #f #t)
(dpm/collision/dem/use-octree-based-collision-partner-search? #f boolean #f #f)
(dpm/collision/dem/max-particle-velocity 100 real #f 100)
(dpm/collision/dem/time-integration-scheme 0 integer #f 0)
(dpm/collision/dem/number-of-substeps-in-time 1 integer #f 1)
(dpm/collision/dem/expert-user? #f boolean #f #f)
(dpm/collision/dem? #f boolean #f #f)
(dpm/collision/hybpar/numoflocks 48 integer #f 48)
(dpm/collision/hybpar/everyield? #f boolean #f #f)
(dpm/collision/unidirectional? #f boolean #f #f)
(dpm/collision/hybridparallel? #f boolean #f #f)
(dpm/collision/coeff-restitution (1 1) real-list #f (1 1))
(dpm/collision/n-coeffs-restitution 2 integer #f 2)
(dpm/collision/min-time-step 5e-07 real #f 5e-07)
(dpm/collision/event-type 0 integer #f 0)
(dpm/collision/model-type 0 integer #f 0)
(dpm/collision/sort-collision-partners? #f boolean #f #f)
(dpm/collision/stencil-size 0 integer #f 0)
(dpm/collision/stencil-size-use-ccm-default? #t boolean #f #t)
(dpm/collision/stencil-size-use-cfdcm-default? #t boolean #f #t)
(dpm/collision/collision-mesh-type 0 integer #f 0)
(dpm/collision/mode 1 integer #f 1)
(dpm/collision? #f boolean #f #f)
(dpm/pdf-tran-unsteady-rho-limit 0.1 real #f 0.1)
(dpm/pdf-tran-inc-time-avg 0 real #f 0)
(dpm/pdf-tran-num-time-avg 50 real #f 50)
(dpm/pdf-tran-num-fv-steps 1 integer #f 1)
(dpm/pdf-tran-num-pdf-steps 1 integer #f 1)
(dpm/pdf-tran-time-step 1 real #f 1)
(dpm/pdf-tran-freq-num 0.5 real #f 0.5)
(dpm/pdf-tran-fourier-num 0.5 real #f 0.5)
(dpm/pdf-tran-cfl-num 0.5 real #f 0.5)
(dpm/pdf-tran-local-time-step? #t boolean #f #t)
(dpm/pdf-tran-ppc-d 0.1 real #f 0.1)
(dpm/pdf-tran-ppc-c 0.1 real #f 0.1)
(dpm/pdf-tran-ppc-b 0.1 real #f 0.1)
(dpm/pdf-tran-ppc-a 0.1 real #f 0.1)
(dpm/pdf-tran-position-correct? #f boolean #f #f)
(dpm/pdf-tran-number-control? #t boolean #f #t)
(dpm/pdf-tran-cphi 2 real #f 2)
(dpm/pdf-tran-mixing-model 2 integer #f 2)
(dpm/pdf-tran-ta-counter 0 integer #f 0)
(dpm/pdf-tran-num-part-per-cell 20 real #f 20)
(pdf-transport-expert? #f boolean #f #f)
(pdf-transport/solve? #t boolean #f #t)
(dpm/max-species-sources 50 integer #f 50)
(dpm/surface-injection/allow-non-bnd-surf-with-mdm? #f boolean #f #f)
(dpm/surface-injection-delta 1e-05 real #f 1e-05)
(dpm/higher-order? #t boolean #f #t)
(dpm/strip-beta 0.3 real #f 0.3)
(dpm/strip-m-const 0.5 real #f 0.5)
(dpm/strip-f-const 0.14 real #f 0.14)
(dpm/film-stripping-crit 0 integer #f 0)
(dpm/film-stripping-scheme 0 integer #f 0)
(dpm/max-density 100000 real #f 100000)
(dpm/min-density 0.001 real #f 0.001)
(dpm/devolat-limit 0.01 real #f 0.01)
(dpm/splash-vel-limit-a 1 real #f 1)
(dpm/splash-vel-limit-n 0.5 real #f 0.5)
(dpm/splash-size-limit-high 0.22 real #f 0.22)
(dpm/splash-size-limit-low 0.06 real #f 0.06)
(dpm/splash-pdf-tail-limiting? #t boolean #f #t)
(dpm/orourke-splash-fraction? #t boolean #f #t)
(dpm/orourke-splash-fraction-tail 0.75 real #f 0.75)
(dpm/vle-limit 1 real #f 1)
(dpm/limit-kuhnke-init-film-height? #t boolean #f #t)
(dpm/limit-splash-film-height? #f boolean #f #f)
(dpm/ft-limiter 0.01 real #f 0.01)
(dpm/reflection-distance-limit 1e-06 real #f 1e-06)
(dpm/limit-contact-time? #t boolean #f #t)
(dpm/contact-time-factor 0.4 real #f 0.4)
(dpm/wall-heat-exchange #t boolean #f #t)
(dpm/we-limit 5 real #f 5)
(dpm/ct 13 real #f 13)
(dpm/kt-max 130 real #f 130)
(dpm/kt-min 54 real #f 54)
(dpm/e-2-crit-1 3329 real #f 3329)
(dpm/e-2-crit-0 16 real #f 16)
(dpm/thermolysis-limit 5000 real #f 5000)
(dpm/random-friedrich? #t boolean #f #t)
(dpm/enable-spotty-film-corrections? #t boolean #f #t)
(dpm/scale-film-vel-by-res-time? #t boolean #f #t)
(dpm/scale-by-residence-time? #f boolean #f #f)
(dpm/smooth-film-height? #f boolean #f #f)
(dpm/film-breakup-particles 0 integer #f 0)
(dpm/use-average-film-height? #f boolean #f #f)
(dpm/use-underrelax-film-height 0.5 real #f 0.5)
(dpm/underrelax-film-height 1 real #f 1)
(dpm/use-previous-film-height? #f boolean #f #f)
(dpm/film-intersection-scheme? #f boolean #f #f)
(dpm/film-boiling-rate? #t boolean #f #t)
(dpm/film-internal-drag-vel-frac-limit 0.8 real #f 0.8)
(dpm/film-internal-drag-coefficient 0 real #f 0)
(dpm/film-accel-limit-divisor 0.1 real #f 0.1)
(dpm/limiting-film-height 5e-06 real #f 5e-06)
(dpm/critical-transition-factor 1 real #f 1)
(dpm/coupled-update-combusting? #f boolean #f #f)
(dpm/coupled-update-droplet? #f boolean #f #f)
(dpm/coupled-update? #f boolean #f #f)
(dpm/current-report-variables ("Particle X Position" "Particle Y Position" "Particle Z Position" "Particle X Velocity" "Particle Y Velocity" "Particle Z Velocity" "Particle Diameter" "Particle Temperature" "Particle Density" "Particle Mass" "Particle Number in Parcel" "Color by") string-list #f ("Particle X Position" "Particle Y Position" "Particle Z Position" "Particle X Velocity" "Particle Y Velocity" "Particle Z Velocity" "Particle Diameter" "Particle Temperature" "Particle Density" "Particle Mass" "Particle Number in Parcel" "Color by"))
(dpm/export-sig-fig 7 integer #f 7)
(dpm/report-sig-fig 5 integer #f 5)
(dpm/track-in-absolute-frame? #f boolean #f #f)
(dpm/particle-history-format 0 integer #f 0)
(dpm/write-particle-history? #f boolean #f #f)
(dpm/per-inj-thread-summaries? #f boolean #f #f)
(dpm/summaries-per-injection () () #f ())
(dpm/summary/default-type "standard" string #f "standard")
(dpm/summary () () #f ())
(dpm/eddy-cross-time-factor 1 real #f 1)
(dpm/mu-turb-to-mu-lam 1 real #f 1)
(dpm/turb-coupling-omega-src-constant 1 real #f 1)
(dpm/turb-coupling-eps-src-constant 1.5 real #f 1.5)
(dpm/turb-coupling? #f boolean #f #f)
(dpm/saffman-lift? #f boolean #f #f)
(dpm/cunningham-correction 1 real #f 1)
(dpm/brownian-motion? #f boolean #f #f)
(dpm/drag/allow-zero-drag? #f boolean #f #f)
(dpm/drag-law "spherical" string #f "spherical")
(dpm/shape-factor 1 real #f 1)
(dpm/minimum-parcel-number 0.001 real #f 0.001)
(dpm/minimum-parcel-mass 1e-15 real #f 1e-15)
(dpm/wall-jet-level 1 integer #f 1)
(dpm/wall-jet-interact? #f boolean #f #f)
(dpm/particle-temperature-limiter? #f boolean #f #f)
(dpm/accumulate-rates? #f boolean #f #f)
(dpm/erosion-accretion? #f boolean #f #f)
(dpm/sort-file-append? #f boolean #f #f)
(dpm/reallocate-unsteady-coupled? #t boolean #f #t)
(dpm/unsteady-stop 0 real #f 0)
(dpm/unsteady-start 0 real #f 0)
(dpm/unsteady-tracking? #f boolean #f #f)
(dpm/thermophoretic? #f boolean #f #f)
(dpm/radiation-p #f boolean #f #f)
(dpm/ensemble-average? #t boolean #f #t)
(dpm/correlation-func 1 integer #f 1)
(dpm/max-steps 50000 integer #f 50000)
(dpm/length-scale 0.01 real #f 0.01)
(dpm/step-length-factor-overset-receptor 5 real #f 5)
(dpm/step-length-factor 5 real #f 5)
(dpm/use-length-scale? #f boolean #f #f)
(dpm/subtet/wallfilm/interpolate-vars? #t boolean #f #t)
(dpm/subtet/wallfilm/film-spreading-parameter 0 real #f 0)
(dpm/subtet/wallfilm/colinearity-tolerance 1 real #f 1)
(dpm/subtet/wallfilm/search-film-thread-for-overset-migration? #f boolean #f #f)
(dpm/subtet/wallfilm/search-film-thread-after-remeshing? #f boolean #f #f)
(dpm/subtet/wallfilm/include-film-particles-in-sample-file? #f boolean #f #f)
(dpm/subtet/wallfilm/reflect-from-walls? #f boolean #f #f)
(dpm/subtet/wallfilm/freeze-film-properties? #f boolean #f #f)
(dpm/subtet/wallfilm/disable-film-stick-regime? #f boolean #f #f)
(dpm/subtet/wallfilm/disable-film-particle-acceleration? #f boolean #f #f)
(dpm/subtet/wallfilm/project-particle-for-subtet-tracking? #f boolean #f #f)
(dpm/subtet/wallfilm/project-particle-to-new-film-face? #t boolean #f #t)
(dpm/subtet/wallfilm/non-planar-face-correction? #t boolean #f #t)
(dpm/subtet/wallfilm/num-edge-crossing-tol-refinements 20 integer #f 20)
(dpm/subtet/wallfilm/max-edge-crossing-tol-increases 4 integer #f 4)
(dpm/subtet/wallfilm/velocity-correction-method 1 integer #f 1)
(dpm/subtet/max-relocation-attempts 3 integer #f 3)
(dpm/subtet/check-cell-bounding-box-during-location? #t boolean #f #t)
(dpm/subtet/limit-nd-table-search-by-distance? #f boolean #f #f)
(dpm/subtet/search-cell-threads-directly? #f boolean #f #f)
(dpm/subtet/overset-relocation-level 1 integer #f 1)
(dpm/subtet/relocation-robustness-level 2 integer #f 2)
(dpm/subtet/pathline-performance-level 0 integer #f 0)
(dpm/subtet/max-velocity-angle-change 5 real #f 5)
(dpm/subtet/min-velocity-angle-change 1 real #f 1)
(dpm/subtet/error-control-based-upon-velocity? #f boolean #f #f)
(dpm/subtet/use-barycentric-sampling? #f boolean #f #f)
(dpm/subtet/overset-cell-length-scale-factor 1 real #f 1)
(dpm/subtet/minimum-eddy-lifetime-at-birth 1e-07 real #f 1e-07)
(dpm/subtet/boundary-layer-turb-dispersion-constant 0.02 real #f 0.02)
(dpm/subtet/boundary-layer-dispersion-n-layers 10 integer #f 10)
(dpm/subtet/nodal-var-update-frequency 1 integer #f 1)
(dpm/subtet/warning-verbosity 1 integer #f 1)
(dpm/subtet/maximum-cell-aspect-ratio 20 real #f 20)
(dpm/subtet/reflect-from-orphan-cells? #t boolean #f #t)
(dpm/subtet/inject-particles-in-overset-dead-cells? #f boolean #f #f)
(dpm/subtet/load-particles-tracked-with-legacy-code? #f boolean #f #f)
(dpm/subtet/use-legacy-location-method? #f boolean #f #f)
(dpm/subtet/boundary-layer-turb-dispersion? #f boolean #f #f)
(dpm/subtet/use-aspect-ratio-in-cell-length? #t boolean #f #t)
(dpm/subtet/low-order-intersection-factor 0 real #f 0)
(dpm/subtet/use-particle-dt-for-axi-intersection-tol? #t boolean #f #t)
(dpm/subtet/scale-subtet-intersection-tolerance? #t boolean #f #t)
(dpm/subtet/move-particles-traveling-in-subtet-planes? #f boolean #f #f)
(dpm/subtet/use-wall-normal-for-node-correction? #f boolean #f #f)
(dpm/subtet/zero-node-velocity-on-walls? #f boolean #f #f)
(dpm/subtet/zero-gradients-on-walls? #f boolean #f #f)
(dpm/subtet/max-turb-disp-face-normal-dot-prod -0.9 real #f -0.9)
(dpm/subtet/crossing-direction-tolerance 1e-09 real #f 1e-09)
(dpm/subtet/negative-discriminant-limit 1e-10 real #f 1e-10)
(dpm/subtet/gti-crossover-tolerance 0.0001 real #f 0.0001)
(dpm/subtet/parent-face-tolerance 0.0001 real #f 0.0001)
(dpm/subtet/nci-overlap-fraction-cutoff 0.5 real #f 0.5)
(dpm/subtet/glancing-intersection-tolerance 1e-05 real #f 1e-05)
(dpm/subtet/location-filter-scale-factor 10 real #f 10)
(dpm/subtet/relocation-tolerance-scaling 1 real #f 1)
(dpm/subtet/wallfilm/relocation-tolerance-scaling 1 real #f 1)
(dpm/subtet/max-intersection-tolerance-fraction 0.1 real #f 0.1)
(dpm/subtet/missed-face-intersection-tolerance 0.25 real #f 0.25)
(dpm/subtet/subtet-intersection-tolerance 1e-05 real #f 1e-05)
(dpm/subtet/remove-from-sampling-face-fraction 0 real #f 0)
(dpm/subtet/remove-from-sliding-interface-fraction 0 real #f 0)
(dpm/subtet/remove-from-moving-plane-fraction 0.05 real #f 0.05)
(dpm/subtet/remove-from-stationary-plane-fraction 0.001 real #f 0.001)
(dpm/subtet/set-grid-id-after-relocation? #t boolean #f #t)
(dpm/subtet/move-lost-particles-to-known-cell? #t boolean #f #t)
(dpm/subtet/log-exterior_cells? #f boolean #f #f)
(dpm/subtet/remove-reflected-particles-from-walls? #f boolean #f #f)
(dpm/subtet/ignore-acceleration-for-intersections? #f boolean #f #f)
(dpm/subtet/update-velocity-at-intersection-point? #f boolean #f #f)
(dpm/subtet/reflect-pathlines-from-walls? #t boolean #f #t)
(dpm/subtet/check-for-missed-intersections? #t boolean #f #t)
(dpm/subtet/move-lost-particles-to-donor_cells? #t boolean #f #t)
(dpm/subtet/always-reflect-turbulent-fluctuations? #f boolean #f #f)
(dpm/subtet/ensure-particle-is-in-cell-after-migration? #t boolean #f #t)
(dpm/subtet/check-if-in-cell-before-accumulating-sources? #f boolean #f #f)
(dpm/subtet/barycentric-intersections? #f boolean #f #f)
(dpm/subtet/max-sum-of-timesteps-before-stuck 1e-30 real #f 1e-30)
(dpm/subtet/n-samples-in-running-sum 5 integer #f 5)
(dpm/subtet/remove-stuck-particles? #f boolean #f #f)
(dpm/subtet/check-subtet-before-intersections? #f boolean #f #f)
(dpm/subtet/use-quad-face-centroid-with-periodics? #t boolean #f #t)
(dpm/subtet/use-quad-face-centroid? #f boolean #f #f)
(dpm/subtet/check-subtet-validity? #f boolean #f #f)
(dpm/subtet/use-high-res-oil-flow? #f boolean #f #f)
(dpm/incompletes-cause-regression-failures? #f boolean #f #f)
(dpm/specific-warnings-cause-regression-failures? #f boolean #f #f)
(dpm/use-subtet-tracking? #t boolean #f #t)
(dpm/newton-method-max-cycles 20 integer #f 20)
(dpm/check-cubic-roots-tolerance 1e-12 real #f 1e-12)
(dpm/check-for-local-min-max? #t boolean #f #t)
(dpm/check-cubic-roots? #f boolean #f #f)
(dpm/injections-list () () #f ())
(dpm/relax 0.5 real #f 0.5)
(dpm/niter 10 integer #f 10)
(dpm/is-dpm-on #f boolean #f #f)
(dpm/particle-cache-size 0 integer #f 0)
(dpm/source-cache-size 0 integer #f 0)
(dpm/random-pool-size 0 integer #f 0)
(dpm/cache-size 1 integer #f 1)
(dpm/write-particle-data-method 1 integer #f 1)
(dpm/spawned-particle-relocation-method 1 integer #f 1)
(dpm/update-position-before-spawning-children? #t boolean #f #t)
(dpm/track-spawned-particles? #t boolean #f #t)
(dpm/span-particles-use-cell-locator? #t boolean #f #t)
(dpm/dpm-domain/expanding/rate-threshold-per-step 0.025 real #f 0.025)
(dpm/dpm-domain/expanding/check-interval 5 integer #f 5)
(dpm/dpm-domain/expanding/check? #f boolean #f #f)
(dpm/dpm-domain/exchange-dist-svars? #t boolean #f #t)
(dpm/dpm-domain/exchange-all-svars? #f boolean #f #f)
(dpm/dpm-domain/partition-method 1 integer #f 1)
(dpm/dpm-domain/update-sources-every-flow-iteration? #t boolean #f #t)
(dpm/dpm-domain/force-init-weight? #f boolean #f #f)
(dpm/dpm-domain/record-to-udm? #f boolean #f #f)
(dpm/dpm-domain/balance/reset-cell-steps/interval 5 integer #f 5)
(dpm/dpm-domain/balance/reset-cell-steps/on? #f boolean #f #f)
(dpm/dpm-domain/balance/weight-scale-factor 0 real #f 0)
(dpm/dpm-domain/balance/interval 100 integer #f 100)
(dpm/dpm-domain/balance/threshold 50 real #f 50)
(dpm/dpm-domain/balance/auto? #f boolean #f #f)
(dpm/dpm-domain/load-method 0 integer #f 0)
(dpm/dpm-domain/extra-layer 2 integer #f 2)
(dpm/dpm-domain/rank-per-machine 1 integer #f 1)
(dpm/dpm-domain/verbosity 0 integer #f 0)
(dpm/dpm-domain/use? #f boolean #f #f)
(dpm/parallel/mt-loop-over-particles? #t boolean #f #t)
(dpm/enforce-locks-in-mallocs? #f boolean #f #f)
(dpm/memory-alloc-limit 524288000 integer #f 524288000)
(dpm/parallel/disable-idle-wait? #f boolean #f #f)
(dpm/parallel/comm-optimization-verbosity 0 integer #f 0)
(dpm/parallel/comm-optimization? #t boolean #f #t)
(dpm/parallel/debug/perturb-svar-by 0 real #f 0)
(dpm/parallel/debug/svar -1 integer #f -1)
(dpm/parallel/auto-sort-particles-for-one-thread? #t boolean #f #t)
(dpm/parallel/sort-particles-for-tracking? #f boolean #f #f)
(dpm/parallel/sort-migrant-particles? #t boolean #f #t)
(dpm/parallel/hybrid-workpile? #f boolean #f #f)
(dpm/parallel/hybrid/deposit-in-order? #f boolean #f #f)
(dpm/parallel/lb-method 1 integer #f 1)
(dpm/parallel/group-size-minimum 50 integer #f 50)
(dpm/parallel/imbalance-tolerant 0.5 real #f 0.5)
(dpm/parallel/dem-part-method 0 integer #f 0)
(dpm/parallel/dem-hybrid? #f boolean #f #f)
(dpm/parallel/hybrid? #t boolean #f #t)
(dpm/parallel/loop-factor 10 integer #f 10)
(dpm/parallel/regenerate-chunk-list-always? #t boolean #f #t)
(dpm/parallel/regenerate-chunk-list? #t boolean #f #t)
(dpm/parallel/crossover-tolerance 0.02 real #f 0.02)
(dpm/parallel/print-verbosity 0 integer #f 0)
(dpm/parallel/lb-chunk-size 0 integer #f 0)
(dpm/parallel/max-recursion-depth 1000 integer #f 1000)
(dpm/parallel/homogeneous-net? #t boolean #f #t)
(dpm/distributed-memory-parallel? #t boolean #f #t)
(periodic/actual-pp-coeff #t boolean #f #t)
(periodic/bulk-temperature 300 real temperature 300)
(periodic/niter 2 integer #f 2)
(periodic/relax 0.5 real #f 0.5)
(periodic/flow-dir-z 0 real #f 0)
(periodic/flow-dir-y 0 real #f 0)
(periodic/flow-dir-x 1 real #f 1)
(periodic/pressure-derivative 0 real #f 0)
(periodic/mass-flow 0 real #f 0)
(periodic/specify-mass-flow? #f boolean #f #f)
(dbns-expl-update-timestep-counter? #t boolean #f #t)
(dbns-expl-const-time-interval? #f boolean #f #f)
(coupled-explicit/user-specified-time-interval 0 real time 0)
(variable-time-step/verbosity 0 integer #f 0)
(variable-time-step/undo-time-step? #t boolean #f #t)
(convergence-criteria/available? #t boolean #f #t)
(solution/converged? #f boolean #f #f)
(blending-courant-min 1 real #f 1)
(blending-courant-max 5 real #f 5)
(extrapolation-blending? #t boolean #f #t)
(premixc/extrap? #t boolean #f #t)
(pdf/extrap? #t boolean #f #t)
(vof/extrap? #t boolean #f #t)
(species/extrap? #t boolean #f #t)
(turbulence/extrap? #t boolean #f #t)
(temperature/extrap? #t boolean #f #t)
(pressure/extrap? #t boolean #f #t)
(velocity-flux/extrap? #t boolean #f #t)
(transient-vel-predict? #t boolean #f #t)
(extrapolate-vars? #f boolean #f #f)
(predict-next-time? #f boolean #f #f)
(variable-time-step? #f boolean #f #f)
(numb-fix-timesteps 1 integer #f 1)
(mp/dt-factor-max 1.2 real #f 1.2)
(mp/dt-factor-min 0.8 real #f 0.8)
(dt-init 1e-05 real time 1e-05)
(dt-max 10 real time 10)
(dt-min 1e-05 real time 1e-05)
(dt-factor-max 5 real #f 5)
(dt-factor-min 0.5 real #f 0.5)
(time-end 1000 real time 1000)
(time-err-toler 0.01 real #f 0.01)
(mg/coarsen-interval 1 integer #f 1)
(mg/max-cluster-print 16 integer #f 16)
(mg/verbosity 1 integer #f 1)
(mg/print-level 0 integer #f 0)
(mg/sequence-level 0 integer #f 0)
(mg/grid-levels 0 integer #f 0)
(mg/smooth 0.5 real #f 0.5)
(mg/relax 0.6 real #f 0.6)
(mg/cfl-factor 0.9 real #f 0.9)
(mg/iter/interp 0 integer #f 0)
(mg/iter/fine 1 integer #f 1)
(fmg-init/turbulent-viscosity-ratio 100 real #f 100)
(fmg-init/viscous? #f boolean #f #f)
(fmg-init/reacting? #f boolean #f #f)
(fmg-init/check-options? #t boolean #f #t)
(fmg-init/final-fas-cycles 1 integer #f 1)
(fmg-init/reorder? #t boolean #f #t)
(fmg-init/cfl 0.75 real #f 0.75)
(fmg-init/conv-limit-on-level (0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001) real-list #f (0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001))
(fmg-init/max-fas-iterations-on-level (1 10 50 100 500 500 500 500 500 500 500 500) integer-list #f (1 10 50 100 500 500 500 500 500 500 500 500))
(fmg-init/enable? #f boolean #f #f)
(fmg-init/verbose? #f boolean #f #f)
(fas-c/amg-stabilization 1 integer #f 1)
(fas-c/amg-method 1 integer #f 1)
(fas-c/cycle-type 1 integer #f 1)
(fas-c/amg-beta 0.7 real #f 0.7)
(fas-c/amg-alpha 0.1 real #f 0.1)
(amg-c/cfl-reduction-factor 0.1 real #f 0.1)
(amg-c/amg-stabilization 0 integer #f 0)
(amg-c/amg-method 0 integer #f 0)
(amg-c/cycle-type 3 integer #f 3)
(amg-c/amg-beta 0.7 real #f 0.7)
(amg-c/amg-alpha 0.1 real #f 0.1)
(amg-c/scheme 1 integer #f 1)
(coupled-flux-method 0 integer #f 0)
(amg/default/cycle-type 0 integer #f 0)
(amg-scalar/default/cycle-type 3 integer #f 3)
(amg-scalar/max-cycles 30 integer #f 30)
(amg-scalar/group-size-3d 6 integer #f 8)
(amg-scalar/group-size-2d 4 integer #f 4)
(amg-scalar/post-relaxations 3 integer #f 3)
(amg-scalar/relaxation-method "ilu" string #f "ilu")
(amg/diverge-rate 1.1 real #f 1.1)
(amg/diverge-iter 3 integer #f 3)
(amg/stall-or-diverge-rate 1 real #f 1)
(amg/stall-or-diverge-iter 1 integer #f 1)
(amg/greedy-coarsening? #t boolean #f #f)
(amg-coupled/greedy-coarsening? #t boolean #f #f)
(amg-coupled/second-layer-protection? #t boolean #f #t)
(amg/second-layer-protection? #t boolean #f #t)
(amg/early-protection? #t boolean #f #t)
(amg/stall-cycle 5 integer #f 5)
(amg/protective-enhanced? #t boolean #f #t)
(amg/protective-iterval 10 integer #f 10)
(amg/protective? #t boolean #f #t)
(amg/user-defined-linear-solver "" string #f "")
(amg/user-defined-smoother-gs "" string #f "")
(amg/user-defined-smoother "" string #f "")
(amg/mkl-ilu-eqn-allowed 4 integer #f 4)
(amg/mkl-ilu-auto 0 integer #f 0)
(amg-coupled/user-defined-linear-solver "" string #f "")
(amg-coupled/user-defined-smoother "" string #f "")
(amg-coupled/mkl-ilu-auto 1 integer #f 1)
(amg-coupled/global-solve-type 1 integer #f 1)
(amg-coupled/laplace-coarsening? #f boolean #f #f)
(amg-coupled/max-global-cycles 20 integer #f 20)
(amg-coupled/icepak/coarsening-assume-symmetry? #t boolean #f #t)
(amg-coupled/coarsening-assume-symmetry? #t boolean #f #t)
(amg-coupled/level-group-size () integer-list #f ())
(amg-coupled/group-size-3d 6 integer #f 8)
(amg-coupled/group-size-2d 4 integer #f 4)
(amg-coupled/max-coarse-levels 40 integer #f 40)
(amg-coupled/max-cycles 10 integer #f 10)
(amg-coupled/post-relaxations 3 integer #f 3)
(amg-coupled/pre-relaxations 0 integer #f 0)
(amg-coupled/relaxation-method "ilu" string #f "ilu")
(volume-flux/extrapolate/faces #t boolean #f #t)
(mass-flux/extrapolate/faces #t boolean #f #t)
(pressure/extrapolate/faces #t boolean #f #t)
(uw-stress/extrapolate/cells #t boolean #f #t)
(vw-stress/extrapolate/cells #t boolean #f #t)
(uv-stress/extrapolate/cells #t boolean #f #t)
(ww-stress/extrapolate/cells #t boolean #f #t)
(vv-stress/extrapolate/cells #t boolean #f #t)
(uu-stress/extrapolate/cells #t boolean #f #t)
(nut/extrapolate/cells #t boolean #f #t)
(omega/extrapolate/cells #t boolean #f #t)
(epsilon/extrapolate/cells #t boolean #f #t)
(k/extrapolate/cells #t boolean #f #t)
(mp/extrapolate/cells #t boolean #f #t)
(p1/extrapolate/cells #t boolean #f #t)
(temperature/extrapolate/cells #t boolean #f #t)
(z-velocity/extrapolate/cells #t boolean #f #t)
(y-velocity/extrapolate/cells #t boolean #f #t)
(x-velocity/extrapolate/cells #t boolean #f #t)
(pressure/extrapolate/cells #t boolean #f #t)
(solver/mode/init-at-read-case? #f boolean #f #f)
(solver/mode/overset-defaults? #t boolean #f #t)
(solver/mode/default-urfs #f boolean #f #f)
(solver/mode/tight-amg #f boolean #f #f)
(solver/mode/coupled-pseudo-transient #t boolean #f #t)
(solver/mode/preview-defaults #f boolean #f #f)
(solver/mode/fast #f boolean #f #f)
(solver/mode/robust #f boolean #f #f)
(solver/krylov/verbosity 0 integer #f 0)
(solver/krylov/skip 1 integer #f 1)
(solver/krylov/size 10 integer #f 10)
(solver/krylov/method "none" string #f "none")
(solver/cg/always-allow-cg? #f boolean #f #f)
(solver/precondition/max-cycles 1 integer #f 1)
(solver/precondition/verbosity 0 integer #f 0)
(solver/precondition/scale-corrections? #f boolean #f #f)
(solver/precondition/alpha 0.3 real #f 0.3)
(solver/precondition/max-sweeps 1 integer #f 1)
(solver/precondition/method 0 integer #f 0)
(solver/precondition? #t boolean #f #t)
(solver/precondition/reuse 1 integer #f 1)
(solver/stabilization/max-iter 50 integer #f 50)
(solver/stabilization/gmres/decrease-last-used-krylov-size 0 integer #f 0)
(solver/stabilization/gmres/store-last-used-krylov-size? #t boolean #f #t)
(solver/stabilization/gmres/flexible-krylov-size? #t boolean #f #t)
(solver/stabilization/gmres/conv-break-krylov-loop/ksize 2 integer #f 2)
(solver/stabilization/gmres/conv-break-krylov-loop? #t boolean #f #t)
(solver/stabilization/gmres/alpha-factor 0.5 real #f 0.5)
(solver/stabilization/krylov/max-size 50 integer #f 50)
(solver/stabilization/krylov/size-last-used 0 integer #f 0)
(solver/stabilization/krylov/size 5 integer #f 5)
(solver/stabilization/second-layer-protection/gmres/max-iter 50 integer #f 50)
(solver/stabilization/second-layer-protection/method 4 integer #f 4)
(solver/stabilization/second-layer-protection? #t boolean #f #t)
(matrix/segregated-diagnostics? #f boolean #f #f)
(matrix/coupled-diagnostics? #f boolean #f #f)
(matrix/segregated-row-monitor -2 integer #f -2)
(matrix/coupled-row-monitor -2 integer #f -2)
(matrix/three-files-when-ascii? #f boolean #f #f)
(matrix/write-ascii? #f boolean #f #f)
(matrix/system-name "none" string #f "none")
(amg/flatten-coupled-system? #t boolean #f #t)
(amg/smoother/sweep-partition-interface? #f boolean #f #f)
(amg/smoother/under-relax-factor 1 real #f 1)
(amg/coarse-level-diagnostics/system-name "none" string #f "none")
(amg/coarse-level-diagnostics/enable? #f boolean #f #f)
(amg/cross 0 integer #f 0)
(amg/dd-diagnostics/system-name "none" string #f "none")
(amg/residual-record? #f boolean #f #f)
(amg/dd-diagnostics/enable? #f boolean #f #f)
(amg/parallel/global-check-coarsening? #f boolean #f #f)
(amg/laplace-coarsening? #f boolean #f #f)
(amg/global-solve-omp 100 integer #f 100)
(amg/max-global-cycles 20 integer #f 20)
(amg/check-global-solution 0 integer #f 0)
(amg/memory-chunk-size 10485760 integer #f 10485760)
(amg/memory-chunk-use 1 integer #f 1)
(amg/malloc-oversize-percent 0 real #f 0)
(amg/ilu-method-relax 1 integer #f 1)
(amg/ilu-cpld-relax 0.9 real #f 0.9)
(amg/ilu-seg-relax 1 real #f 1)
(amg/stabilization 0 integer #f 0)
(amg/method 0 integer #f 0)
(amg/v5? #f boolean #f #f)
(amg/reuse-fine-level? #t boolean #f #t)
(amg/save-temps? #t boolean #f #t)
(amg/ignore-slow-communication? #f boolean #f #f)
(amg/ignore-slow-communication-interval 1 integer #f 1)
(amg/force-slow-communication-optimization? #f boolean #f #f)
(amg/parallel/global-master-dist 0 integer #f 0)
(amg/parallel/hierarchy -2 integer #f -2)
(amg/parallel/use-hybrid-optimization? #f boolean #f #f)
(amg/parallel/use-hybrid 1000 integer #f 1000)
(amg/global-solve-optimization? #t boolean #f #t)
(amg/global-solve-type 1 integer #f 1)
(amg/global-solve? #t boolean #f #t)
(amg/sweep-exchange -1 integer #f -1)
(amg/schwarz? #f boolean #f #f)
(amg/tolerance 5e-06 real #f 5e-06)
(amg/divergence-epsilon 1000 real #f 1000)
(amg/neighbor-optimization-level 1 integer #f 1)
(amg/scale-list () string-list #f ())
(amg/ignore-scale-filter? #t boolean #f #t)
(amg/scale-filter? #t boolean #f #t)
(amg/scale-corrections? #t boolean #f #t)
(amg/parallel/merge-level -1 integer #f -1)
(amg/parallel/sync-interval 1 integer #f 1)
(amg/parallel/method 0 integer #f 0)
(amg/group-within-cluster? #t boolean #f #t)
(amg/relax-sweeps 2 integer #f 2)
(amg/clustering-direction 0 integer #f 0)
(amg/coordinate-clustering? #f boolean #f #f)
(amg/freeze-coarse-levels? #f boolean #f #f)
(amg/fixed-cycles -1 integer #f -1)
(amg/max-cycles 30 integer #f 30)
(amg/max-coarse-relaxations 50 integer #f 50)
(amg/max-fine-relaxations 30 integer #f 30)
(amg/map-neighb/always? #f boolean #f #f)
(amg/map-neighb/poly? #t boolean #f #t)
(amg/conservative-amg-coarsening? #t boolean #f #t)
(amg-coupled/conservative-amg-coarsening? #t boolean #f #t)
(amg/grouping/stop-method 0 integer #f 0)
(amg/grouping/check-self? #f boolean #f #f)
(amg/grouping/check-exterior-scale 1 real #f 1)
(amg/grouping/check-exterior? #f boolean #f #f)
(amg/icepak/coarsening-assume-symmetry? #t boolean #f #t)
(amg/coarsening-assume-symmetry? #f boolean #f #f)
(amg/greedy-force-nonsymmetric? #t boolean #f #t)
(amg/group-method-fallback 0 integer #f 0)
(amg-coupled/group-method-fallback 0 integer #f 0)
(amg-coupled/group-method 0 integer #f 0)
(amg/group-method 0 integer #f 0)
(amg-coupled/min-group-size 1 integer #f 1)
(amg/min-group-size 1 integer #f 1)
(amg/level-group-size () integer-list #f ())
(amg/group-size 2 integer #f 2)
(amg/max-coarse-levels 40 integer #f 40)
(amg/post-relaxations 1 integer #f 1)
(amg/pre-relaxations 0 integer #f 0)
(amg/verbosity 0 integer #f 0)
(amg/amgx-smooth () string-list #f ())
(amg/amgx-post () integer-list #f ())
(amg/amgx-pre () integer-list #f ())
(amg/amgx-csize () integer-list #f ())
(amg/amgx-ncycle () integer-list #f ())
(amg/amgx-solver () string-list #f ())
(amg/amgx-term () real-list #f ())
(amg/amgx-enable? () boolean-list #f ())
(amg/amgx-eqn-name () string-list #f ())
(amg/amgx-neqn 0 integer #f 0)
(amg/amgx-config "" string #f "")
(relaxation-method "gauss-seidel" string #f "gauss-seidel")
(mp/operating-density/method 0 integer #f 0)
(op-rho-warn-models-changed? #t boolean #f #t)
(use-operating-density? #f boolean #f #f)
(operating-density 1.225 real density 1.225)
(operating-temperature 288.16 real temperature 288.16)
(body-force/explicit-relax 1 real #f 1)
(body-force/relax 1 real #f 1)
(implicit-bf? #f boolean #f #f)
(z-pull-velocity/patch 0 real velocity 0)
(y-pull-velocity/patch 0 real velocity 0)
(x-pull-velocity/patch 0 real velocity 0)
(pull/niter 1 integer #f 1)
(pull/max-iter 5 integer #f 5)
(pull/explicit-relax 1 real #f 1)
(pull/residual-tolerance 0.0001 real #f 0.0001)
(pull/iter-tolerance 0.05 real #f 0.05)
(pull/amg-stabilization 0 integer #f 0)
(pull/amg-method 0 integer #f 0)
(pull/cycle-type 1 integer #f 1)
(pull/amg-beta 0.7 real #f 0.7)
(pull/amg-alpha 0.0001 real #f 0.0001)
(pull/scheme 10 integer #f 10)
(pull/solve? #f boolean #f #f)
(melt/solute-ref-mf () list #f ())
(melt/use-solute-ref-mf? #f boolean #f #f)
(melt/tstar-mixture-kp? #f boolean #f #f)
(melt/method-back-diff-beta () () #f ())
(melt/liqf-diff-src? #f boolean #f #f)
(melt/liqf-small 0.0001 real #f 0.0001)
(melt/slope-limit-fac 1 real #f 1)
(melt/slope-cutoff-fac 0.01 real #f 0.01)
(melt/limit-spe-seg? #t boolean #f #t)
(melt/back-diff-beta 0.1 real #f 0.1)
(melt/include-back-diffusion? #f boolean #f #f)
(melt/therm-buoyancy? #f boolean #f #f)
(melt/solut-buoyancy? #f boolean #f #f)
(melt/liqf-update-explicit? #f boolean #f #f)
(melt/tot-spe-scheil? #f boolean #f #f)
(melt/pow-index 2 real #f 2)
(melt/tstar-method 2 integer #f 2)
(melt/solid-model-lever? #t boolean #f #t)
(melt/u-us-term? #f boolean #f #f)
(melt/method-mushy-zone-constant () () #f ())
(melt/mushy-zone-constant 100000 real #f 100000)
(liqf/relax 0.01 real #f 0.01)
(delh/patch 0 real energy 0)
(delh/n-sweeps 5 integer #f 5)
(delh/default 0 real liquid-fraction 0)
(delh/relax 0.9 real #f 0.9)
(pdftss/post-process? #t boolean #f #t)
(pdftss/back-rate-scaling? #t boolean #f #t)
(pdftss/scalar-list () string-list #f ())
(pdftss/solve-tss? #f boolean #f #f)
(pdftss/tss-num-scalars 0 integer #f 0)
(pdftss/tss-scalar-on? (#f #f #f #f #f #f #f #f #f #f) boolean-list #f (#f #f #f #f #f #f #f #f #f #f))
(pdftss/explicit-relax 1 real #f 1)
(pdftss/residual-tolerance 0.0001 real #f 0.0001)
(pdftss/iter-tolerance 0.05 real #f 0.05)
(pdftss/max-iter 5 integer #f 5)
(tss/patch (0 0 0 0 0 0 0 0 0 0) real-list #f (0 0 0 0 0 0 0 0 0 0))
(tss/default (0 0 0 0 0 0 0 0 0 0) real-list #f (0 0 0 0 0 0 0 0 0 0))
(pdftss/default 0 real #f 0)
(pdftss/patch 0 real #f 0)
(pdftss/amg-stabilization 0 integer #f 0)
(pdftss/amg-method 0 integer #f 0)
(pdftss/cycle-type 0 integer #f 0)
(pdftss/amg-beta 0.7 real #f 0.7)
(pdftss/amg-alpha 0.1 real #f 0.1)
(pdftss/scheme 1 integer #f 1)
(pdftss/relax 1 real #f 1)
(pdftss/solve? #t boolean #f #t)
(premixc/fgm-scaling-fac 20 real #f 20)
(premixc/fgm-ed-beta 20 real #f 20)
(premixc/max-atf 100 real #f 100)
(premixc/fgm-tfm-eff-udm-id 2 integer #f 2)
(premixc/fgm-tfm-omega-udm-id 1 integer #f 1)
(premixc/fgm-tfm-f-udm-id 0 integer #f 0)
(premixc/fgm-tfm-user? #f boolean #f #f)
(premixc/fgm-tfm-fl-thick-udm-id 4 integer #f 4)
(premixc/fgm-tfm-fl-thick 0.0001 real #f 0.0001)
(premixc/fgm-tfm-fl-thick-user 0 integer #f 0)
(premixc/fgm-tfm-ngrid-pts-flame 4 integer #f 4)
(premixc/fgm-tfm-eff? #t boolean #f #t)
(premixc/fgm-ed-const-scaling? #f boolean #f #f)
(premixc/fgm-ed-ff-full? #f boolean #f #f)
(premixc/fgm-ed-ff? #f boolean #f #f)
(premixc/fgm-tfs-nres-les 1 real #f 1)
(premixc/fgm-tfs-delta-user 0.0001 real #f 0.0001)
(premixc/fgm-tfs-delta-type 0 integer #f 0)
(premixc/fgm-tfs-include-kcurve? #f boolean #f #f)
(premixc/fgm-tfs-abs-strain? #f boolean #f #f)
(premixc/fgm-tfs-kmean-method 1 integer #f 1)
(premixc/fgm-tfs-x-sc-pp? #f boolean #f #f)
(premixc/fgm-tfs-str-udm-id 0 integer #f 0)
(premixc/fgm-tfs-user-str-rate? #f boolean #f #f)
(premixc/fgm-tfs-strained? #f boolean #f #f)
(premixc/fgm-src-param-3 0 real #f 0)
(premixc/fgm-src-method-3? #f boolean #f #f)
(premixc/fgm-src-method-2-option 0 integer #f 0)
(premixc/fgm-src-param-2 2 real #f 2)
(premixc/fgm-src-method-2? #f boolean #f #f)
(premixc/fgm-src-param-1 3 integer #f 3)
(premixc/fgm-src-method-1? #f boolean #f #f)
(premixc/dpm-src-c? #f boolean #f #f)
(premixc/sbes-st-blending-method 1 integer #f 1)
(premixc/use-inst-yceq? #t boolean #f #t)
(premixc/linearize-ycvar-src? #f boolean #f #f)
(premixc/include-ycvar-rxn-src? #f boolean #f #f)
(premixc/fgm-yc-eq-fac 1.01 real #f 1.01)
(premixc/rxn-source-apfac 0 real #f 0)
(premixc/rxn-source-ctol 1e-06 real #f 1e-06)
(premixc/weighted-c-smallf 1e-06 real #f 1e-06)
(premixc/weighted-c? #f boolean #f #f)
(premixc/wall-damping-const 1 real #f 1)
(premixc/explicit-relax 1 real #f 1)
(premixc/residual-tolerance 0.0001 real #f 0.0001)
(premixc/iter-tolerance 0.05 real #f 0.05)
(premixc/max-iter 5 integer #f 5)
(premixc/default 1 real #f 1)
(premixc/patch 0 real #f 0)
(premixc/amg-stabilization 0 integer #f 0)
(premixc/amg-method 0 integer #f 0)
(premixc/cycle-type 0 integer #f 0)
(premixc/amg-beta 0.7 real #f 0.7)
(premixc/amg-alpha 0.1 real #f 0.1)
(premixc/scheme 1 integer #f 1)
(premixc/relax 0.9 real #f 0.9)
(premixed/solve? #t boolean #f #t)
(ufla-y/default 0 real #f 0)
(ufla-y/patch 0 real #f 0)
(ufla-y/amg-stabilization 0 integer #f 0)
(ufla-y/amg-method 0 integer #f 0)
(ufla-y/cycle-type 0 integer #f 0)
(ufla-y/amg-beta 0.7 real #f 0.7)
(ufla-y/amg-alpha 0.1 real #f 0.1)
(ufla-y/scheme 1 integer #f 1)
(ufla-y/relax 1 real #f 1)
(ufla-y/solve? #t boolean #f #t)
(vd-fvar/default 0 real micro-mix-viscous-diffusive-variance 0)
(vd-fvar/patch 0 real micro-mix-viscous-diffusive-variance 0)
(vd-fvar/amg-stabilization 0 integer #f 0)
(vd-fvar/amg-method 0 integer #f 0)
(vd-fvar/cycle-type 0 integer #f 0)
(vd-fvar/amg-beta 0.7 real #f 0.7)
(vd-fvar/amg-alpha 0.1 real #f 0.1)
(vd-fvar/scheme 1 integer #f 1)
(vd-fvar/relax 0.9 real #f 0.9)
(vc-fvar/default 0 real micro-mix-viscous-convective-variance 0)
(vc-fvar/patch 0 real micro-mix-viscous-convective-variance 0)
(vc-fvar/amg-stabilization 0 integer #f 0)
(vc-fvar/amg-method 0 integer #f 0)
(vc-fvar/cycle-type 0 integer #f 0)
(vc-fvar/amg-beta 0.7 real #f 0.7)
(vc-fvar/amg-alpha 0.1 real #f 0.1)
(vc-fvar/scheme 1 integer #f 1)
(vc-fvar/relax 0.9 real #f 0.9)
(ic-fvar/default 0 real micro-mix-inertial-convective-variance 0)
(ic-fvar/patch 0 real micro-mix-inertial-convective-variance 0)
(ic-fvar/amg-stabilization 0 integer #f 0)
(ic-fvar/amg-method 0 integer #f 0)
(ic-fvar/cycle-type 0 integer #f 0)
(ic-fvar/amg-beta 0.7 real #f 0.7)
(ic-fvar/amg-alpha 0.1 real #f 0.1)
(ic-fvar/scheme 1 integer #f 1)
(ic-fvar/relax 0.9 real #f 0.9)
(micro-mix/real-consts (2 1.86 0.058 0.303 17050) real-list #f (2 1.86 0.058 0.303 17050))
(species/micro-mixing? #f boolean #f #f)
(fvar2/explicit-relax 1 real #f 1)
(fvar2/residual-tolerance 0.0001 real #f 0.0001)
(fvar2/iter-tolerance 0.05 real #f 0.05)
(fvar2/max-iter 5 integer #f 5)
(fvar2/default 0 real secondary-mixture-fraction-variance 0)
(fvar2/patch 0 real secondary-mixture-fraction-variance 0)
(fvar2/amg-stabilization 0 integer #f 0)
(fvar2/amg-method 0 integer #f 0)
(fvar2/cycle-type 0 integer #f 0)
(fvar2/amg-beta 0.7 real #f 0.7)
(fvar2/amg-alpha 0.1 real #f 0.1)
(fvar2/scheme 1 integer #f 1)
(fvar2/relax 0.9 real #f 0.9)
(fvar/explicit-relax 1 real #f 1)
(fvar/residual-tolerance 0.0001 real #f 0.0001)
(fvar/iter-tolerance 0.05 real #f 0.05)
(fvar/max-iter 5 integer #f 5)
(fvar/default 0 real mixture-fraction-variance 0)
(fvar/patch 0 real mixture-fraction-variance 0)
(fvar/amg-stabilization 0 integer #f 0)
(fvar/amg-method 0 integer #f 0)
(fvar/cycle-type 0 integer #f 0)
(fvar/amg-beta 0.7 real #f 0.7)
(fvar/amg-alpha 0.1 real #f 0.1)
(fvar/scheme 1 integer #f 1)
(fvar/relax 0.9 real #f 0.9)
(fmean2/explicit-relax 1 real #f 1)
(fmean2/residual-tolerance 0.0001 real #f 0.0001)
(fmean2/iter-tolerance 0.05 real #f 0.05)
(fmean2/max-iter 5 integer #f 5)
(fmean2/default 0 real secondary-mean-mixture-fraction 0)
(fmean2/patch 0 real secondary-mean-mixture-fraction 0)
(fmean2/amg-stabilization 0 integer #f 0)
(fmean2/amg-method 0 integer #f 0)
(fmean2/cycle-type 0 integer #f 0)
(fmean2/amg-beta 0.7 real #f 0.7)
(fmean2/amg-alpha 0.1 real #f 0.1)
(fmean2/scheme 1 integer #f 1)
(fmean2/relax 1 real #f 1)
(fmean/explicit-relax 1 real #f 1)
(fmean/residual-tolerance 0.0001 real #f 0.0001)
(fmean/iter-tolerance 0.05 real #f 0.05)
(fmean/max-iter 5 integer #f 5)
(fmean/default 0 real mean-mixture-fraction 0)
(fmean/patch 0 real mean-mixture-fraction 0)
(fmean/amg-stabilization 0 integer #f 0)
(fmean/amg-method 0 integer #f 0)
(fmean/cycle-type 0 integer #f 0)
(fmean/amg-beta 0.7 real #f 0.7)
(fmean/amg-alpha 0.1 real #f 0.1)
(fmean/scheme 1 integer #f 1)
(fmean/relax 1 real #f 1)
(pdf/multi-fgm-pdf-file-names () string-list #f ())
(pdf/multi-fgm-real-flags (0.01 0.99) real-list #f (0.01 0.99))
(pdf/multi-fgm-fl-index-id -1 integer #f -1)
(pdf/multi-fgm-flags (#t #f #f) boolean-list #f (#t #f #f))
(pdf/multi-fgm-on? #f boolean #f #f)
(nonad-fla/expert-on? #f boolean #f #f)
(pdf/enable-fgm-nox-tci? #f boolean #f #f)
(pdf/mechanism-available? #t boolean #f #t)
(pdf/sbes-turb-comb-update-sync? #t boolean #f #t)
(pdf/fgm-r17-properties? #f boolean #f #f)
(pdf/diff-fgm-rich-limit 1.01 real #f 1.01)
(pdf/pdf-use-flamelet-grid? #f boolean #f #f)
(pdf/table-par? #t boolean #f #t)
(pdf/table-max-nodes 50 integer #f 50)
(pdf/fgm-nonad-5d? #f boolean #f #f)
(pdf/c-interp-tol 0.001 real #f 0.001)
(pdf/nox-int-limit 0.001 real #f 0.001)
(pdf/interpolation-method-linear? #t boolean #f #t)
(pdf/auto-refine/fmin (0.001 0.001 0.001) real-list #f (0.001 0.001 0.001))
(pdf/auto-refine/min-pts (15 15 15) integer-list #f (15 15 15))
(pdf/auto-refine/coarsen-val 0.05 real #f 0.05)
(pdf/auto-refine/coarsening? #f boolean #f #f)
(pdf/auto-refine/fmean-init-uniform-grid? #f boolean #f #f)
(pdf/auto-refine/min-range 0.05 real #f 0.05)
(pdf/auto-refine/ratio 10 real #f 10)
(pdf/auto-refine/slope 0.25 real #f 0.25)
(pdf/auto-refine/value 0.25 real #f 0.25)
(pdf/auto-refine/max-pts 200 integer #f 200)
(pdf/auto-refine/init-pts 15 integer #f 15)
(pdf/refine-spe-list ("h2" "co" "oh") string-list #f ("h2" "co" "oh"))
(pdf/auto-refine? #t boolean #f #t)
(premix/algebraic-variance-const 0.1 real #f 0.1)
(par-premix/un-norm-c? #f boolean #f #f)
(pdf/prmx-fla-turb-chem-model 0 integer #f 0)
(prepdf/nonad-premix-burns? #f boolean #f #f)
(prepdf/fla-verbosity 0 integer #f 0)
(prepdf/ignore-error-id -100 integer #f -100)
(prepdf/write-sl-to-file? #f boolean #f #f)
(prepdf/calc-sl-free? #f boolean #f #f)
(prepdf/strained-fla-include-sl0? #t boolean #f #t)
(prepdf/strained-fla-nonad? #f boolean #f #f)
(prepdf/strained-fla-hloss (0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.51 0.52 0.53 0.54 0.55 0.5600000000000001 0.57 0.58 0.59) real-list #f (0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.51 0.52 0.53 0.54 0.55 0.5600000000000001 0.57 0.58 0.59))
(prepdf/strained-fla-write-sc-csv? #f boolean #f #f)
(prepdf/strained-fla-npts-regrid 101 integer #f 101)
(prepdf/strained-fla-npts-regrid-limit 251 integer #f 251)
(prepdf/strained-fla-fuel-spe ("ch4") string-list #f ("ch4"))
(prepdf/strained-fla-delx 100 real #f 100)
(prepdf/strained-fla-x0 500 real #f 500)
(prepdf/strained-fla-domain-length 0.01 real #f 0.01)
(prepdf/strained-fla-output-method -1 integer #f -1)
(prepdf/strained-fla-unity-le? #f boolean #f #f)
(prepdf/strained-fla-auto-refine/max-pts 500 integer #f 500)
(prepdf/strained-fla-auto-refine/slope 0.1 real #f 0.1)
(prepdf/strained-fla-auto-refine/value 0.5 real #f 0.5)
(prepdf/strained-fla-auto-refine/init-pts 20 integer #f 20)
(prepdf/strained-fla-rtol 0.0001 real #f 0.0001)
(prepdf/strained-fla-atol 1e-09 real #f 1e-09)
(prepdf/strained-flamelet? #f boolean #f #f)
(prepdf/calc-nfgm-par? #t boolean #f #t)
(prepdf/nfgm-hmethod 0 integer #f 0)
(prepdf/nonadia-fla-max-inlet-temp 1000 real #f 1000)
(prepdf/nonadia-fla-min-burn-temp 1200 real #f 1200)
(prepdf/nonadia-fla-tswitch 273.15 real #f 273.15)
(prepdf/nonadia-fla-burner-dt 10 real #f 10)
(prepdf/fgm-ycin? #t boolean #f #t)
(prepdf/nonadia-premix-fgm? #f boolean #f #f)
(prepdf/nonadia-fla-h-real-params (300 300 20 200) real-list #f (300 300 20 200))
(prepdf/nonadia-fla-h-int-params (21 0) integer-list #f (21 0))
(prepdf/nonadia-fla-burner-max-vel-ratio 0.9 real #f 0.9)
(prepdf/nonadia-fla-uniform-heatloss-grid? #f boolean #f #f)
(prepdf/ckcfd-prmx-fla-sflr -1e-06 real #f -1e-06)
(prepdf/ckcfd-prmx-fla-inlet-vel 40 real #f 40)
(prepdf/ckcfd-prmx-fla-hot-stretch 1.2 real #f 1.2)
(prepdf/ckcfd-prmx-fla-cold-stretch 1.1 real #f 1.1)
(prepdf/ckcfd-prmx-burner-fla-vel-ratio 0.05 real #f 0.05)
(prepdf/ckcfd-prmx-burner-fla-min-vel 0.01 real #f 0.01)
(prepdf/prmx-nonadia-all-freely-propagating? #f boolean #f #f)
(prepdf/ckcfd-prmx-max-attempts 50 integer #f 50)
(prepdf/ckcfd-prmx-fla-output-method -1 integer #f -1)
(prepdf/ckcfd-prmx-fla-auto-refine/slope 0.1 real #f 0.1)
(prepdf/ckcfd-prmx-fla-auto-refine/value 0.5 real #f 0.5)
(prepdf/ckcfd-prmx-fla-auto-refine/max-pts 250 integer #f 250)
(prepdf/ckcfd-prmx-fla-auto-refine/init-pts 12 integer #f 12)
(prepdf/ckcfd-prmx-fla-unity-le? #t boolean #f #t)
(prepdf/ckcfd-prmx-fla-real-params (-0.1 0.1 10 0.5 0.1) real-list #f (-0.1 0.1 10 0.5 0.1))
(prepdf/ckcfd-prmx-fla-rtol 0.0001 real #f 0.0001)
(prepdf/ckcfd-prmx-fla-atol 1e-09 real #f 1e-09)
(prepdf/premix-phy-fla-method 1 integer #f 1)
(prepdf/premix-physical-flamelet? #f boolean #f #f)
(prepdf/nonadia-fgm-fully-premixed? #f boolean #f #f)
(prepdf/user-fl-pdf-fsto 0 real #f 0)
(prepdf/user-fl-pdf-grids? (#f #f #f #f #f #f #f #f) boolean-list #f (#f #f #f #f #f #f #f #f))
(prepdf/user-pdf-cvar-pts () real-list #f ())
(prepdf/user-pdf-fvar-pts () real-list #f ())
(prepdf/user-pdf-h-pts () real-list #f ())
(prepdf/user-pdf-c-pts () real-list #f ())
(prepdf/user-pdf-f-pts () real-list #f ())
(prepdf/user-fl-h-pts () real-list #f ())
(prepdf/user-fl-c-pts () real-list #f ())
(prepdf/user-fl-f-pts () real-list #f ())
(prepdf/prop-lam-ktc 0.0454 real #f 0.0454)
(prepdf/prop-lam-mu 1.72e-05 real #f 1.72e-05)
(prepdf/user-fmean (0.055) real-list #f (0.055))
(prepdf/user-fmean-grid? #f boolean #f #f)
(prepdf/sfla-min-temp 500 real #f 500)
(prepdf/fgm-ode-conv-params (0.3 0.03 10) real-list #f (0.3 0.03 10))
(prepdf/fla-ode-conv-params (0.3 0.2 10 0.1 0.0001 1) real-list #f (0.3 0.2 10 0.1 0.0001 1))
(prepdf/coarse-fla-int-params (16 10 3) integer-list #f (16 10 3))
(prepdf/coarse-fla-real-params (1e-06 0.001 1e-15 1e-05 100000 0.0001 500 10) real-list #f (1e-06 0.001 1e-15 1e-05 100000 0.0001 500 10))
(prepdf/fla-resid-method-old? #t boolean #f #t)
(prepdf/use-coarse-fla-for-init? #t boolean #f #t)
(prepdf/atol-params (1 1e-09 1e-18) real-list #f (1 1e-09 1e-18))
(prepdf/fla-gen-method 1 integer #f 1)
(prepdf/spe-check-conv ("co" "co2" "oh" "h2o" "h2") string-list #f ("co" "co2" "oh" "h2o" "h2"))
(prepdf/fla-max-int-time 1000000 real #f 1000000)
(prepdf/uns-fla-fm 1.02 real #f 1.02)
(prepdf/scadis-ratio 10 real #f 10)
(prepdf/x-low-limit 1e-05 real #f 1e-05)
(prepdf/sync-all-nodes? #t boolean #f #t)
(prepdf/max-nodes-fla 10 integer #f 10)
(prepdf/eqm-fla-for-c? #f boolean #f #f)
(prepdf/ud-fl-params? #f boolean #f #f)
(prepdf/diff-x-low-lim 1e-10 real #f 1e-10)
(prepdf/prmx-x-low-lim 0.01 real #f 0.01)
(prepdf/prmx-fla-init-hmethod? #t boolean #f #t)
(prepdf/prmx-fla-rich-limit 1.25 real #f 1.25)
(prepdf/fla-gen-expert? #t boolean #f #t)
(prepdf/fla-num-attempts 3 integer #f 3)
(prepdf/prmx-xsto-lim 0.01 real #f 0.01)
(prepdf/prmx-xsto-c 1000 real #f 1000)
(prepdf/prmx-num-c-pts 32 integer #f 32)
(prepdf/prmx-pv-default? #t boolean #f #t)
(prepdf/prmx-fla-alpha-default (("co" . 1) ("co2" . 1) ("h2o" . 0) ("ho2" . 0)) list #f (("co" . 1) ("co2" . 1) ("h2o" . 0) ("ho2" . 0)))
(prepdf/prmx-fla-alpha (("co" . 1) ("co2" . 1)) list #f (("co" . 1) ("co2" . 1)))
(prepdf/max-diff-fgms 100 integer #f 100)
(prepdf/prmx-flamelet-type 1 integer #f 1)
(prepdf/prmx-flamelet? #f boolean #f #f)
(prepdf/max-non-adia-lam-flame-speed 10 real #f 10)
(prepdf/non-adia-lam-flame-speed? #f boolean #f #f)
(prepdf/c-mid 0.9 real #f 0.9)
(prepdf/c-stretch 0.25 real #f 0.25)
(prepdf/f-stretch 1.2 real #f 1.2)
(prepdf/nfb2 21 integer #f 21)
(pdf/multi-tabulation? #f boolean #f #f)
(pdf/pollut-postproc-init? #f boolean #f #f)
(prepdf/compress-op-pres 101325 real pressure 101325)
(chemkin-surf-tran-import-name-editable? #t boolean #f #t)
(chemkin-import-name-editable? #t boolean #f #t)
(prepdf/empirical-secondary-mw 30 real #f 30)
(prepdf/empirical-fuel-mw 30 real #f 30)
(prepdf/liquid-fsto 0.5 real #f 0.5)
(prepdf/dufl-init-droplet? #t boolean #f #t)
(prepdf/dufl-reinit? #f boolean #f #f)
(prepdf/dufl-stop-rxn? #f boolean #f #f)
(prepdf/dufl-init-burnt? #f boolean #f #f)
(prepdf/dufl-fluid-zones () integer-list #f ())
(prepdf/dufl-inj-params () () #f ())
(prepdf/dufl-num-solv-fl 1 integer #f 1)
(prepdf/ufla-multi-init-scadis? #t boolean #f #t)
(prepdf/ufla-num-fl 1 integer #f 1)
(prepdf/ufla-cfl 1 real #f 1)
(prepdf/ufla-max-scal-diss 30 real #f 30)
(prepdf/ufla-f-init-hi 1 real #f 1)
(prepdf/ufla-f-init 0.1 real #f 0.1)
(prepdf/ufla-h-relax 0.01 real #f 0.01)
(prepdf/ufla-frac-heat-loss-pts 0.75 real #f 0.75)
(prepdf/ufla-num-h-pts 10 integer #f 10)
(prepdf/ufla-y-slow "no" string #f "no")
(prepdf/ufla-num-y-slow-pts 20 integer #f 20)
(prepdf/ufla-x0 10 real #f 10)
(prepdf/ufla-res-time 1 real #f 1)
(prepdf/ufla? #f boolean #f #f)
(prepdf/unsteady-flamelet? #f boolean #f #f)
(prepdf/default-thermo-db-fname "" string #f "")
(prepdf/mf-method 0 integer #f 0)
(prepdf/frozen-boundaries 1 integer #f 1)
(prepdf/max-species 20 integer #f 20)
(prepdf/nne 41 integer #f 41)
(prepdf/nfl2 21 integer #f 21)
(prepdf/nfl 21 integer #f 21)
(prepdf/nfb 31 integer #f 31)
(prepdf/calculate? #f boolean #f #f)
(prepdf/function-type 1 integer #f 1)
(prepdf/type 3 integer #f 3)
(prepdf/stoich (1 2 -1 -2) real-list #f (1 2 -1 -2))
(prepdf/include-equil-flamelet? #t boolean #f #t)
(prepdf/solve-fla-serial? #t boolean #f #t)
(prepdf/solve-fla-on-host? #f boolean #f #f)
(prepdf/flamelet-auto-refine/diffuse-x 1 real #f 1)
(prepdf/flamelet-auto-refine/premix-f 0.05 real #f 0.05)
(prepdf/flamelet-auto-refine/user-specify-premix-f? #f boolean #f #f)
(prepdf/flamelet-auto-refine/max-pts 64 integer #f 64)
(prepdf/flamelet-auto-refine/init-pts 8 integer #f 8)
(prepdf/flamelet-auto-refine/fmax 0.99 real #f 0.99)
(prepdf/flamelet-auto-refine/fmin 0.01 real #f 0.01)
(prepdf/flamelet-auto-refine/min-range 0.05 real #f 0.05)
(prepdf/flamelet-auto-refine/ratio 10 real #f 10)
(prepdf/flamelet-auto-refine/slope 0.5 real #f 0.5)
(prepdf/flamelet-auto-refine/value 0.5 real #f 0.5)
(prepdf/flamelet-auto-refine/verbosity? #f boolean #f #f)
(prepdf/flamelet-auto-refine? #f boolean #f #f)
(prepdf/flamelet-scaled-atol-min 9.999999999999999e-21 real #f 9.999999999999999e-21)
(prepdf/flamelet-scale-ode-atol? #f boolean #f #f)
(prepdf/flamelet-chemkin-rates? #f boolean #f #f)
(prepdf/flamelet-generate? #f boolean #f #f)
(prepdf/flamelet-import-file-type 0 integer #f 0)
(prepdf/flamelet-bool-params (#t #t) boolean-list #f (#t #t))
(prepdf/flamelet-real-params (0.01 5 1 2 1e-05 1e-15 1e-05 1000) real-list #f (0.01 5 1 2 1e-05 1e-15 1e-05 1000))
(prepdf/flamelet-int-params (10 32) integer-list #f (10 32))
(prepdf/expert-real-params (1 0.667 0.25 0.99) real-list #f (1 0.667 0.25 0.99))
(prepdf/equil-real-params (0.1 0.1 50000000 1000 50000000 1000 298) real-list #f (0.1 0.1 50000000 1000 50000000 1000 298))
(prepdf/flags (#t #f #f #f) boolean-list #f (#t #f #f #f))
(prepdf/bc ((300 300 300) (#t) ((o2 0 0.233 0) (n2 0 0.767 0))) () #f ((300 300 300) (#t) ((o2 0 0.233 0) (n2 0 0.767 0))))
(prepdf/equil-exclude-species ("c<s>" "no" "no2" "n2o" "h2o<l>" "n" "nh" "nh2" "nh3" "nnh" "hcn" "hno" "cn" "h2cn" "hcnn" "hcno" "hocn" "hnco") string-list #f ("c<s>" "no" "no2" "n2o" "h2o<l>" "n" "nh" "nh2" "nh3" "nnh" "hcn" "hno" "cn" "h2cn" "hcnn" "hcno" "hocn" "hnco"))
(prepdf/equil-include-species () string-list #f ())
(prepdf/bc-species ("ch4" "h2" "jet-a<g>" "n2" "o2") string-list #f ("ch4" "h2" "jet-a<g>" "n2" "o2"))
(pdf/lam-prop-table? #t boolean #f #t)
(pdf/fla-sl-nspe 1 integer #f 1)
(pdf/fla-sl-nf 1 integer #f 1)
(pdf/fla-sl-nh 1 integer #f 1)
(pdf/fla-sl-available? #f boolean #f #f)
(pdf/strained-fla-nh 1 integer #f 1)
(pdf/strained-fla-nx 250 integer #f 250)
(pdf/strained-fla-nf 32 integer #f 32)
(pdf/strained-fla? #f boolean #f #f)
(pdf/activate-ft-simplec? #f boolean #f #f)
(pdf/nfgm-tab-storage-method 0 integer #f 0)
(pdf/hybrid-sbes-comb? #t boolean #f #t)
(pdf/n-table-scalars 0 integer #f 0)
(pdf/tabulate-unburnt-props? #t boolean #f #t)
(pdf/unburnt-cp-ad? #f boolean #f #f)
(pdf/fgm-pdf-verbosity 0 integer #f 0)
(pdf/dynamic-table-method 0 integer #f 0)
(pdf/dynamic-table-option 0 integer #f 0)
(pdf/dynamic-table-nodes? #f boolean #f #f)
(pdf/unity-le-use-k? #t boolean #f #t)
(pdf/h-prof-linear? #f boolean #f #f)
(pdf/pollut-compress? #t boolean #f #t)
(pdf/elem-fsto-option 1 integer #f 1)
(pdf/fsto 0.06 real #f 0.06)
(pdf/fsto-method 1 integer #f 1)
(pdf/neutral-species ("n2") string-list #f ("n2"))
(pdf/burnt-products ("co2" "h2o") string-list #f ("co2" "h2o"))
(pdf/interp-tolerance 1e-10 real #f 1e-10)
(pdf/interp-species () string-list #f ())
(pdf/interp-method 2 integer #f 2)
(pdf/bounded-interp #f boolean #f #f)
(pdf/dynamic-fvar? #t boolean #f #t)
(pdf/solve-variance-method 0 integer #f 0)
(pdf/solve-les-variance-eqn? #f boolean #f #f)
(pdf/warnings/collective-print? #t boolean #f #t)
(pdf/warnings #t boolean #f #t)
(pdf/flamexpert #f boolean #f #f)
(pdf/fvarlim 0.001 real #f 0.001)
(pdf/flampar 1 real #f 1)
(pdf/flammult 3 real #f 3)
(pdf/flamtype 0 integer #f 0)
(pdf/les-flamtype 0 integer #f 0)
(pdf/sct 0.85 real #f 0.85)
(pdf/real-gas? #f boolean #f #f)
(pdf/compressible? #f boolean #f #f)
(pdf/function-type 1 integer #f 1)
(pdf/n-iter-flam 5 integer #f 5)
(pdf/n-iter 10 integer #f 10)
(pdf/hybrid-vars-cached? #t boolean #f #t)
(flamelet/import-chem-r16? #t boolean #f #t)
(flamelet/filename "" string #f "")
(pdf/filename "" string #f "")
(pdf/solve? #t boolean #f #t)
(cdvar 2 real #f 2)
(cgvar 2.86 real #f 2.86)
(pdf/import-transport? #f boolean #f #f)
(species/kinetics/spe-ck-eq? #f boolean #f #f)
(species/kinetics/use-ck-eq? #f boolean #f #f)
(flamelet-pdf/use-ceq? #f boolean #f #f)
(pdf/ceq-include-thermo-spe () string-list #f ())
(pdf/element-method 2 integer #f 2)
(pdf/mixture-elements ("c" "h" "o" "n" "ar" "s") string-list #f ("c" "h" "o" "n" "ar" "s"))
(pdf/replace-cpropep? #t boolean #f #t)
(pdf/ceq-max-iter 500 integer #f 500)
(pdf/ceq-verbosity 0 integer #f 0)
(pdf/ceq-res-tol 1e-09 real #f 1e-09)
(pdf/ceq-t-tol 1e-06 real #f 1e-06)
(pdf/equil-solver/ceq-explim 100 real #f 100)
(pdf/equil-solver/ceq? #t boolean #f #t)
(coal-3/wet-combustion? #t boolean #f #t)
(coal-3/particle-name "coal-particle-3" string #f "coal-particle-3")
(coal-3/so2? #f boolean #f #f)
(coal-3/1step? #t boolean #f #t)
(coal-3/consts (30 24000000 1 2441670 32789000 -393532400 -241837900 -296861200 0.7 1 998.2 1400) real-list #f (30 24000000 1 2441670 32789000 -393532400 -241837900 -296861200 0.7 1 998.2 1400))
(coal-3/ult-analysis (0.85 0.1 0.04 0.01 0 0 0) real-list #f (0.85 0.1 0.04 0.01 0 0 0))
(coal-3/prox-analysis (0.5 0.3 0.1 0.1 0) real-list #f (0.5 0.3 0.1 0.1 0))
(coal-2/wet-combustion? #t boolean #f #t)
(coal-2/particle-name "coal-particle-2" string #f "coal-particle-2")
(coal-2/so2? #f boolean #f #f)
(coal-2/1step? #t boolean #f #t)
(coal-2/consts (30 24000000 1 2441670 32789000 -393532400 -241837900 -296861200 0.7 1 998.2 1400) real-list #f (30 24000000 1 2441670 32789000 -393532400 -241837900 -296861200 0.7 1 998.2 1400))
(coal-2/ult-analysis (0.85 0.1 0.04 0.01 0 0 0) real-list #f (0.85 0.1 0.04 0.01 0 0 0))
(coal-2/prox-analysis (0.5 0.3 0.1 0.1 0) real-list #f (0.5 0.3 0.1 0.1 0))
(coal/nstreams 1 integer #f 1)
(coal/wet-combustion? #t boolean #f #t)
(coal/species-transport? #t boolean #f #t)
(coal/particle-name "coal-particle" string #f "coal-particle")
(coal/so2? #f boolean #f #f)
(coal/1step? #t boolean #f #t)
(coal/consts (30 24000000 1 2441670 32789000 -393532400 -241837900 -296861200 0.7 1 998.2 1400) real-list #f (30 24000000 1 2441670 32789000 -393532400 -241837900 -296861200 0.7 1 998.2 1400))
(coal/ult-analysis (0.85 0.1 0.04 0.01 0 0 0) real-list #f (0.85 0.1 0.04 0.01 0 0 0))
(coal/prox-analysis (0.5 0.3 0.1 0.1 0) real-list #f (0.5 0.3 0.1 0.1 0))
(ama/ignore-species? #t boolean #f #t)
(ama/resonance-frequencies () real-list #f ())
(ama/residual-tolerance 0.001 real #f 0.001)
(ama/maxitr-arpack 500 integer #f 500)
(ama/freq-shift 200 integer #f 200)
(ama/nr-ritz-values 10 integer #f 10)
(rfg/limit-length-scale #f boolean #f #f)
(rfg/limit-wave-number #t boolean #f #t)
(rfg/number-of-fourier-modes 100 integer #f 100)
(sngr/number-of-realizations 200 integer #f 200)
(sngr/number-of-fourier-modes 50 integer #f 50)
(sound-var/patch 0 real #f 0)
(sound-var/max-iter 10 integer #f 10)
(acoustics-waveeq/emission-time-ini -1 real #f -1)
(acoustics-waveeq/receivers () list #f ())
(acoustics-waveeq/integral-surf-id (1000000) integer-list #f (1000000))
(acoustics-waveeq/remote-receivers? #f boolean #f #f)
(acoustics-waveeq/sponge-type 0 integer #f 0)
(acoustics-waveeq/sponge-layer-shapes () list #f ())
(acoustics-waveeq/source-mask-shapes () list #f ())
(acoustics-waveeq/sponge-layer-udf "none" string #f "none")
(acoustics-waveeq/source-mask-udf "none" string #f "none")
(acoustics-waveeq/residuals-timesteps-to-plot 100 integer #f 100)
(acoustics-waveeq/iter-tolerance 1e-06 real #f 1e-06)
(acoustics-waveeq/max-iter 10 integer #f 10)
(acoustics-waveeq/amg-stabilization 0 integer #f 0)
(acoustics-waveeq/amg-method 0 integer #f 0)
(acoustics-waveeq/cycle-type 0 integer #f 0)
(acoustics-waveeq/amg-beta 0.7 real #f 0.7)
(acoustics-waveeq/amg-alpha 0.1 real #f 0.1)
(acoustics-waveeq/explicit-relax 1 real #f 1)
(acoustics-waveeq/relax 1 real #f 1)
(acoustics-waveeq/default 0 real #f 0)
(acoustics-waveeq/time-filter-source? #t boolean #f #t)
(acoustics-waveeq/space-filter-source? #t boolean #f #t)
(acoustics-waveeq/ramping-steps 0 integer #f 0)
(acoustics-waveeq/ramping-start 0 integer #f 0)
(acoustics-waveeq/newmark-alpha 0.05 real #f 0.05)
(acoustics-waveeq/laplacian-long? #f boolean #f #f)
(acoustics-waveeq/ref-point (0 0 0) real-list #f (0 0 0))
(acoustics-waveeq/fix-ref-point-value? #f boolean #f #f)
(acoustics-waveeq/subtract-mean-source? #f boolean #f #f)
(acoustics-waveeq/visc-base-level 0.1 real #f 0.1)
(acoustics-waveeq/visc-factor 1 real #f 1)
(acoustics-waveeq/ntime-period 1 integer #f 1)
(acoustics-waveeq/space-scheme 0 integer #f 0)
(acoustics-waveeq/model-eq 4 integer #f 4)
(acoustics-waveeq/solve? #t boolean #f #t)
(acoustics/convection-z-cosine 0 real #f 0)
(acoustics/convection-y-cosine 0 real #f 0)
(acoustics/convection-x-cosine 1 real #f 1)
(acoustics/convective-speed 0 real velocity 0)
(acoustics/convective-effects? #t boolean #f #t)
(acoustics/moving-rec-z-cosine 0 real #f 0)
(acoustics/moving-rec-y-cosine 0 real #f 0)
(acoustics/moving-rec-x-cosine 1 real #f 1)
(acoustics/moving-receiver-speed 0 real velocity 0)
(acoustics/moving-receiver? #f boolean #f #f)
(acoustics/sliding-mesh-time-ref -1 real length -1)
(acoustics/number-of-revolutions 2 integer #f 2)
(acoustics/time-steps-per-revolution 360 integer #f 360)
(acoustics-sample-duration 0 real time 0)
(acoustics-no-of-samples 0 integer #f 0)
(far-field-sound-speed 340 real velocity 340)
(far-field-pressure 0 real pressure 0)
(far-field-density 1.225 real density 1.225)
(reference-acoustic-intensity 1e-12 real heat-flux 1e-12)
(reference-acoustic-power 1e-12 real power 1e-12)
(reference-acoustic-pressure 2e-05 real pressure 2e-05)
(acoustics/2d-nfaces 40 integer #f 40)
(acoustics/2d-correl-length 1 real length 1)
(source-location/z 0 real length 0)
(source-location/y 0 real length 0)
(source-location/x 0 real length 0)
(receiver-location/z 0 real length 0)
(receiver-location/y 1 real length 1)
(receiver-location/x 1 real length 1)
(acoustics/compute-sound? #t boolean #f #t)
(acoustics/export-fluid-zones 0 integer #f 0)
(acoustics/write-source? #f boolean #f #f)
(acoustics/on? #f boolean #f #f)
(wf/zero-wfhtc-on-adiabatic-walls? #f boolean #f #f)
(wf/vwplus-max 0.6 real #f 0.6)
(wf/vwplus-min -0.04 real #f -0.04)
(wf/gamma-max 1 real #f 1)
(wf/gamma-min 0.005 real #f 0.005)
(wf/beta-max 0.01 real #f 0.01)
(wf/beta-min -0.02 real #f -0.02)
(wf/yp-prg 60 real #f 60)
(wf/cmp-effects-excluded? #f boolean #f #f)
(wf/ht-effects-excluded? #f boolean #f #f)
(wf/heat-transfer-effects? #f boolean #f #f)
(wf/pressure-gradient-effects? #f boolean #f #f)
(uw-stress/patch 0 real turbulent-kinetic-energy 0)
(vw-stress/patch 0 real turbulent-kinetic-energy 0)
(uv-stress/patch 0 real turbulent-kinetic-energy 0)
(ww-stress/patch 1 real turbulent-kinetic-energy 1)
(vv-stress/patch 1 real turbulent-kinetic-energy 1)
(uu-stress/patch 1 real turbulent-kinetic-energy 1)
(drsm/coupling-alt-average? #f boolean #f #f)
(drsm/amg-continue-positive? #t boolean #f #t)
(drsm/amg-stabilization 0 integer #f 0)
(drsm/amg-method 0 integer #f 0)
(drsm/cycle-type 0 integer #f 0)
(drsm/amg-beta 0.7 real #f 0.7)
(drsm/amg-alpha 0.1 real #f 0.1)
(drsm/max-iter 5 integer #f 5)
(drsm/residual-scaling-option 1 integer #f 1)
(drsm/residual-tolerance 0.0001 real #f 0.0001)
(drsm/iter-tolerance 0.05 real #f 0.05)
(drsm/explicit-relax 1 real #f 1)
(drsm/scheme 0 integer #f 0)
(drsm/relax 0.5 real #f 0.5)
(drsm/solve? #t boolean #f #t)
(drsm/second-order/secondary-gradient? #t boolean #f #t)
(drsm/secondary-gradient? #f boolean #f #f)
(retheta/default 1 real #f 1)
(retheta/patch 1 real #f 1)
(retheta/amg-stabilization 0 integer #f 0)
(retheta/amg-method 0 integer #f 0)
(retheta/cycle-type 0 integer #f 0)
(retheta/amg-beta 0.7 real #f 0.7)
(retheta/amg-alpha 0.1 real #f 0.1)
(retheta/max-iter 5 integer #f 5)
(retheta/residual-tolerance 0.0001 real #f 0.0001)
(retheta/iter-tolerance 0.05 real #f 0.05)
(retheta/explicit-relax 1 real #f 1)
(retheta/scheme 1 integer #f 1)
(retheta/relax 0.8 real #f 0.8)
(intermit/default 1 real #f 1)
(intermit/patch 1 real #f 1)
(intermit/amg-stabilization 0 integer #f 0)
(intermit/amg-method 0 integer #f 0)
(intermit/cycle-type 0 integer #f 0)
(intermit/amg-beta 0.7 real #f 0.7)
(intermit/amg-alpha 0.1 real #f 0.1)
(intermit/max-iter 5 integer #f 5)
(intermit/residual-tolerance 0.0001 real #f 0.0001)
(intermit/iter-tolerance 0.05 real #f 0.05)
(intermit/explicit-relax 1 real #f 1)
(intermit/scheme 1 integer #f 1)
(intermit/relax 0.8 real #f 0.8)
(trans-intermit/max-limit 1 real #f 1)
(trans-retheta/min-limit 1e-07 real #f 1e-07)
(trans-intermit/min-limit 1e-07 real #f 1e-07)
(epsilon/damping-formulation 0 integer #f 0)
(omega/damping-formulation 0 integer #f 0)
(turb-damp/smooth-grad? #f boolean #f #f)
(turb-damp/vofg-cutoff 1e-10 real #f 1e-10)
(turb-damp/lscale-method 0 integer #f 0)
(turb-damp/factor 10 real #f 10)
(turb-damp/deltan 0.001 real #f 0.001)
(turb-damp/activate? #f boolean #f #f)
(omega/default 1 real time-inverse 1)
(omega/patch 1 real time-inverse 1)
(omega/amg-continue-positive? #t boolean #f #t)
(omega/amg-stabilization 0 integer #f 0)
(omega/amg-method 0 integer #f 0)
(omega/cycle-type 0 integer #f 0)
(omega/amg-beta 0.7 real #f 0.7)
(omega/amg-alpha 0.1 real #f 0.1)
(omega/scheme 1 integer #f 1)
(omega/max-iter 5 integer #f 5)
(omega/residual-tolerance 0.0001 real #f 0.0001)
(omega/iter-tolerance 0.05 real #f 0.05)
(omega/explicit-relax 1 real #f 1)
(omega/relax 0.8 real #f 0.8)
(omega/min-limit 9.999999999999999e-21 real time-inverse 9.999999999999999e-21)
(kw/solve? #t boolean #f #t)
(lowre-ke-index 0 integer #f 0)
(ke-low-re? #f boolean #f #f)
(kl/default 1e-06 real turbulent-kinetic-energy 1e-06)
(kl/patch 1e-06 real turbulent-kinetic-energy 1e-06)
(kl/amg-stabilization 0 integer #f 0)
(kl/amg-method 0 integer #f 0)
(kl/cycle-type 0 integer #f 0)
(kl/amg-beta 0.7 real #f 0.7)
(kl/amg-alpha 0.1 real #f 0.1)
(kl/scheme 1 integer #f 1)
(kl/max-iter 5 integer #f 5)
(kl/residual-tolerance 0.0001 real #f 0.0001)
(kl/iter-tolerance 0.05 real #f 0.05)
(kl/explicit-relax 1 real #f 1)
(kl/relax 0.8 real #f 0.8)
(kl/min-limit 1e-14 real turbulent-kinetic-energy 1e-14)
(f/default 1 real time-inverse 1)
(f/patch 1 real time-inverse 1)
(f/amg-stabilization 0 integer #f 0)
(f/amg-method 0 integer #f 0)
(f/cycle-type 0 integer #f 0)
(f/amg-beta 0.7 real #f 0.7)
(f/amg-alpha 0.1 real #f 0.1)
(f/scheme 0 integer #f 0)
(f/max-iter 5 integer #f 5)
(f/residual-tolerance 0.0001 real #f 0.0001)
(f/iter-tolerance 0.05 real #f 0.05)
(f/explicit-relax 1 real #f 1)
(f/relax 0.8 real #f 0.8)
(v2/default 0.666667 real turbulent-kinetic-energy 0.666667)
(v2/patch 1 real turbulent-kinetic-energy 1)
(v2/amg-stabilization 0 integer #f 0)
(v2/amg-method 0 integer #f 0)
(v2/cycle-type 0 integer #f 0)
(v2/amg-beta 0.7 real #f 0.7)
(v2/amg-alpha 0.1 real #f 0.1)
(v2/max-iter 5 integer #f 5)
(v2/residual-tolerance 0.0001 real #f 0.0001)
(v2/iter-tolerance 0.05 real #f 0.05)
(v2/explicit-relax 1 real #f 1)
(v2/scheme 0 integer #f 0)
(v2/relax 0.8 real #f 0.8)
(v2f-f/min-limit 1e-07 real time-inverse 1e-07)
(v2f-v2/min-limit 1e-07 real turbulent-kinetic-energy 1e-07)
(v2f-epsilon/min-limit 1e-07 real turbulent-energy-diss-rate 1e-07)
(v2f-k/min-limit 1e-07 real turbulent-kinetic-energy 1e-07)
(epsilon/default 1 real turbulent-energy-diss-rate 1)
(epsilon/patch 1 real turbulent-energy-diss-rate 1)
(epsilon/amg-continue-positive? #t boolean #f #t)
(epsilon/amg-stabilization 0 integer #f 0)
(epsilon/amg-method 0 integer #f 0)
(epsilon/cycle-type 0 integer #f 0)
(epsilon/amg-beta 0.7 real #f 0.7)
(epsilon/amg-alpha 0.1 real #f 0.1)
(epsilon/scheme 0 integer #f 0)
(epsilon/max-iter 5 integer #f 5)
(epsilon/residual-tolerance 0.0001 real #f 0.0001)
(epsilon/iter-tolerance 0.05 real #f 0.05)
(epsilon/explicit-relax 1 real #f 1)
(epsilon/relax 0.8 real #f 0.8)
(epsilon/min-limit 9.999999999999999e-21 real turbulent-energy-diss-rate 9.999999999999999e-21)
(k/default 1 real turbulent-kinetic-energy 1)
(k/patch 1 real turbulent-kinetic-energy 1)
(k/amg-continue-positive? #t boolean #f #t)
(k/amg-stabilization 0 integer #f 0)
(k/amg-method 0 integer #f 0)
(k/cycle-type 0 integer #f 0)
(k/amg-beta 0.7 real #f 0.7)
(k/amg-alpha 0.1 real #f 0.1)
(k/scheme 1 integer #f 1)
(k/max-iter 5 integer #f 5)
(k/residual-tolerance 0.0001 real #f 0.0001)
(k/iter-tolerance 0.05 real #f 0.05)
(k/explicit-relax 1 real #f 1)
(k/relax 0.8 real #f 0.8)
(k/min-limit 1e-14 real turbulent-kinetic-energy 1e-14)
(ke/compr-effects-for-vof? #f boolean #f #f)
(ke/solve? #t boolean #f #t)
(ke/second-order/secondary-gradient? #t boolean #f #t)
(ke/secondary-gradient? #f boolean #f #f)
(nut/linearize-negative-sources? #t boolean #f #t)
(nut/default 0.1 real mass-diffusivity 0.1)
(nut/patch 0.1 real mass-diffusivity 0.1)
(nut/amg-continue-positive? #t boolean #f #t)
(nut/amg-stabilization 0 integer #f 0)
(nut/amg-method 0 integer #f 0)
(nut/cycle-type 0 integer #f 0)
(nut/amg-beta 0.7 real #f 0.7)
(nut/amg-alpha 0.1 real #f 0.1)
(nut/scheme 0 integer #f 0)
(nut/max-iter 5 integer #f 5)
(nut/residual-tolerance 0.0001 real #f 0.0001)
(nut/iter-tolerance 0.05 real #f 0.05)
(nut/explicit-relax 1 real #f 1)
(nut/relax 0.8 real #f 0.8)
(nut/wall-value? #t boolean #f #t)
(nut/damping? #t boolean #f #t)
(nut/enh-wall-treatment? #t boolean #f #t)
(nut/solve? #t boolean #f #t)
(nut/second-order/secondary-gradient? #t boolean #f #t)
(nut/secondary-gradient? #f boolean #f #f)
(turb-compress-mod? #f boolean #f #f)
(corner-flow-correction-ccorner-expr "" string #f "")
(corner-flow-correction-ccorner 1 real #f 1)
(corner-flow-correction? #f boolean #f #f)
(curvature-correction-ccurv-expr "" string #f "")
(curvature-correction-ccurv 1 real #f 1)
(curvature-correction? #f boolean #f #f)
(turb-viscosity/max-limit 100000 real #f 100000)
(turb-viscosity/relax 1 real #f 1)
(turb/sbes-rans-flow-time-m1 0 real time 0)
(turb/sbes-rans-flow-time 0 real time 0)
(turb/sbes-rans-time-step 0 integer #f 0)
(turb/sbes-rans-last-solve-step 0 integer #f 0)
(turb/sbes-rans-update-interval 1 integer #f 1)
(turb/update-derivatives-after-turb-solve? #f boolean #f #f)
(turb/update-derivatives-before-turb-solve? #f boolean #f #f)
(turb/report-negative-values? #t boolean #f #t)
(turb/hyd-dia-factor 0.07000000000000001 real #f 0.07000000000000001)
(w-swirl/amg-stabilization 0 integer #f 0)
(w-swirl/amg-method 0 integer #f 0)
(w-swirl/cycle-type 0 integer #f 0)
(w-swirl/amg-beta 0.7 real #f 0.7)
(w-swirl/amg-alpha 0.1 real #f 0.1)
(w-swirl/scheme 1 integer #f 1)
(w-swirl/max-iter 5 integer #f 5)
(w-swirl/residual-tolerance 0.0001 real #f 0.0001)
(w-swirl/iter-tolerance 0.05 real #f 0.05)
(w-swirl/explicit-relax 1 real #f 1)
(w-swirl/relax 0.9 real #f 0.9)
(w-swirl/solve? #t boolean #f #t)
(nist-table/create-bi-sat-tab-only? #f boolean #f #f)
(nist-table/create-full-lookup-tab? #f boolean #f #f)
(nist-table/sat-userdir "" string #f "")
(nist-table/dew-fullpathandname "Dew_PT.xy" string #f "Dew_PT.xy")
(nist-table/dew-point-filename "Dew_PT.xy" string #f "Dew_PT.xy")
(nist-table/bubble-fullpathandname "Bubble_PT.xy" string #f "Bubble_PT.xy")
(nist-table/bubble-point-filename "Bubble_PT.xy" string #f "Bubble_PT.xy")
(nist-table/create-sat-curves? #f boolean #f #f)
(nist-table/mole-fractions? #f boolean #f #f)
(nist-table/multi-species? #f boolean #f #f)
(nist-table/num-saturation 12 integer #f 12)
(nist-table/num-bi-mf-pts 12 integer #f 12)
(nist-table/num-temperature-points 101 integer #f 101)
(nist-table/num-pressure-points 101 integer #f 101)
(nist-table/sp-xi-list (0 0 0 0 0 0 0 0 0 0) real-list #f (0 0 0 0 0 0 0 0 0 0))
(nist-table/num-species 2 integer #f 2)
(nist-table/sat-rhomax 25 real #f 25)
(nist-table/sat-rhomin 0.1 real #f 0.1)
(nist-table/use-table-p? #f boolean #f #f)
(nist-table/tmax 1600 real #f 1600)
(nist-table/tmin 237.3 real #f 237.3)
(nist-table/pmax 20000 real #f 20000)
(nist-table/pmin 13200 real #f 13200)
(d1/syamlal-drag 2.65 real #f 2.65)
(c1/syamlal-drag 0.8 real #f 0.8)
(exp-velocity/min-fluidization 0.26 real #f 0.26)
(void-fraction/min-fluidization 0.44 real #f 0.44)
(lsfun/surf-tens/mesh-factor 1.5 real #f 1.5)
(lsfun/heaviside-correction? #f boolean #f #f)
(lsfun/density-correction? #f boolean #f #f)
(sg-lsf-init? #f boolean #f #f)
(lsfun/default 0 real #f 0)
(lsfun/patch 0 real #f 0)
(lsfun/amg-stabilization 0 integer #f 0)
(lsfun/cycle-type 0 integer #f 0)
(lsfun/amg-method 0 integer #f 0)
(lsfun/amg-beta 0.7 real #f 0.7)
(lsfun/amg-alpha 0.1 real #f 0.1)
(lsfun/scheme 0 integer #f 0)
(lsfun/relax 0.3 real #f 0.3)
(lsfun/solve? #t boolean #f #t)
(sg-lsfun? #f boolean #f #f)
(iac/ym-kb1 1.6 real #f 1.6)
(iac/ym-kc3 1.017 real #f 1.017)
(iac/ym-kc1 2.86 real #f 2.86)
(iac/ftime-dt 0.001 real #f 0.001)
(iac/ftime-marching? #f boolean #f #f)
(iac/hi-alpha-max 0.52 real #f 0.52)
(iac/hi-kb1 1.37 real #f 1.37)
(iac/hi-kb0 0.264 real #f 0.264)
(iac/hi-kc1 0.129 real #f 0.129)
(iac/hi-kc0 0.188 real #f 0.188)
(iac/ik-alpha-max 0.75 real #f 0.75)
(iac/ik-cti 0.08500000000000001 real #f 0.08500000000000001)
(iac/ik-c 3 real #f 3)
(iac/ik-cwe 0.002 real #f 0.002)
(iac/ik-crc 0.004 real #f 0.004)
(iac/default 0 real #f 0)
(iac/patch 0 real #f 0)
(iac/amg-stabilization 0 integer #f 0)
(iac/cycle-type 0 integer #f 0)
(iac/amg-method 0 integer #f 0)
(iac/amg-beta 0.7 real #f 0.7)
(iac/amg-alpha 0.1 real #f 0.1)
(iac/scheme 0 integer #f 0)
(iac/relax 0.3 real #f 0.3)
(iac/solve? #t boolean #f #t)
(iac/domain-id 3 integer #f 3)
(pb-dqmom/init-cdf #f boolean #f #f)
(pb-dqmom/init-pdf #f boolean #f #f)
(pb-dqmom/init-overallmoments #f boolean #f #f)
(pb-dqmom/init-filename "" string #f "")
(pb-dqmom/zero-moms? #f boolean #f #f)
(pb-dqmom/kv 0.523598776 real #f 0.523598776)
(pb-dqmom/ka 3.14159265 real #f 3.14159265)
(pb-dqmom/default (0) real-list #f (0))
(pb-dqmom/patch (0) real-list #f (0))
(pb-dqmom/amg-stabilization (0) integer-list #f (0))
(pb-dqmom/cycle-type (0) integer-list #f (0))
(pb-dqmom/amg-method (0) integer-list #f (0))
(pb-dqmom/amg-beta (0.7) real-list #f (0.7))
(pb-dqmom/amg-alpha (0.1) real-list #f (0.1))
(pb-dqmom/scheme (0) integer-list #f (0))
(pb-dqmom/explicit-relax (1) real-list #f (1))
(pb-dqmom/relax (0.5) real-list #f (0.5))
(pb-dqmom/solve? (#t) boolean-list #f (#t))
(pb-smm/kv 0.523598776 real #f 0.523598776)
(pb-smm/default (0) real-list #f (0))
(pb-smm/patch (0) real-list #f (0))
(pb-smm/amg-stabilization (0) integer-list #f (0))
(pb-smm/cycle-type (0) integer-list #f (0))
(pb-smm/amg-method (0) integer-list #f (0))
(pb-smm/max-iter (5) integer-list #f (5))
(pb-smm/residual-tolerance (0.0001) real-list #f (0.0001))
(pb-smm/iter-tolerance (0.05) real-list #f (0.05))
(pb-smm/amg-beta (0.7) real-list #f (0.7))
(pb-smm/amg-alpha (0.1) real-list #f (0.1))
(pb-smm/scheme (0) integer-list #f (0))
(pb-smm/explicit-relax (1) real-list #f (1))
(pb-smm/relax (1) real-list #f (1))
(pb-smm/solve? (#t) boolean-list #f (#t))
(pb-smm/n-pb-smm 2 integer #f 2)
(pb-qmom/zero-moms? #f boolean #f #f)
(pb-qmom/kv 0.523598776 real #f 0.523598776)
(pb-qmom/ka 3.14159265 real #f 3.14159265)
(pb-qmom/real-mom-zeta-scheme? #f boolean #f #f)
(pb-qmom/zeta-min 0 real #f 0)
(pb-qmom/weights-abscissas-algorithm 0 integer #f 0)
(pb-qmom/moment-realizable-printout? #f boolean #f #f)
(pb-qmom/moment-realizable? #f boolean #f #f)
(pb-qmom/default (0) real-list #f (0))
(pb-qmom/patch (0) real-list #f (0))
(pb-qmom/amg-stabilization (0) integer-list #f (0))
(pb-qmom/cycle-type (0) integer-list #f (0))
(pb-qmom/amg-method (0) integer-list #f (0))
(pb-qmom/max-iter (5) integer-list #f (5))
(pb-qmom/residual-tolerance (0.0001) real-list #f (0.0001))
(pb-qmom/iter-tolerance (0.05) real-list #f (0.05))
(pb-qmom/amg-beta (0.7) real-list #f (0.7))
(pb-qmom/amg-alpha (0.1) real-list #f (0.1))
(pb-qmom/scheme (0) integer-list #f (0))
(pb-qmom/explicit-relax (1) real-list #f (1))
(pb-qmom/relax (1) real-list #f (1))
(pb-qmom/solve? (#t) boolean-list #f (#t))
(pb-qmom/n-pb-qmom 6 integer #f 6)
(pb-disc-inhomo/co-inhomo-luo #t boolean #f #t)
(pb-disc-inhomo/bu-inhomo-luo #t boolean #f #t)
(pb-disc/kv 0.523598776 real #f 0.523598776)
(pb-disc/ka 3.14159265 real #f 3.14159265)
(pb-disc/bin-size-inp-type 0 integer #f 0)
(pb-disc/bin-sizes (0.01 0.01259921) real-list #f (0.01 0.01259921))
(pb-disc/default (0) real-list #f (0))
(pb-disc/patch (0) real-list #f (0))
(pb-disc/amg-stabilization (0) integer-list #f (0))
(pb-disc/cycle-type (0) integer-list #f (0))
(pb-disc/max-iter (5) integer-list #f (5))
(pb-disc/residual-tolerance (0.0001) real-list #f (0.0001))
(pb-disc/iter-tolerance (0.05) real-list #f (0.05))
(pb-disc/amg-method (0) integer-list #f (0))
(pb-disc/amg-beta (0.7) real-list #f (0.7))
(pb-disc/amg-alpha (0.1) real-list #f (0.1))
(pb-disc/scheme (0) integer-list #f (0))
(pb-disc/explicit-relax (1) real-list #f (1))
(pb-disc/relax (1) real-list #f (1))
(pb-disc/solve? (#t) boolean-list #f (#t))
(pb-disc/n-pb-disc 2 integer #f 2)
(pb-disc/boiling/include-inhomo-rpi-boiling-sources? #f boolean #f #f)
(pb-disc/boiling/scale-inhomo-boiling-sources? #f boolean #f #f)
(pb-disc/boiling/force-pb-source-mass-transfer? #f boolean #f #f)
(pb-disc/boiling/use-direct-cfx-sources? #t boolean #f #t)
(pb/bu-coal-vof-cutoff 0.8 real #f 0.8)
(pb-model/equation-order 1 integer #f 1)
(pb/size-calculator-panel-created #f boolean #f #f)
(pb/max-stable-droplet-taylor 0 real #f 0)
(pb/max-stable-droplet-we 0 real #f 0)
(pb/eo-10-limit 0 real #f 0)
(pb/max-stable-bubb-capillary 0 real #f 0)
(pb/cap-length 0 real #f 0)
(pb/mid-size-bub-tomiyama 0 real #f 0)
(pb/min-size-exp 0 real #f 0)
(pb/size-calculator-mu-primary-value 0.0008899 real #f 0.0008899)
(pb/size-calculator-velocity-secondary-value 1 real #f 1)
(pb/size-calculator-velocity-primary-value 2 real #f 2)
(pb/size-calculator-density-secondary-value 1.185 real #f 1.185)
(pb/size-calculator-density-primary-value 997 real #f 997)
(pb/size-calculator-sigma-value 0.07199999999999999 real #f 0.07199999999999999)
(pb/size-calculator-gravity 9.81 real #f 9.81)
(pb/compute-sources-at-top-of-time-step? #t boolean #f #t)
(pb/sg-pb-dqmom? #f boolean #f #f)
(pb/sg-pb-smm? #f boolean #f #f)
(pb/sg-pb-qmom? #f boolean #f #f)
(pb/sg-pb-disc? #f boolean #f #f)
(pb/bu-pdf-check? #f boolean #f #f)
(pb/breakage-rate-factor 1 real #f 1)
(pb/aggregation-rate-factor 1 real #f 1)
(pb/breakage-freq-rate 0 real #f 0)
(pb/coalescence-rate 0 real #f 0)
(pb/growth-rate 0 real #f 0)
(pb/nucleation-rate 0 real #f 0)
(pb/phenomenon (#f #f #f #f #f) boolean-list #f (#f #f #f #f #f))
(pb/domain-ids (3) integer-list #f (3))
(mp/population-b? #f boolean #f #f)
(mp/compress-alt-bc-maxwell? #f boolean #f #f)
(mp/compress-alt-bc? #f boolean #f #f)
(mp/lane-correction-iz #f boolean #f #f)
(mp/modify-drag? #f boolean #f #f)
(density/user-specified-min-limit 1e-09 real #f 1e-09)
(density/user-specified-min-limit? #f boolean #f #f)
(density/explicit-relax 1 real #f 1)
(density/min-limit 1e-06 real #f 1e-06)
(density/scheme 1 integer #f 1)
(density/relax 1 real #f 1)
(mp/multi-domain? #t boolean #f #t)
(granular-pressure/face-vof-min-limit 0.001 real #f 0.001)
(granular-temperature/secondary-gradient? #f boolean #f #f)
(granular-temperature/syam-algebraic? #t boolean #f #t)
(granular-temperature/explicit-relax 1 real #f 1)
(granular-temperature/max-iter 5 integer #f 5)
(granular-temperature/residual-tolerance 0.0001 real #f 0.0001)
(granular-temperature/iter-tolerance 0.25 real #f 0.25)
(granular-temperature/amg-stabilization 0 integer #f 0)
(granular-temperature/amg-method 0 integer #f 0)
(granular-temperature/cycle-type 0 integer #f 0)
(granular-temperature/amg-beta 0.7 real #f 0.7)
(granular-temperature/amg-alpha 0.1 real #f 0.1)
(granular-temperature/scheme 0 integer #f 0)
(granular-temperature/relax 0.2 real #f 0.2)
(granular-temperature/solve? #t boolean #f #t)
(granular/pde? #f boolean #f #f)
(mp-packed-bed/zero-vel-vof 0 integer #f 0)
(granular-pressure/frictional-pressure-max-limit 100000 real #f 100000)
(granular-pressure/pp? #f boolean #f #f)
(pressure/mp-body-force-dissipation? #f boolean #f #f)
(sg-mp-noniterative-implicit-relaxation? #f boolean #f #f)
(sat-temp/dew-points-filename "Dew_PT.xy" string #f "Dew_PT.xy")
(sat-temp/bubble-points-filename "Bubble_PT.xy" string #f "Bubble_PT.xy")
(mp/nita/update-drag-coeff 0 integer #f 0)
(mp/nita/mom-force-expl? #t boolean #f #t)
(mp/p-face-convection? #f boolean #f #f)
(mp/skew-force-test? #f boolean #f #f)
(mp/sg-mp-fractstep? #f boolean #f #f)
(piso/number-of-correctors 1 integer #f 1)
(piso/neighbor-add-option 0 integer #f 0)
(piso/neighbor-option 0 integer #f 0)
(pressure/recalculate-p-coeff 0 integer #f 0)
(pressure/p-vof-option 0 integer #f 0)
(mp/p-vof-continuity? #t boolean #f #t)
(pressure/mp-p-vof-coupled? #f boolean #f #f)
(mp/vof-piso-corrector? #f boolean #f #f)
(mp/sg-mp-piso? #f boolean #f #f)
(mp/sg-mp-noniterative? #f boolean #f #f)
(mp/face-p-effect? #f boolean #f #f)
(mp/face-pressure-option 0 integer #f 0)
(mp/generic-framework? #f boolean #f #f)
(mp/iad/grad-ratio-limiter 1e-06 real #f 1e-06)
(mp/iad/ia-grad-symmetric? #f boolean #f #f)
(mp/adaptive-second-order #f boolean #f #f)
(mp-les-type 0 integer #f 0)
(mp-rsm-type 0 integer #f 0)
(mp-sig-v 0.75 real #f 0.75)
(mp-kec3 1.3 real #f 1.3)
(mp-ke-type 0 integer #f 0)
(drift/explicit-relax 0.5 real #f 0.5)
(drift/relax 0.1 real #f 0.1)
(drift/solve? #t boolean #f #t)
(mp/mt/boil/advanced? #f boolean #f #f)
(mp/mt/boil/expert? #f boolean #f #f)
(mp/mt/boil/trans-func/coeff 20 real #f 20)
(mp/mt/boil/cevap 1 real #f 1)
(mp/mt/boil/urf-ht 0.8 real #f 0.8)
(mp/mt/sbm/wall-evap/fraction 0.5 real #f 0.5)
(mp/mt/sbm/wall-evap/option 0 integer #f 0)
(mp/mt/sbm/xtt-inv-limit 100 real #f 100)
(mp/mt/sbm/bisect-niter 100 integer #f 100)
(mp/mt/sbm/bisect-tolerance 1e-10 real #f 1e-10)
(mp/mt/sbm/cell-frac/option 0 integer #f 0)
(mp/mt/sbm/tref-ystar/scalable? #f boolean #f #f)
(mp/mt/sbm/tref-ystar/option 1 integer #f 1)
(mp/mt/sbm/vref-ystar/option 1 integer #f 1)
(mp/mt/sbm/qnuc/prop-avg/method 0 integer #f 0)
(mp/mt/sbm/use-global-minmax? #t boolean #f #t)
(mp/mt/sbm/use-ystar? #t boolean #f #t)
(mp/mt/sbm/ht-relax/new? #t boolean #f #t)
(mp/mt/sbm/legacy? #f boolean #f #f)
(mp/mt/sbm/verbosity 0 integer #f 0)
(mp/nlbf/verbosity 0 integer #f 0)
(mp/nlbf/ave-method 1 integer #f 1)
(mp/nlbf/method-0/number-of-line-points 4 integer #f 4)
(mp/nlbf/method-0/total-line-length 0.001 real #f 0.001)
(mp/nlbf/method 0 integer #f 0)
(mp/nlbf/last-case-id 0 integer #f 0)
(mp/nlbf/last-grid-id 0 integer #f 0)
(mp/nlbf/on? #f boolean #f #f)
(mp/face-aux-var-interpolation 3 integer #f 3)
(mp/boiling/thin-film-thickness 0.0001 real #f 0.0001)
(mp/boiling/vapor-low-limit 0.9 real #f 0.9)
(mp/boiling/vapor-up-limit 0.95 real #f 0.95)
(mp/boiling/wall-regime-model 1 integer #f 1)
(mp/boiling/site-density 1 integer #f 1)
(mp/boiling/nuc-exp 1.805 real #f 1.805)
(mp/boiling/nuc-ref 210 real #f 210)
(mp/boiling/bubble-depature-diameter 3 integer #f 3)
(mp/boiling/subcool-ref 45 real #f 45)
(mp/boiling/bdd-ref 0.0005999999999999999 real #f 0.0005999999999999999)
(mp/boiling/bdd-max 0.0014 real #f 0.0014)
(mp/boiling/contact-angle 45 real #f 45)
(mp/boiling/interfacial-area 1 integer #f 1)
(mp/boiling/heat-flux-limit 0.1 real #f 0.1)
(mp/boiling/superheat-limit 1 real #f 1)
(mp/boiling/cd-drift 1 real #f 1)
(mp/boiling/mixture-turbulent-viscosity? #t boolean #f #t)
(mp/boiling/vof-factor? #t boolean #f #t)
(mp/boiling/thin-film? #f boolean #f #f)
(mp/boiling/chf-correction? #t boolean #f #t)
(mp/boiling/bubble-waiting-time 1 real #f 1)
(mp/boiling/temp-far-limit 288.16 real #f 288.16)
(mp/boiling/yplus-far 250 real #f 250)
(mp/boiling/fixed-yplus-standard? #t boolean #f #t)
(mp/boiling/quench-correction-method 0 integer #f 0)
(mp/boiling/quench-correction? #f boolean #f #f)
(mp/boiling/update-partition? #t boolean #f #t)
(mp/boiling/latent-heat 29898000 real #f 29898000)
(mp/boiling/coefficient-2 1 real #f 1)
(mp/boiling/coefficient-1 1 real #f 1)
(mp/boiling/time-scale 0.05 real #f 0.05)
(mp/boiling/vapor-interphase-heat-ransfer? #f boolean #f #f)
(mp/boiling/model-parameters? #t boolean #f #t)
(mp/boiling/liquid-droplet-diameter 1e-05 real #f 1e-05)
(mp/boiling/bubble-diameter-model 1 integer #f 1)
(mp/boiling/droplet-diameter-model 0 integer #f 0)
(mp/boiling/droplet-diameter? #f boolean #f #f)
(mp/boiling/chf-model? #f boolean #f #f)
(mp/boiling/non-equilibrium? #f boolean #f #f)
(mp/boiling/rpi-model? #t boolean #f #t)
(mp/boiling/temperature-limit-method? #t boolean #f #t)
(mp/boiling/new-interphase-transfer? #f boolean #f #f)
(mp/mt/mass-frac-equilibrium-ratio? #f boolean #f #f)
(mp/mt/molar-frac-equilibrium-ratio? #t boolean #f #t)
(mp/mt/molar-con-equilibrium-ratio? #f boolean #f #f)
(mp/mt/equilibrium-ratio-options 0 intger #f 0)
(mp/mt/temperature-dependence 1700 real #f 1700)
(mp/mt/reference-henry-constant 0.0013 real #f 0.0013)
(mp/mt/henry-concentration-coefficient? #f boolean #f #f)
(mp/mt/henry-fraction-coefficient? #t boolean #f #t)
(mp/mt/henry-coefficient-options 0 integer #f 0)
(mp/mt/dispersed-interface-mt-coeff 2 real #f 2)
(mp/mt/continuous-interface-mt-coeff 2 real #f 2)
(mp/mt/mass-fraction-equilibrium-ratio 1 real #f 1)
(mp/mt/molar-fraction-equilibrium-ratio 1 real #f 1)
(mp/mt/molar-concentration-equilibrium-ratio 1 real #f 1)
(mp/mt/molar-concentration-henry-coeff 3540 real #f 3540)
(mp/mt/molar-fraction-henry-coeff 3540 real #f 3540)
(mp/mt/species-mass-transfer-models 0 integer #f 0)
(mp/mt/species-two-resistance-model? #f boolean #f #f)
(mp/mt/species-equilibrium-model? #t boolean #f #t)
(mp/mt/species-linearized? #t boolean #f #t)
(mp/mt/species-linearization-factor 10 real #f 10)
(mp/mt/species-models 0 integer #f 0)
(mp/hydraulic-diameter 0.01 real #f 0.01)
(mp/evap-cond/tpc-before-tui-change-on? #f boolean #f #f)
(mp/evap-cond/old-evap-cond? #f boolean #f #f)
(mp/evap-cond/disp-intf-transfer 1 real #f 1)
(mp/evap-cond/cont-intf-transfer 1 real #f 1)
(mp/evap-cond/condensation-frequency 0.1 real #f 0.1)
(mp/evap-cond/evaporation-frequency 0.1 real #f 0.1)
(mp/evap-cond/thermal-phase-change? #f boolean #f #f)
(mp/evap-cond/mt-lee-model? #t boolean #f #t)
(mp/mt/energy/alt-form? #f boolean #f #f)
(mp/mt/user-defined-mass-source? #f boolean #f #f)
(mp/mt/evap-cond-models 0 integer #f 0)
(mp/mt/area-influence-coeff 4 real #f 4)
(mp/mt/bubble-departure-frequency 100 real #f 100)
(mp/mt/nucleate-site-density 10000000 real #f 10000000)
(mp/mt/bubble-departure-diameter 1e-05 real #f 1e-05)
(mp/mt/saturation-temperature 373.15 real #f 373.15)
(mp/mt/define-saturation-temperature? #f boolean #f #f)
(mp/mt/fixed-to-sat-temp? #f boolean #f #f)
(mp/mt/boiling-models 0 integer #f 0)
(mp/mt/vof-linearization-factor 1 real #f 1)
(mp/mt/new-linearization? #f boolean #f #f)
(mp/boiling/compute-cell-latent-heat? #t boolean #f #t)
(mp/mt/time-scale 0.05 real #f 0.05)
(mp/mass-transfer/relax 1 real #f 1)
(mp/cvt/cfx/f-cond 0.01 real #f 0.01)
(mp/cvt/cfx/f-evap 50 real #f 50)
(mp/cvt/cfx/r-bubbles 1e-06 real #f 1e-06)
(mp/cvt/cfx/vof-nuc 0.0005 real #f 0.0005)
(mp/cvt/v5/n-bubble-density 10000000000000 real #f 10000000000000)
(mp/cvt/n-bubbles 1000000000 real volume-inverse 1000000000)
(mp/cvt/vapor-p 3540 real pressure 3540)
(mp/cvt/cav-p-coeff-v62 1 real #f 1)
(mp/cvt/cav_p_coeff 1 real #f 1)
(mp/cvt/surface-tension 0.0717 real surface-tension 0.0717)
(mp/cvt/con-coeff-mspe 1 real #f 1)
(mp/cvt/con-coeff 0.01 real #f 0.01)
(mp/cvt/evap-coeff 0.02 real #f 0.02)
(mp/cvt/ncg-molecular-weight 29 real #f 29)
(mp/cvt/ncgs-mspe 1.5e-05 real #f 1.5e-05)
(mp/cvt/non-condensable-gas 1.5e-05 real #f 1.5e-05)
(mp/cvt/operating-temperature 300 real #f 300)
(mp/cvt/v63-model? #f boolean #f #f)
(cvt/total-gas-vof? #t boolean #f #t)
(cvt/gui-new? #t boolean #f #t)
(cvt/model-new? #t boolean #f #t)
(cvt/rho-mixture? #f boolean #f #f)
(cvt/model-v5? #f boolean #f #f)
(mass-tr/explicit-relax 1 real #f 1)
(cvt/relax-par 1 real #f 1)
(cvt/relax 1 real #f 1)
(mp/cvt/turb-coeff 0.39 real #f 0.39)
(mp/cvt/thermal-coeff 1 real #f 1)
(mp/cvt/free-stream-temp 300 real #f 300)
(mp/pressure/rc-anisotropic? #t boolean #f #t)
(mp/pressure-factor 1 real #f 1)
(mp/pvap/pressure-gradient? #t boolean #f #t)
(mp/pvap/pressure-treatment? #f boolean #f #f)
(mp/pvap/taylor-approximation? #f boolean #f #f)
(mp/pvap/thermal-factor? #f boolean #f #f)
(mp/pvap/turbulence-factor? #f boolean #f #f)
(mp/vof-diff/cav/gamma-option 1 integer #f 1)
(mp/vof-diff/generic/cav? #t boolean #f #t)
(mp/vof-diff/gamma 0.01 real #f 0.01)
(mp/vof-diff/generic/mom-sources? #f boolean #f #f)
(mp/vof-diff/generic/all-sources? #t boolean #f #t)
(mp/vof-diff/generic/expansion-source? #f boolean #f #f)
(mp/vof-diff/secondary-interaction? #t boolean #f #t)
(mp/vof-diff/gamma-option 0 integer #f 0)
(mp/vof-diff/linearize/grad-option 1 integer #f 1)
(mp/vof-diff/linearize? #t boolean #f #t)
(mp/vof-diff/specific-coeff? #t boolean #f #t)
(mp/vof-diff/generic? #f boolean #f #f)
(mp/vof-diffusion-expansion-source? #t boolean #f #t)
(mp/turbulence-effect? #t boolean #f #t)
(mp/turb-diffusion? #f boolean #f #f)
(mp/mt/couple-evap-cond-pbm? #f boolean #f #f)
(mp/mt/expert? #f boolean #f #f)
(mp/mt/limit/humidity-max 2 real #f 2)
(mp/mt/limit/ia-min 0 real #f 0)
(mp/mt/limit/vof-to-max 1 real #f 1)
(mp/mt/limit/vof-to-min 0 real #f 0)
(mp/mt/limit/vof-from-max 1 real #f 1)
(mp/mt/limit/vof-from-min 0 real #f 0)
(mp/mt/udf/linearize/alternative? #f boolean #f #f)
(mp/evap-cond/isat-model? #f boolean #f #f)
(mp/mt/ihf/linearize-dsdp? #f boolean #f #f)
(mp/mt/hertz-knudsen/lee-form? #f boolean #f #f)
(mp/mt/hertz-knudsen/linearize-dsdp? #t boolean #f #t)
(mp/mt/hertz-knudsen/verbosity 0 integer #f 0)
(mp/iad-grad/node-based? #f boolean #f #f)
(mp/mt/pressure-form/partial-p? #t boolean #f #t)
(mp/mt/temperature-form/partial-p? #f boolean #f #f)
(mp/mt/cav/schnerr/f-evap 1 real #f 1)
(mp/mt/cav/schnerr/f-cond 0.2 real #f 0.2)
(mp/mt/cav/schnerr/alt-form? #f boolean #f #f)
(mp/mt/cav/pvap-max-ratio 5 real #f 5)
(mp/mt/cav/plimit/method 0 integer #f 0)
(mp/mt/cavitation-models 1 integer #f 1)
(mp/mt/new-cav-models 0 integer #f 0)
(mp/mt/limiter? #f boolean #f #f)
(mp/mt/limit-pressure? #t boolean #f #t)
(mp/mt/udf/linearized? #t boolean #f #t)
(mp/rc-flux-solids-p? #t boolean #f #t)
(mp/htrxn/shrinking-core? #f boolean #f #f)
(mp/htrxn/heat-transfer? #t boolean #f #t)
(mp/htrxn/mom-transfer? #t boolean #f #t)
(mp/mt/heat-transfer? #t boolean #f #t)
(mp/mt/mom-transfer? #t boolean #f #t)
(mp/mass-trans-type 0 integer #f 0)
(mp/spe/vof-lower-limit 1.1e-06 real #f 1.1e-06)
(mp/spe/enable-mixture-phase-limit? #f boolean #f #f)
(mp/terminal-velocity 0 real #f 0)
(mp/cn-scheme-alpha 0.55 real #f 0.55)
(mp/cn-scheme? #f boolean #f #f)
(mp/pc/linearize-pc-factor 1 real #f 1)
(mp/pc/linearize-pc-source? #f boolean #f #f)
(mp/pc/gravity-factor? #f boolean #f #f)
(mp/porous/add-capillary-pressure-to-flux? #f boolean #f #f)
(mp/porous/relative-permeability/alternative-treatment? #f boolean #f #f)
(mp/porous/ap-new-average? #f boolean #f #f)
(mp/porous/darcy-solver? #f boolean #f #f)
(mp/porous/rel-perm-fix-option? #f boolean #f #f)
(mp/porous/stone-1? #t boolean #f #t)
(mp/flux/optional-blending-factor 0.5 real #f 0.5)
(mp/flux/blending-factor 0.9 real #f 0.9)
(mp/flux/calculate-blending-factor? #f boolean #f #f)
(mp/flux/aniso-rc/method 1 integer #f 1)
(mp/extrap-p? #f boolean #f #f)
(mp/amg-stabilization 0 integer #f 0)
(mp/amg-method 0 integer #f 0)
(mp/cycle-type 0 integer #f 0)
(mp/amg-beta 0.7 real #f 0.7)
(mp/amg-alpha 0.1 real #f 0.1)
(mp/scheme 0 integer #f 0)
(mp/max-iter 5 integer #f 5)
(mp/residual-tolerance 0.0001 real #f 0.0001)
(mp/iter-tolerance 0.05 real #f 0.05)
(mp/explicit-relax 1 real #f 1)
(mp/relax 0.5 real #f 0.5)
(mp/courant-number 0.25 real #f 0.25)
(mp/scheme-type 1 integer #f 1)
(mp/exp/every-iter/solve-flow-last? #t boolean #f #t)
(mp/every-iter? #f boolean #f #f)
(mp/phase-continuity/n-phase? #f boolean #f #f)
(mp/solve? #t boolean #f #t)
(mp/matrix-limiter 1e-08 real #f 1e-08)
(mp/min-phase-number 2 integer #f 2)
(mp/n-materials 1 integer #f 1)
(mp/frozen-flux? #f boolean #f #f)
(sg-vflux? #f boolean #f #f)
(mxt-drift-dispersion? #f boolean #f #f)
(mp-drift-force-coupled? #t boolean #f #t)
(mp-drift-force-boundary-coupled? #t boolean #f #t)
(mp/coupled-drag 0 integer #f 0)
(mp-turb-coupling-on? #t boolean #f #t)
(mp-drift-source-ke? #f boolean #f #f)
(mp-drift-source-mom? #f boolean #f #f)
(mp/face-pressure? #t boolean #f #t)
(mp/ref 0 integer #f 0)
(mp/fpi 1 integer #f 1)
(mp/phases-dpm 0 integer #f 0)
(mp/phases 0 integer #f 0)
(mp/vm-urf 1 real #f 1)
(mp/wall-drag-enhancement-aw #f boolean #f #f)
(mp/wall-drag-enhancement-fac 1000 real #f 1000)
(mp/brucato-fac 6.5e-06 real #f 6.5e-06)
(mp/td/linearize-td-source? #f boolean #f #f)
(mp/td/simonin-model? #f boolean #f #f)
(mp/td/diffusion-coeff 0.75 real #f 0.75)
(mp/td/cd-drift 1 real #f 1)
(mp/td/old-gui? #f boolean #f #f)
(mp/wl/wall-d-limit 50 real #f 50)
(mp/wl/hosokawa-coeff 0.0217 real #f 0.0217)
(mp/wl/hosokawa-model 1 integer #f 1)
(mp/wl/hosokawa-model-2002? #f boolean #f #f)
(mp/wl/uni-linearized? #f boolean #f #f)
(mp/wl/total-velocity? #f boolean #f #f)
(mp/wl/frank-coeff-p 1.7 real #f 1.7)
(mp/wl/frank-coeff-cwd 6.8 real #f 6.8)
(mp/wl/frank-coeff-cwc 10 real #f 10)
(mp/wl/antal-coeff-cw2 0.05 real #f 0.05)
(mp/wl/antal-coeff-cw1 -0.01 real #f -0.01)
(mp/wall-lubrication-relax 0.85 real #f 0.85)
(mp/turb/cd-drift 1 real #f 1)
(mp/turb/sato-c-mu 0.6 real #f 0.6)
(mp/turb/troshko-hassan-ctd 0.45 real #f 0.45)
(mp/turb/troshko-hassan-cke 0.75 real #f 0.75)
(mp/lift/lift-montoya-correction? #f boolean #f #f)
(mp/lift/lift-shaver-podowski-correction? #f boolean #f #f)
(mp/lift/moraga-model-old? #f boolean #f #f)
(mp/lift/tomiyama-model-1998? #t boolean #f #t)
(mp/mfluid-drag-anisotropy-control? #f boolean #f #f)
(mp/mfluid-drag-time-intrp-factor 3 integer #f 3)
(mp/mfluid-drag-den-option 0 integer #f 0)
(mp/mfluid-drag-visc-option 2 integer #f 2)
(mp/mfluid-drag-length-scale 0.0001 real #f 0.0001)
(mp/mfluid-drag-lamt-iner 0 real #f 0)
(mp/mfluid-drag-lamn-iner 0 real #f 0)
(mp/mfluid-drag-lamt 1000 real #f 1000)
(mp/mfluid-drag-lamn 1000000 real #f 1000000)
(mp/mfluid-aniso-drag-method 0 integer #f 0)
(mp/mfluid-aniso-drag-source? #t boolean #f #t)
(mp/mfluid-mass-imbalance? #t boolean #f #t)
(mp/evaporation-condensation-model? #f boolean #f #f)
(mp/boiling-model? #f boolean #f #f)
(mp/immiscible-fluid-model? #f boolean #f #f)
(mp/mfluid-first-time-step? #t boolean #f #t)
(mp/mfluid-startup-niter 0 integer #f 0)
(mp/mfluid-face-vof-corr? #t boolean #f #t)
(mp/mfluid-scheme-type 0 integer #f 0)
(mp/mfluid/poutlet/vof/enhanced? #t boolean #f #t)
(mp/mfluid/pbndr/normalize-fvof? #f boolean #f #f)
(mp/mfluid/pbndr/p-phase-reversal? #f boolean #f #f)
(vof/oc/wave/sample-size 200 integer #f 200)
(vof/oc/wave-spect/dir-integral-m 2 integer #f 2)
(vof/oc/wave-spect/freq-integral-m 0 integer #f 0)
(vof/beach/n-dirs 3 integer #f 3)
(vof/beach/damping-function 1 integer #f 1)
(vof/oc/forced-outlet-bc? #f boolean #f #f)
(vof/oc/n-waves-shallow 2 integer #f 2)
(vof/oc/n-waves 20 integer #f 20)
(vof/oc/wave/buffer-layer-ht 0 real #f 0)
(vof/oc/wave/buffer-layer-frac 0.02 real #f 0.02)
(vof/oc/wave/buffer-layer-spec 0 integer #f 0)
(vof/oc/wave/verbosity 0 integer #f 0)
(vof/oc/wave/fenton-stokes-form? #t boolean #f #t)
(vof/oc/po/backflow-treatment? #f boolean #f #f)
(vof/oc/inlet-interp-option 0 integer #f 0)
(vof/oc/rev-flow-treatment? #t boolean #f #t)
(vof/oc/ntime-fixed-level 5 integer #f 5)
(vof/oc/niter-fixed-level 20 integer #f 20)
(vof/open-channel-init-thread 0 integer #f 0)
(vof/open-channel-wavy-init? #f boolean #f #f)
(vof/open-channel-flat-init? #f boolean #f #f)
(vof/open-channel-wave-bc? #f boolean #f #f)
(vof/ntime-froud-update 1 integer #f 1)
(vof/niter-froud-update 20 integer #f 20)
(vof/open-channel? #f boolean #f #f)
(vof/surf-tens/curv-smooth/w-adh? #f boolean #f #f)
(vof/surf-tens/curv-smooth/factor 0.75 real #f 0.75)
(vof/surf-tens/curv-smooth/auto-relax? #f boolean #f #f)
(vof/surf-tens/curv-smooth/scale-id 4 integer #f 4)
(vof/surf-tens/curv-smooth/num 2 integer #f 2)
(vof/surf-tens/curv-smooth? #f boolean #f #f)
(vof/surf-tens/expert? #f boolean #f #f)
(vof/surf-tens/csf/den-corr-option 0 integer #f 0)
(vof/surf-tens/css/avrg-option 0 integer #f 0)
(vof/surf-tens/smooth/factor 1 real #f 1)
(vof/surf-tens/smooth/num 2 integer #f 2)
(vof/node-based-gradients? #t boolean #f #t)
(vof/node-based-deriv? #t boolean #f #t)
(vof/pseudo/verbosity 0 integer #f 0)
(vof/pseudo/dt-factor-sfc 0.01 real #f 0.01)
(vof/pseudo/include-dt-sfc? #t boolean #f #t)
(vof/pseudo/include-dt-visc? #t boolean #f #t)
(vof/pseudo/vel-ratio 10 real #f 10)
(vof/pseudo/vel-ratio/max-to-avg 100 real #f 100)
(vof/pseudo/umax-factor 0.25 real #f 0.25)
(vof/pseudo/dt-factor-min 0.25 real #f 0.25)
(vof/pseudo/dt-factor-max 1.2 real #f 1.2)
(vof/pseudo/dt-max 1000 real #f 1000)
(vof/pseudo/dt-init/limit 0.01 real #f 0.01)
(vof/pseudo/time-scale-startup 0.1 real #f 0.1)
(vof/pseudo/auto-dt/advanced? #f boolean #f #f)
(ho-rc/hybrid/factor 0.0001 real #f 0.0001)
(ho-rc/hybrid? #f boolean #f #f)
(vof/pseudo/false-linearization/factor 0.5 real #f 0.5)
(vof/pseudo/false-linearization? #f boolean #f #f)
(vof/pseudo/density-smooth/node-based? #t boolean #f #t)
(vof/pseudo/density-smooth/num 2 integer #f 2)
(vof/pseudo/mom/smoothing? #f boolean #f #f)
(vof/coupled/mom-impl-relax? #f boolean #f #f)
(vof/coupled/start-up/damping-iter 10 integer #f 10)
(vof/coupled/start-up/damping-factor 10 real #f 10)
(pressure/cpl-expl-omega-vof 1 real #f 1)
(pressure-coupled-steady/vof/explicit-relax 0.5 real #f 0.5)
(pressure-coupled/vof/explicit-relax 0.75 real #f 0.75)
(vof/coupled/courant-number 200 real #f 200)
(vof/coupled/diag-dominance? #f boolean #f #f)
(vof/coupled/subtract-vol-imbl? #f boolean #f #f)
(vof/coupled/bf-mom/blend2? #f boolean #f #f)
(vof/coupled/bf-mom/blend1? #f boolean #f #f)
(vof/coupled/bf-mom/niter 0 integer #f 0)
(vof/coupled/bf-mom-linearization? #t boolean #f #t)
(vof/coupled/mom-mass-imbl? #t boolean #f #t)
(euler-mp/coupled-form? #f boolean #f #f)
(vof/coupled-form? #f boolean #f #f)
(vof/packed-bed/subtract-vol-imbl? #f boolean #f #f)
(mp/turb-visc/damp/coeff 0.25 real #f 0.25)
(mp/turb-visc/damp/rho-r-max 2000 real #f 2000)
(mp/turb-visc/damp/n-max 2 real #f 2)
(mp/turb-visc/damp? #f boolean #f #f)
(mp/visc-avg/harmonic? #f boolean #f #f)
(mp/visc-disp/expert? #f boolean #f #f)
(mp/visc-disp/disable-bndr-treatment? #f boolean #f #f)
(mp/visc-disp/disable-wall-treatment? #t boolean #f #t)
(mp/visc-disp/pow-rho 0.5 real #f 0.5)
(mp/visc-disp/pow-sm 2 real #f 2)
(mp/visc-disp/sm-relax 1 real #f 1)
(mp/visc-disp/n-smooth 2 integer #f 2)
(mp/visc-disp/rho-option 0 integer #f 0)
(mp/visc-disp/mu-option 0 integer #f 0)
(mp/regime-type 0 integer #f 0)
(vof/compressive/local-min-max? #t boolean #f #t)
(vof/compressive/phase-localized-discretization? #f boolean #f #f)
(vof/compressive/zonal-discretization? #f boolean #f #f)
(vof/compressive/phase-based? #f boolean #f #f)
(bgm/modified-gradient? #t boolean #f #t)
(vof/collect-node/sb/vol-based? #t boolean #f #t)
(vof/geo-recon/generic-grad-method? #f boolean #f #f)
(vof/node-based-unlimited-grad? #t boolean #f #t)
(vof/node-based/new-framework? #f boolean #f #f)
(mp/local-init/turb-vmin 0.01 real #f 0.01)
(mp/local-init/turb-viscosity-ratio 10 real #f 10)
(mp/local-init/turb-intensity 0.05 real #f 0.05)
(mp/turb/local-init? #f boolean #f #f)
(vof/smooth/relax 0.5 real #f 0.5)
(vof/smooth? #t boolean #f #t)
(mp/sub-time-step/include-dflux? #t boolean #f #t)
(vof/sub-time-step/hybrid/factor 0.6 real #f 0.6)
(vof/time-step/vel-factor 0.3 real #f 0.3)
(vof/time-step/flux-avg-factor 0.5 real #f 0.5)
(vof/verbosity 0 integer #f 0)
(mfluid/courant-calculation-method 1 integer #f 1)
(vof/courant-calculation-method 3 integer #f 3)
(vof/case-check/verbosity 0 integer #f 0)
(vof/anti-diffusion/dynamic/exponent 1.5 real #f 1.5)
(vof/anti-diffusion/dynamic/method 1 integer #f 1)
(vof/anti-diffusion/gradient/method 0 integer #f 0)
(vof/anti-diffusion/dynamic? #f boolean #f #f)
(vof/anti-diffusion/enhanced/linearization? #f boolean #f #f)
(vof/anti-diffusion/enhanced? #f boolean #f #f)
(vof/anti-diffusion/expansion? #t boolean #f #t)
(vof/anti-diffusion/factor 0.75 real #f 0.75)
(vof/anti-diffusion? #f boolean #f #f)
(mp/explicit/solution-order 0 integer #f 0)
(mp/explicit/mass-tr-option 0 integer #f 0)
(mp/flotsam/node-avg/cutoff 0.001 real #f 0.001)
(mp/flotsam-indicator/method 1 integer #f 1)
(mp/flotsam/filter? #f boolean #f #f)
(mp/explicit/relative-motion? #t boolean #f #t)
(vof/gradient/new-framework? #t boolean #f #t)
(mp/explicit/new-framework? #f boolean #f #f)
(mp/explicit/mass-imb/init? #t boolean #f #t)
(mp/implicit-vof-low-limit 0 real #f 0)
(vof/implicit-low-limit 1e-06 real #f 1e-06)
(vof/explicit-low-limit 1e-06 real #f 1e-06)
(vof/remove-small-bubbles? #f boolean #f #f)
(vof/phase-normalization/old-treatment? #f boolean #f #f)
(vof/redistribution/criterion 1e-10 real #f 1e-10)
(vof/redistribution/niter 10 integer #f 10)
(vof/redistribute-normalized-volume? #t boolean #f #t)
(vof/redistribute-lost-volume? #t boolean #f #t)
(vof/use-polyhedra? #t boolean #f #t)
(vof/improved-wall-treatment? #f boolean #f #f)
(vof/courant-based-time-step? #f boolean #f #f)
(vof/global-courant-number-limit 250 real #f 250)
(vof/global-courant-number 2 real #f 2)
(mp/reg-trans/gentop/cc-extension-factor 1 real #f 1)
(mp/reg-trans/gentop/cc-extension-factor-on? #f boolean #f #f)
(mp/reg-trans/gentop/clustering-reconstructed-gradients? #t boolean #f #t)
(mp/reg-trans/gentop/surface-force-off-non-gentop? #t boolean #f #t)
(mp/reg-trans/gentop/clustering-coeff 1 real #f 1)
(mp/reg-trans/gentop/clustering-force-active? #t boolean #f #t)
(mp/reg-trans/gentop/sp-cc () integer-list #f ())
(mp/reg-trans/gentop/sp-trm 0 integer #f 0)
(mp/reg-trans/gentop/on? #f boolean #f #f)
(mp/reg-trans/aiad/entrained-phase-formation-coefficient 0.02 real #f 0.02)
(mp/reg-trans/aiad/subgrid-wave-k-on? #f boolean #f #f)
(mp/reg-trans/aiad/sfc-coeff-cont-pair 0 real #f 0)
(mp/reg-trans/aiad/bubb-drag 0.44 real #f 0.44)
(mp/reg-trans/aiad/limit-vf-bubb 0.3 real #f 0.3)
(mp/reg-trans/aiad/coeff-bubb 50 real #f 50)
(mp/reg-trans/aiad/bubb-diam 0.001 real #f 0.001)
(mp/reg-trans/aiad/drop-drag 0.44 real #f 0.44)
(mp/reg-trans/aiad/limit-vf-drop 0.3 real #f 0.3)
(mp/reg-trans/aiad/coeff-drop 50 real #f 50)
(mp/reg-trans/aiad/drop-diam 0.001 real #f 0.001)
(mp/reg-trans/aiad/sp-ent 0 integer #f 0)
(mp/reg-trans/aiad/sp-cont 0 integer #f 0)
(mp/reg-trans/aiad/pp-cont 0 integer #f 0)
(mp/reg-trans/aiad/on? #f boolean #f #f)
(mp/filtered-model/term-vel 0.23 real #f 0.23)
(mp/filtered-model/set-term-vel? #f boolean #f #f)
(mp/filtered-model/solid-press-md-select 0 integer #f 0)
(mp/filtered-model/strain-rate-limit 100 real #f 100)
(mp/filtered-model/drag-on? #f boolean #f #f)
(mp/filtered-model/min-filter-size 0.02 real #f 0.02)
(velocity-limiting/verbosity? #f boolean #f #f)
(velocity-limiting/option 0 integer #f 0)
(velocity-limiting/strength 10 real #f 10)
(velocity-limiting/magnitude 5000 real #f 5000)
(velocity-limiting/phase-based? #f boolean #f #f)
(velocity-limiting/enable? #f boolean #f #f)
(mp/stable-vof/option 1 integer #f 1)
(mp/stabilization/advanced2/pseudo-transient? #t boolean #f #t)
(mp/stabilization/advanced2/blended-discr? #t boolean #f #t)
(mp/stabilization/advanced2/option 0 integer #f 0)
(mp/stabilization/advanced? #f boolean #f #f)
(mp/stabilization/basic? #f boolean #f #f)
(mp/mt/total-enthalpy-liquid-work? #f boolean #f #f)
(mp/hmt/boiling-global? #f boolean #f #f)
(mp/hmt/mt-latent-verbose 0 integer #f 0)
(mp/hmt/mt-s-lin-dt-min 1 real #f 1)
(mp/hmt/mt-s-lin-ia-sym? #f boolean #f #f)
(mp/hmt/mp-zero-ap-mt-index 0 integer #f 0)
(mp/hmt/mp-zero-ap-sat-temp #f boolean #f #f)
(mp/hmt/mt-tpc-advance-temp-average-model 0 integer #f 0)
(mp/hmt/mt-tpc-advance-vof-seeding 1e-10 real #f 1e-10)
(mp/hmt/mt-tpc-advance-one-factor? #f boolean #f #f)
(mp/hmt/mt-tpc-advance? #f boolean #f #f)
(mp/hmt/mt-thermal-spec-seed? #t boolean #f #t)
(mp/hmt/add-ht-global? #t boolean #f #t)
(mp/hmt/particle-mode? #t boolean #f #t)
(mp/hmt/area-density/vof-min 1e-06 real #f 1e-06)
(mp/vof-min 1e-15 real #f 1e-15)
(mp/enable-vof-min? #f boolean #f #f)
(piso/pboundary/update-flux? #f boolean #f #f)
(face-pressure/scheme 0 integer #f 0)
(piso/scheme 0 integer #f 0)
(pressure/node-based-pp-grad 1 integer #f 1)
(pressure/skew-relax 1 real #f 1)
(piso/coupling? #t boolean #f #t)
(piso/neighbor-iter 1 integer #f 1)
(frstep/skew-iter 0 integer #f 0)
(simplec/skew-iter 0 integer #f 0)
(piso/skew-iter 1 integer #f 1)
(flow/scheme 24 integer #f 20)
(udm/registered-models () () #f ())
(udm/n-node-udm 0 integer #f 0)
(udm/n-udm 0 integer #f 0)
(udm/patch () real-list #f ())
(hyb-init/unscaled-res? #f boolean #f #f)
(hyb-init/alternate-treatment-for-pfar? #f boolean #f #f)
(hyb-init/legacy-hybrid-initialization? #f boolean #f #f)
(hyb-init/press-fact 0.01 real #f 0.01)
(hyb-init/alternate-treatment-for-pi? #f boolean #f #f)
(hyb-init/enabled-for-unsteady? #f boolean #f #f)
(hyb-init/enabled-for-mphase? #f boolean #f #f)
(hyb-init/patch-ads? #f boolean #f #f)
(hyb-init/mach-limit 0.5 real #f 0.5)
(hyb-init/aero-method 0 integer #f 0)
(hyb-init/constant-vel-vector? #f boolean #f #f)
(hyb-init/debug-mixing-plane? #f boolean #f #f)
(hyb-init/species-user-specified? #f boolean #f #f)
(hyb-init/species-domain-averaged? #f boolean #f #f)
(hyb-init/turb-domain-averaged? #t boolean #f #t)
(hyb-init/pressure-from-bc? #f boolean #f #f)
(hyb-init/rotation-factor 1 real #f 1)
(hyb-init/turb-vr 10 real #f 10)
(hyb-init/turb-intens 0.05 real #f 0.05)
(hyb-init/needed? #f boolean #f #f)
(hyb-init/residual-tolerance (1e-06 1e-06) real-list #f (1e-06 1e-06))
(hyb-init/verbose1? #t boolean #f #t)
(hyb-init/niter 10 integer #f 10)
(hyb-init/n-ads 2 integer #f 2)
(hyb-init/skew-grid? #f boolean #f #f)
(hyb-init/default (0 0) real-list #f (0 0))
(hyb-init/patch (0 0) real-list #f (0 0))
(hyb-init/amg-stabilization (0 0) integer-list #f (0 0))
(hyb-init/amg-method (0 0) integer-list #f (0 0))
(hyb-init/cycle-type (3 3) integer-list #f (3 3))
(hyb-init/amg-beta (0.7 0.7) real-list #f (0.7 0.7))
(hyb-init/amg-alpha (0.1 0.1) real-list #f (0.1 0.1))
(hyb-init/explicit-relax (1 1) real-list #f (1 1))
(hyb-init/relax (1 1) real-list #f (1 1))
(hyb-init/solve? (#t #t) boolean-list #f (#t #t))
(uds/registered-models () () #f ())
(uds/secondary-gradient? #t boolean #f #t)
(uds/skew-grid? #f boolean #f #f)
(uds/variables (((domain-id . 1) (zone-type . 0) (solution-zones 2) (flux-fcn . "mass flow rate") (unsteady-fcn . "default")) ((domain-id . 1) (zone-type . 0) (solution-zones 2) (flux-fcn . "mass flow rate") (unsteady-fcn . "default"))) () #f ())
(uds/new-coupled-coeffs? #f boolean #f #f)
(uds/zero-out-gradient-at-nci? #f boolean #f #f)
(uds/diffusion-long? #f boolean #f #f)
(uds/inlet-diffusion? #t boolean #f #t)
(uds/default (0 0) real-list #f (0))
(uds/patch (0 0) real-list #f (0))
(uds/amg-stabilization (0 0) integer-list #f (0))
(uds/amg-method (0 0) integer-list #f (0))
(uds/cycle-type (0 0) integer-list #f (0))
(uds/amg-beta (0.7 0.7) real-list #f (0.7))
(uds/amg-alpha (0.1 0.1) real-list #f (0.1))
(uds/scheme (0 0) integer-list #f (0))
(uds/relax (1 1) real-list #f (1))
(uds/solve? (#t #t) boolean-list #f (#t))
(uds/n-uds 2 integer #f 0)
(dqmom-iem/explicit-relax 1 real #f 1)
(dqmom-iem/residual-tolerance 0.0001 real #f 0.0001)
(dqmom-iem/iter-tolerance 0.05 real #f 0.05)
(dqmom-iem/prob-min 1e-06 real #f 1e-06)
(dqmom-iem/energy-nmodes? #f boolean #f #f)
(dqmom-iem/corr-limit 1 real #f 1)
(dqmom-iem/correct? #t boolean #f #t)
(dqmom-iem/nmodes 2 integer #f 2)
(dqmom-iem/relax 1 real #f 1)
(dqmom-iem/scheme 1 integer #f 1)
(dqmom-modes/patch (0) real-list #f (0))
(dqmom-modes/default (0) real-list #f (0))
(dqmom-iem/solve? #t boolean #f #t)
(dqmom-iem/amg-stabilization 0 integer #f 0)
(dqmom-iem/amg-method 0 integer #f 0)
(dqmom-iem/cycle-type 0 integer #f 0)
(dqmom-iem/amg-beta 0.7 real #f 0.7)
(dqmom-iem/amg-alpha 0.1 real #f 0.1)
(dqmom-iem/max-iter 5 integer #f 5)
(pdf-transport/bc-species ("h2o" "o2" "n2") string-list #f ("h2o" "o2" "n2"))
(pdf-transport/bc ((300 300 300 300) (#t) ((o2 0 0.233 0 0) (n2 0 0.767 0 0))) () #f ((300 300 300 300) (#t) ((o2 0 0.233 0 0) (n2 0 0.767 0 0))))
(pdf-transport-euler? #f boolean #f #f)
(pdf-transport-lag? #t boolean #f #t)
(exclude-pdft-statistics-species () string-list #f ())
(reacting-channel/verbosity 0 integer #f 0)
(reacting-channel/utubes-list () () #f ())
(reacting-channel/utube-config? #f boolean #f #f)
(reacting-channel/sectioned? #f boolean #f #f)
(reacting-channel/inlet-flow-max-angle 30 real #f 30)
(reacting-channel/ud-nu-num 3.66 real #f 3.66)
(reacting-channel/use-ud-nu? #f boolean #f #f)
(reacting-channel/nu-entry-len-correction? #f boolean #f #f)
(reacting-channel/urf-hf 0.1 real #f 0.1)
(reacting-channel/wall-ids () integer-list #f ())
(reacting-channel/flow-iter-per-coupling 1 integer #f 1)
(reacting-channel/wall-names () string-list #f ())
(reacting-channel/variables () () #f ())
(reacting-channel/num-wall-groups 1 integer #f 1)
(reacting-channel/enabled? #f boolean #f #f)
(species/tfm/eff-num-smooths 0 integer #f 0)
(species/tfm/eff-flags (#f #f #f) boolean-list #f (#f #f #f))
(species/tfm/beta 0.33 real #f 0.33)
(species/tfm/lt-integral 0.02 real #f 0.02)
(species/tfm/eff-real-params (10 0.28) real-list #f (10 0.28))
(species/tfm/n-smooth-vel 3 integer #f 3)
(species/tfm/sensor-num-smooths 0 integer #f 0)
(species/tfm/sensor-beta 50 real #f 50)
(species/tfm/sensor-rxn-index 0 integer #f 0)
(species/tfm/sensor-calc-method 1 integer #f 1)
(species/tfm/closure-method 2 integer #f 2)
(species/tfm/omega-rxn-index 0 integer #f 0)
(species/tfm/omega-calc-method 0 integer #f 0)
(species/tfm-rans? #f boolean #f #f)
(species/tfm/prmxa 2 real #f 2)
(species/tfm/e-num-smooths 1 integer #f 1)
(species/tfm/e-method 1 integer #f 1)
(species/tfm/f-num-smooths 0 integer #f 0)
(species/tfm/max-f 1000 real #f 1000)
(species/tfm/num-grid-pts-in-flame 8 real #f 8)
(species/tfm/omega-num-smooths 5 integer #f 5)
(species/tfm/omega-gamma 1.1 real #f 1.1)
(species/tfm/omega-beta 10 real #f 10)
(species/tfm? #f boolean #f #f)
(species/reactor-net/aggressiveness-factor 1 real #f 1)
(species/reactor-net/continuation? #f boolean #f #f)
(species/reactor-net/fluc/min-prob 0.05 real #f 0.05)
(species/reactor-net/fluc/num-bins 10 integer #f 10)
(species/reactor-net/fluc? #f boolean #f #f)
(species/reactor-net-cff () string-list #f ())
(species/reactor-net-mix-name "" string #f "")
(species/reactor-net/par-prmx-dims ("temp" "fmean") string-list #f ("temp" "fmean"))
(species/reactor-net/spe-tran-dims ("temp" "n2" "h2o") string-list #f ("temp" "n2" "h2o"))
(species/reactor-net/int-params (50 0 1 0 0 500 0) integer-list #f (50 0 1 0 0 500 0))
(species/reactor-net/real-params (1e-05 1e-12 1e-06 2 1.1 100000000 1e-08 0.1 0 0) real-list #f (1e-05 1e-12 1e-06 2 1.1 100000000 1e-08 0.1 0 0))
(species/reactor-net/pre-r17? #f boolean #f #f)
(species/reactor-net-expert? #f boolean #f #f)
(species/reactor-net? #f boolean #f #f)
(species/dr-represented-species ("h2o" "co2" "co" "o2" "n2" "no" "hcn" "h2" "oh" "h" "o" "ch3" "c2h4") string-list #f ("h2o" "co2" "co" "o2" "n2" "no" "hcn" "h2" "oh" "h" "o" "ch3" "c2h4"))
(species/dr-fuel-oxid-species ("o2" "n2") string-list #f ("o2" "n2"))
(species/dr-full-mat-name "" string #f "")
(species/dr-num-red-species 12 integer #f 12)
(species/dimension-reduction 0 integer #f 0)
(species/min-ln-k -200 real #f -200)
(species/analytic-jacobian? #t boolean #f #t)
(species/adapchem/dsrr/t-rtol 0.001 real #f 0.001)
(species/adapchem/dsrr/t-atol 0.1 real #f 0.1)
(species/adapchem/dsrr/sp-rtol 0.001 real #f 0.001)
(species/adapchem/dsrr/sp-atol 1e-06 real #f 1e-06)
(species/adapchem/drg-nspe-target 3 integer #f 3)
(species/adapchem/drg-species ("h") string-list #f ("h"))
(species/adapchem/drg-species-threshold 0 real #f 0)
(species/adapchem/drg-tol 0.01 real #f 0.01)
(species/adapchem-expert? #f boolean #f #f)
(species/adapchem/mechred-method 1 integer #f 1)
(species/adapchem? #f boolean #f #f)
(species/min-temp-chemistry 200 real #f 200)
(species/agglom-chemistry/temp-inert 0 real #f 0)
(species/agglom-chemistry/real-params (1 1e-12) real-list #f (1 1e-12))
(species/agglom-chemistry/delta-temp 10 real #f 10)
(species/agglom-chemistry/close-species ("oh" "co") string-list #f ("oh" "co"))
(species/agglom-chemistry/nhash 1000 integer #f 1000)
(species/agglom-chemistry/nspe 4 integer #f 4)
(species/agglom-chemistry/tol 0.02 real #f 0.02)
(species/agglom-chemistry/verbosity? #f boolean #f #f)
(species/agglom-chemistry/njac 10 integer #f 10)
(species/agglom-chemistry/method 0 integer #f 0)
(species/agglom-chemistry? #f boolean #f #f)
(species/surf/sundials-steady-rtol 1e-06 real #f 1e-06)
(species/surf/sundials-unsteady-atol 0 real #f 0)
(species/surf/sundials-unsteady-rtol 0.001 real #f 0.001)
(species/surf/sundials-max-steps 500 integer #f 500)
(species/surf-ode-solver 0 integer #f 0)
(species/surf-rxn-src-netm-split 0.3 real #f 0.3)
(species/surf-rxn-netm-fac 0.5 real #f 0.5)
(species/init-site-equil? #f boolean #f #f)
(species/surf-rxn-diff-option 0 integer #f 0)
(species/disable-react-diff-balance? #f boolean #f #f)
(species/surf-rxn-rate-from-chemkin? #f boolean #f #f)
(species/surf-ode-int-params (0 2 0) integer-list #f (0 2 0))
(species/surf-ode-real-params (1e-05 1000 1e-08 1e-14 10 9.999999999999999e-12 1e-05) real-list #f (1e-05 1000 1e-08 1e-14 10 9.999999999999999e-12 1e-05))
(species/surf-stiff-chem-method 1 integer #f 1)
(hetero-stiff-chem? #f boolean #f #f)
(stiff-chem-seg-dt 0.1 real #f 0.1)
(stiff-chem-seg? #f boolean #f #f)
(stiff-solver/temp-time-redux 0.25 real #f 0.25)
(stiff-solver/chem-time-ratio 0.9 real #f 0.9)
(stiff-solver? #f boolean #f #f)
(species/loc-spe-max-lin 0 integer #f 0)
(species/lin-local-param (0.1 1.2) real-list #f (0.1 1.2))
(species/expert-on? #f boolean #f #f)
(species/linearize-sec-grad? #f boolean #f #f)
(species/linearize-sec-src? #f boolean #f #f)
(species/bl-coeffs (0 0) real-list #f (0 0))
(species/blending-method 0 integer #f 0)
(species/min-cq 0.1 real #f 0.1)
(species/src-up-tol 1e-06 real #f 1e-06)
(species/agg-fac 0 real #f 0)
(species/element-flux-report-flag? #f boolean #f #f)
(species/minimum-concentration 1e-06 real #f 1e-06)
(species/chemkin-cfd-verbosity? #f boolean #f #f)
(species/verbosity 1 integer #f 1)
(species/cvd-stiff-verbosity 1 integer #f 1)
(species/cvd-stiff-sweep 3 integer #f 3)
(species/cvd-stiff-loop-max 60 integer #f 60)
(species/surf-react-apfac 0 real #f 0)
(species/dpm-sensible-heat-source 0 real #f 0)
(species/dpm-heat-source 0 real #f 0)
(species/dpm-mass-source 0 real #f 0)
(species/heat-of-reaction 0 real #f 0)
(species/save-gradients? #f boolean #f #f)
(species/kinetics/kinlfs-extrapolation-method 1 integer #f 1)
(species/isat-href 10000000000 real #f 10000000000)
(species/isat-href-method 1 integer #f 1)
(species/kinetics/ckcfd-isat? #t boolean #f #t)
(species/kinetics/surf-rxn-steady? #f boolean #f #f)
(species/kinetics/niter-surf 1 integer #f 1)
(species/kinetics/surf-dt-min 1e-08 real #f 1e-08)
(species/kinetics/surf-dt-max 1 real #f 1)
(species/kinetics/endpt-sens? #t boolean #f #t)
(species/kinetics/const-press-reactor? #t boolean #f #t)
(species/kinetics/use-isat? #t boolean #f #t)
(species/kinetics/trans-file? #f boolean #f #f)
(species/kinetics/cell-monitor-list () list #f ())
(species/kinetics/provide-wall-yi? #t boolean #f #t)
(species/kinetics/provide-diffusivity? #t boolean #f #t)
(species/kinetics/arbit-value 0 real #f 0)
(species/kinetics/arbit-string "" string #f "")
(species/kinetics/aux-file "" string #f "")
(species/kinetics/cons-noneg-mf 1 integer #f 1)
(species/kinetics/small-plus 1e-12 real #f 1e-12)
(species/kinetics/min-surf-mf -0.0001 real #f -0.0001)
(species/kinetics/max-surf-mf 1.1 real #f 1.1)
(species/kinetics/min-gas-mf -1e-12 real #f -1e-12)
(species/kinetics/max-gas-mf 1.01 real #f 1.01)
(species/kinetics/steady-max-attempts 1 integer #f 1)
(species/kinetics/init-time-step 0 real #f 0)
(species/kinetics/min-time-step 1e-10 real #f 1e-10)
(species/kinetics/max-time-step 0.01 real #f 0.01)
(species/kinetics/steady-time-step 0.0001 real #f 0.0001)
(species/kinetics/steady-time-marching 1 integer #f 1)
(species/kinetics/surf-rel-tol 0.001 real #f 0.001)
(species/kinetics/surf-abs-tol 1e-06 real #f 1e-06)
(species/kinetics/gas-rel-tol 1e-05 real #f 1e-05)
(species/kinetics/gas-abs-tol 1e-10 real #f 1e-10)
(species/kinetics/print-level 0 integer #f 0)
(species/carm 0 integer #f 0)
(species/chem-step-ensemble? #f boolean #f #f)
(species/chemkin-import-type 0 integer #f 0)
(species/reaction-data-from-api-only? #f boolean #f #f)
(species/emulate-encrypted-mechanism? #f boolean #f #f)
(species/kinetics/encrypted-mechanism? #f boolean #f #f)
(species/kinetics/steady-state? #f boolean #f #f)
(species/kinetics? #f boolean #f #f)
(species/equil-rfl-fac 2 real #f 2)
(species/equil-rfl-phi 1 real #f 1)
(species/equil-rfl? #f boolean #f #f)
(species/edc-fuel-species-list ("ch4" "h2" "o2" "h2o" "co2") string-list #f ("ch4" "h2" "o2" "h2o" "co2"))
(species/fuel-species-list () string-list #f ())
(species/chem-time-scale-const 1 real #f 1)
(species/turb-time-scale-const 4 real #f 4)
(species/equil-isat/num-sens-rtol 1e-08 real #f 1e-08)
(species/equil-isat/num-sens-atol 1e-15 real #f 1e-15)
(species/equil-isat/analytic-sens? #f boolean #f #f)
(species/equil-chem-seg-dt? #f boolean #f #f)
(species/chemical-equilibrium? #f boolean #f #f)
(electrolysis/vof-linearized? #t boolean #f #t)
(electrolysis/phi-correction? #t boolean #f #t)
(electrolysis/mp-source #f boolean #f #f)
(electrolysis/source-urf-factor 20 real #f 20)
(electrolysis/source-urf 1 real #f 1)
(electrolysis/cathode-ext/thread-ids () integer-list #f ())
(electrolysis/anode-ext/thread-ids () integer-list #f ())
(electrolysis/cathode-cl/leverett-c 1.263 real #f 1.263)
(electrolysis/cathode-cl/leverett-b 2.12 real #f 2.12)
(electrolysis/cathode-cl/leverett-a 1.417 real #f 1.417)
(electrolysis/cathode-cl/con-angle 60 real #f 60)
(electrolysis/cathode-cl/svratio 200000 real #f 200000)
(electrolysis/cathode-cl/permibility 1e-12 real #f 1e-12)
(electrolysis/cathode-cl/porosity 0.6 real #f 0.6)
(electrolysis/cathode-pl/leverett-c 1.263 real #f 1.263)
(electrolysis/cathode-pl/leverett-b 2.12 real #f 2.12)
(electrolysis/cathode-pl/leverett-a 1.417 real #f 1.417)
(electrolysis/cathode-pl/con-angle 60 real #f 60)
(electrolysis/cathode-pl/permibility 1e-12 real #f 1e-12)
(electrolysis/cathode-pl/porosity 0.6 real #f 0.6)
(electrolysis/cathode-cl/material "" string #f "")
(electrolysis/cathode-pl/material "" string #f "")
(electrolysis/cathode-cc/material "" string #f "")
(electrolysis/cathode-cl/update-zones #t boolean #f #t)
(electrolysis/cathode-pl/update-zones #t boolean #f #t)
(electrolysis/cathode-cc/update-zones #t boolean #f #t)
(electrolysis/cathode-cl/thread-ids () integer-list #f ())
(electrolysis/cathode-pl/thread-ids () integer-list #f ())
(electrolysis/cathode-fc/thread-ids () integer-list #f ())
(electrolysis/cathode-cc/thread-ids () integer-list #f ())
(electrolysis/mem/permibility 1e-12 real #f 1e-12)
(electrolysis/mem/porosity 0.6 real #f 0.6)
(electrolysis/mem/material "" string #f "")
(electrolysis/mem/update-zones #t boolean #f #t)
(electrolysis/mem/thread-ids () integer-list #f ())
(electrolysis/anode-cl/leverett-c 1.263 real #f 1.263)
(electrolysis/anode-cl/leverett-b 2.12 real #f 2.12)
(electrolysis/anode-cl/leverett-a 1.417 real #f 1.417)
(electrolysis/anode-cl/con-angle 60 real #f 60)
(electrolysis/anode-cl/svratio 200000 real #f 200000)
(electrolysis/anode-cl/permibility 1e-12 real #f 1e-12)
(electrolysis/anode-cl/porosity 0.6 real #f 0.6)
(electrolysis/anode-pl/leverett-c 1.263 real #f 1.263)
(electrolysis/anode-pl/leverett-b 2.12 real #f 2.12)
(electrolysis/anode-pl/leverett-a 1.417 real #f 1.417)
(electrolysis/anode-pl/con-angle 60 real #f 60)
(electrolysis/anode-pl/permibility 1e-12 real #f 1e-12)
(electrolysis/anode-pl/porosity 0.6 real #f 0.6)
(electrolysis/anode-cl/material "" string #f "")
(electrolysis/anode-pl/material "" string #f "")
(electrolysis/anode-cc/material "" string #f "")
(electrolysis/anode-cl/update-zones #t boolean #f #t)
(electrolysis/anode-pl/update-zones #t boolean #f #t)
(electrolysis/anode-cc/update-zones #t boolean #f #t)
(electrolysis/anode-cl/thread-ids () integer-list #f ())
(electrolysis/anode-pl/thread-ids () integer-list #f ())
(electrolysis/anode-fc/thread-ids () integer-list #f ())
(electrolysis/anode-cc/thread-ids () integer-list #f ())
(electrolysis/std-pre 101325 real #f 101325)
(electrolysis/std-tem 298.15 real #f 298.15)
(electrolysis/open-voltage 1.15 real #f 1.15)
(electrolysis/cathode-entro 0 real #f 0)
(electrolysis/cathode-stde 0 real #f 0)
(electrolysis/cathode-ex-c 2 real #f 2)
(electrolysis/cathode-ex-a 2 real #f 2)
(electrolysis/cathode-exp 0 real #f 0)
(electrolysis/cathode-cref 1 real #f 1)
(electrolysis/cathode-jref 1 real #f 1)
(electrolysis/anode-entro -163300 real #f -163300)
(electrolysis/anode-stde 1.229 real #f 1.229)
(electrolysis/anode-ex-c 2 real #f 2)
(electrolysis/anode-ex-a 2 real #f 2)
(electrolysis/anode-exp 1 real #f 1)
(electrolysis/anode-cref 1 real #f 1)
(electrolysis/anode-jref 0.01 real #f 0.01)
(electrolysis/total-current 1 real #f 1)
(electrolysis/total-voltage 1.5 real #f 1.5)
(electrolysis/capillary-pressure #t boolean #f #t)
(electrolysis/osmotic-drag #t boolean #f #t)
(electrolysis/half-cell-voltage #t boolean #f #t)
(electrolysis/bv-rate #t boolean #f #t)
(electrolysis/electro-source #t boolean #f #t)
(electrolysis/device-type 0 integer #f 0)
(electrolysis/electrical_bc_type 0 integer #f 0)
(lithium/activity-function () () #f ())
(lithium/tplus-function () () #f ())
(lithium/anode-eq-p () () #f ())
(lithium/cathode-eq-p () () #f ())
(lithium/cathode-current 0 real #f 0)
(lithium/anode-current 0 real #f 0)
(lithium/soc 0 real #f 0)
(lithium/capacity 0 real #f 0)
(lithium/cathode-cs-stoi-100 10.56 real #f 10.56)
(lithium/anode-cs-stoi-100 10.88 real #f 10.88)
(lithium/cathode-cs-stoi-0 22.37 real #f 22.37)
(lithium/anode-cs-stoi-0 2.029 real #f 2.029)
(lithium/electrolyte-c-init 1.2 real #f 1.2)
(lithium/anode-c-init 10.88 real #f 10.88)
(lithium/cathode-c-init 10.56 real #f 10.56)
(lithium/anode-cmax 16.1 real #f 16.1)
(lithium/cathode-cmax 23.9 real #f 23.9)
(lithium/linearized-bv-rate? #f boolean #f #f)
(lithium/anode-alpha-c 0.5 real #f 0.5)
(lithium/cathode-alpha-c 0.5 real #f 0.5)
(lithium/anode-alpha-a 0.5 real #f 0.5)
(lithium/cathode-alpha-a 0.5 real #f 0.5)
(lithium/anode-alpha3 0.5 real #f 0.5)
(lithium/cathode-alpha3 0.5 real #f 0.5)
(lithium/anode-alpha2 0.5 real #f 0.5)
(lithium/cathode-alpha2 0.5 real #f 0.5)
(lithium/anode-alpha1 0.5 real #f 0.5)
(lithium/cathode-alpha1 0.5 real #f 0.5)
(lithium/anode-i0 4.52e-08 real #f 4.52e-08)
(lithium/cathode-i0 2.07e-08 real #f 2.07e-08)
(lithium/phi-zeroflux-wall-list () integer-list #f ())
(lithium/cathode-wall-list () integer-list #f ())
(lithium/anode-wall-list () integer-list #f ())
(lithium/negative-zone-list () integer-list #f ())
(lithium/electrolyte-zone-list () integer-list #f ())
(lithium/positive-zone-list () integer-list #f ())
(lithium/echem-heat? #f boolean #f #f)
(lithium/expert? #f boolean #f #f)
(lithium/skew-grid? #t boolean #f #t)
(lithium/hsrc-urf 1 real #f 1)
(lithium/explicit-urf 1 real #f 1)
(lithium-faradaic/pseudo-relax 0.1 real #f 0.1)
(lithium-faradaic/relax 0.1 real #f 0.1)
(lithium/secondary-bc-gradient? #t boolean #f #t)
(lithium/secondary-gradient? #t boolean #f #t)
(lithium/long-diffusion? #t boolean #f #t)
(lithium/pseudo-time-scale-factor 1 real #f 1)
(lithium/pseudo-implicit-relax 1 real #f 1)
(lithium/pseudo-specific? #f boolean #f #f)
(lithium/pseudo-relax 0.75 real #f 0.75)
(lithium/pseudo-cycle-type 3 integer #f 3)
(lithium/explicit-relax 1 real #f 1)
(lithium/residual-tolerance 1e-06 real #f 1e-06)
(lithium/iter-tolerance 0.05 real #f 0.05)
(lithium/max-iter 5 integer #f 5)
(lithium/default 0 real #f 0)
(lithium/patch 0 real #f 0)
(lithium/amg-stabilization 0 integer #f 0)
(lithium/amg-method 0 integer #f 0)
(lithium/cycle-type 3 integer #f 3)
(lithium/amg-beta 0.7 real #f 0.7)
(lithium/amg-alpha 0.1 real #f 0.1)
(lithium/scheme 1 integer #f 1)
(lithium/solve? #t boolean #f #t)
(lithium/relax 1 real #f 1)
(lithium/boundary-flux-relax 1 real #f 1)
(lithium/explicit-potential-coupling? #t boolean #f #t)
(potential-2/default 0 real #f 0)
(potential-2/pseudo-cycle-type 3 integer #f 3)
(potential-2/amg-stabilization 0 integer #f 0)
(potential-2/amg-method 0 integer #f 0)
(potential-2/cycle-type 3 integer #f 3)
(potential-2/amg-beta 0.7 real #f 0.7)
(potential-2/amg-alpha 0.1 real #f 0.1)
(potential-2/pseudo-time-scale-factor 1 real #f 1)
(potential-2/pseudo-implicit-relax 1 real #f 1)
(potential-2/debug-info? #f boolean #f #f)
(potential-2/secondary-bc-gradient? #t boolean #f #t)
(potential-2/secondary-gradient? #t boolean #f #t)
(potential-2/long-diffusion? #t boolean #f #t)
(potential-2/iter-tolerance 0.05 real #f 0.05)
(potential-2/residual-tolerance 1e-06 real #f 1e-06)
(potential-2/max-iter 5 integer #f 5)
(potential-2/explicit-urf 1 real #f 1)
(potential-2/pseudo-relax 0.75 real #f 0.75)
(potential-2/relax 1 real #f 1)
(potential-2/scheme 1 integer #f 1)
(potential-2/pseudo-specific? #f boolean #f #f)
(potential-2/solve? #t boolean #f #t)
(potential/kinsol-analytical-jacobian? #f boolean #f #f)
(potential/react-diff-balance-method 1 integer #f 1)
(potential/enable-react-diff-balance? #f boolean #f #f)
(potential/bv-rate-yi-min 9.999999999999999e-21 real #f 9.999999999999999e-21)
(potential/max-exp-term 500 real #f 500)
(potential/debug-info? #f boolean #f #f)
(potential/faradaic-smooth-number 0 integer #f 0)
(potential/li-migration-source? #t boolean #f #t)
(potential/allow-multiphase-model? #t boolean #f #t)
(potential/expert? #f boolean #f #f)
(potential/correction-method 0 integer #f 0)
(potential/corrosion-source-in-continuity? #f boolean #f #f)
(potential/species-migration? #f boolean #f #f)
(potential/joule-heat? #f boolean #f #f)
(potential/skew-grid? #t boolean #f #t)
(potential/hsrc-urf 1 real #f 1)
(potential/max-migration-yi 0.1 real #f 0.1)
(potential/current-newton-tol 0.0001 real #f 0.0001)
(potential/explicit-urf 1 real #f 1)
(potential-faradaic/pseudo-relax 0.1 real #f 0.1)
(potential-faradaic/relax 0.1 real #f 0.1)
(potential/secondary-bc-gradient? #t boolean #f #t)
(potential/secondary-gradient? #t boolean #f #t)
(potential/long-diffusion? #t boolean #f #t)
(potential/pseudo-time-scale-factor 1 real #f 1)
(potential/pseudo-implicit-relax 1 real #f 1)
(potential/pseudo-specific? #f boolean #f #f)
(potential/pseudo-relax 0.75 real #f 0.75)
(potential/pseudo-cycle-type 3 integer #f 3)
(potential/explicit-relax 1 real #f 1)
(potential/residual-tolerance 1e-06 real #f 1e-06)
(potential/iter-tolerance 0.05 real #f 0.05)
(potential/max-iter 5 integer #f 5)
(potential/default 0 real #f 0)
(potential/patch 0 real #f 0)
(potential/amg-stabilization 0 integer #f 0)
(potential/amg-method 0 integer #f 0)
(potential/cycle-type 3 integer #f 3)
(potential/amg-beta 0.7 real #f 0.7)
(potential/amg-alpha 0.1 real #f 0.1)
(potential/scheme 1 integer #f 1)
(potential/solve? #t boolean #f #t)
(potential/relax 1 real #f 1)
(fmu/localvariable-input-value () real-list #f ())
(fmu/localvariable-input () string-list #f ())
(fmu/selected-local-obj () list #f ())
(fmu/selected-localvariable () string-list #f ())
(fmu/available-localvariable () string-list #f ())
(fmu/selected-para-obj () list #f ())
(fmu/selected-parameters () string-list #f ())
(fmu/available-parameters () string-list #f ())
(fmu/localvariables () list #f ())
(fmu/parameters () list #f ())
(fmu/serializedstatesize 0 integer #f 0)
(fmu/input-hook? #f boolean #f #f)
(fmu/output-hook () string-list #f ())
(fmu/input-hook () string-list #f ())
(fmu/output-value () real-list #f ())
(fmu/input-value () real-list #f ())
(fmu/output-unit () string-list #f ())
(fmu/input-unit () string-list #f ())
(fmu/local-name () string-list #f ())
(fmu/para-name () string-list #f ())
(fmu/output-name () string-list #f ())
(fmu/input-name () string-list #f ())
(fmu/num-local 0 integer #f 0)
(fmu/num-para 0 integer #f 0)
(fmu/num-output 0 integer #f 0)
(fmu/num-input 0 integer #f 0)
(fmu/restart? #f boolean #f #f)
(fmu/instantiate? #f boolean #f #f)
(fmu/file-available #f boolean #f #f)
(fmu/linked? #f boolean #f #f)
(fmu/enable? #f boolean #f #f)
(fmu/filename "" string #f "")
(species/mech-in-case? #f boolean #f #f)
(species/chemkin-imp-mech-data (0 0 0 0 0) integer-list #f (0 0 0 0 0))
(species/encrypted-io-hdf5? #f boolean #f #f)
(species/unselected-monitored-sp-list () symbol-list #f ())
(species/unselected-boundary-sp-list () symbol-list #f ())
(species/sundials-adaptive-preconditioner? #f boolean #f #f)
(species/sundials-ida-nonlinearconvcoef 0.33 real #f 0.33)
(species/sundials-cvode-nonlinearconvcoef 0.01 real #f 0.01)
(species/sundials-verbosity 0 integer #f 0)
(species/sundials-max-steps 5000 integer #f 5000)
(species/sundials-lapack? #t boolean #f #t)
(species/sundials-solver 0 integer #f 0)
(species/sundials? #t boolean #f #t)
(species/use-chemkin/dac-species ("co" "ho2") string-list #f ("co" "ho2"))
(species/use-chemkin-dac/tol 0.001 real #f 0.001)
(species/use-chemkin-dac? #f boolean #f #f)
(species/use-chemkin-dcc/verbosity? #f boolean #f #f)
(species/use-chemkin-dcc/react-threshold 1e-09 real #f 1e-09)
(species/use-chemkin-dcc/min-cluster 0 real #f 0)
(species/use-chemkin-dcc/max-cluster 10 real #f 10)
(species/use-chemkin-dcc/delta-phi 0.05 real #f 0.05)
(species/use-chemkin-dcc/delta-temp 10 real #f 10)
(species/use-chemkin-dcc? #f boolean #f #f)
(species/enable-dcc-ui? #t boolean #f #t)
(species/use-chemkin-ode-solver/rtol 1e-05 real #f 1e-05)
(species/use-chemkin-ode-solver/atol 1e-10 real #f 1e-10)
(species/use-chemkin-ode-solver? #f boolean #f #f)
(enable-beta-finite-rate-chem? #f boolean #f #f)
(species/chemkin-import/surfacethermal-in-mechanismfile? #f boolean #f #f)
(species/chemkin-import/transport-in-mechanismfile? #f boolean #f #f)
(species/chemkin-import/gasthermal-in-mechanismfile? #f boolean #f #f)
(species/chemkin-import/store-files? #t boolean #f #t)
(species/chemkin-import/scheme-verbosity? #f boolean #f #f)
(species/chemkin-import/reset-mixture-properties? #f boolean #f #f)
(species/fluent-is-chemkin-license? #t boolean #f #t)
(species/load-chemkin-verbosity 0 integer #f 0)
(species/auto-load-chemkin? #t boolean #f #t)
(chemkin-names ("chemkin-import" "" "" "" "") string-list #f ("chemkin-import" "" "" "" ""))
(species/isat-const-press-fac 0.01 real #f 0.01)
(species/isat-pruning 1 integer #f 1)
(species/isat-file "C:\Users\COM\AppData\Local\Temp\WB_COM_11008_2\wbnew_files\dp0\FFF\MECH\FFF" string #f "")
(species/isat-dtref 0.001 real #f 0.001)
(species/isat-verbosity 0 integer #f 0)
(species/isat-stomby 100 real #f 100)
(species/isat-errtol 0.001 real #f 0.001)
(species/isat-ntree 1 integer #f 1)
(species/isat? #t boolean #f #t)
(species/ode-linear-solver-type 0 integer #f 0)
(species/ode-rtol 1e-05 real #f 1e-05)
(species/ode-atol 1e-10 real #f 1e-10)
(species/edc-min-time-step 1e-06 real #f 1e-06)
(species/edc-apmax-fac 0.5 real #f 0.5)
(species/edc-reactor-type 1 integer #f 1)
(species/edc-niter 1 integer #f 1)
(species/edc-geom-mean-tmix? #f boolean #f #f)
(species/edc-pasr-model 1 integer #f 1)
(species/edc-d 4 real #f 4)
(species/edc-cmix 0.25 real #f 0.25)
(species/edc-global 1 real #f 1)
(species/edc-model 0 integer #f 0)
(species/edc-gamma-limit 0.7548776659999999 real #f 0.7548776659999999)
(species/edc-c2 0.40825 real #f 0.40825)
(species/edc-c1 2.1377 real #f 2.1377)
(species/edc? #f boolean #f #f)
(species/thermal-diffusion? #f boolean #f #f)
(species/multicomponent-diffusion? #f boolean #f #f)
(species/inlet-diffusion? #f boolean #f #f)
(species/surface-heat-react? #t boolean #f #t)
(species/multiphase-stiff-chemistry? #f boolean #f #f)
(species/stiff-solver-domain-id (-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1) integer-list #f (-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1))
(species/stiff-domain-name "" string #f "")
(species/stiff-domain-id -1 integer #f -1)
(species/sct 0.7 real #f 0.7)
(reactions/relax 1 real #f 1)
(reactions/solve? #t boolean #f #t)
(species/reaction-model "finite-rate" string #f "finite-rate")
(species/wall-flux-source-term-linearization? #t boolean #f #t)
(species/set-urf-together? #f boolean #f #f)
(species/set-disc-together? #f boolean #f #f)
(species/spe-limiters? #f boolean #f #f)
(species/clip-check-on? #f boolean #f #f)
(species/clip-check-val 1e-06 real #f 1e-06)
(species/bound-yi-source? #t boolean #f #t)
(species/secondary-bc-gradient? #t boolean #f #t)
(species/secondary-gradient? #t boolean #f #t)
(species/default (0) real-list #f (0))
(species/patch (0) real-list #f (0))
(species/amg-stabilization (0) integer-list #f (0))
(species/amg-method (0) integer-list #f (0))
(species/cycle-type (0) integer-list #f (0))
(species/amg-beta (0.7) real-list #f (0.7))
(species/amg-alpha (0.1) real-list #f (0.1))
(species/max-iter (5) integer-list #f (5))
(species/residual-tolerance (0.0001) real-list #f (0.0001))
(species/iter-tolerance (0.05) real-list #f (0.05))
(species/explicit-relax (1) real-list #f (1))
(species/scheme (1) integer-list #f (1))
(species/relax (1) real-list #f (1))
(species/solve? (#t) boolean-list #f (#t))
(enthalpy/cq-extended-stencil? #t boolean #f #t)
(enthalpy/min-cq 0.2 real #f 0.2)
(enthalpy/blending-factor 0 real #f 0)
(enthalpy/blending-method 0 integer #f 0)
(enthalpy/fluid/secondary-gradient? #t boolean #f #t)
(enthalpy/solid/secondary-gradient? #t boolean #f #t)
(enthalpy/diag-dom-mode 0 integer #f 0)
(enthalpy/diag-dom-urf 0.95 real #f 0.95)
(temperature/damped-noise-verbosity? #f boolean #f #f)
(enthalpy/damped-noise-verbosity? #f boolean #f #f)
(enthalpy/damped-noise-marking-udm? #f boolean #f #f)
(enthalpy/damped-noise-marking 0 integer #f 0)
(enthalpy/damped-noise-mode 0 integer #f 0)
(enthalpy/damped-noise? #f boolean #f #f)
(enthalpy/diag-dom-verbosity? #f boolean #f #f)
(enthalpy/diag-dom? #f boolean #f #f)
(enthalpy/cpld-wall-ext-walls? #f boolean #f #f)
(enthalpy/cpld-wall-enhanced-lsq? #f boolean #f #f)
(enthalpy/cpld-wall-lsq-zonal-grad? #f boolean #f #f)
(enthalpy/cpld-wall-smoother #f boolean #f #f)
(enthalpy/cpld-wall-explicit-relax 0.5 real #f 0.5)
(enthalpy/diff-static-h? #f boolean #f #f)
(enthalpy/default 0 real energy 0)
(enthalpy/patch 0 real energy 0)
(enthalpy/amg-stabilization 0 integer #f 0)
(enthalpy/amg-method 0 integer #f 0)
(enthalpy/cycle-type 3 integer #f 3)
(enthalpy/amg-beta 0.7 real #f 0.7)
(enthalpy/amg-alpha 0.1 real #f 0.1)
(enthalpy/max-iter 5 integer #f 5)
(enthalpy/residual-tolerance 0.0001 real #f 0.0001)
(enthalpy/iter-tolerance 0.05 real #f 0.05)
(enthalpy/explicit-relax 1 real #f 1)
(enthalpy/scheme 1 integer #f 1)
(enthalpy/relax 1 real #f 1)
(enthalpy/solve? #t boolean #f #t)
(solar/reset-irrad-values? #f boolean #f #f)
(solar/support-multilevel-mesh? #t boolean #f #t)
(solar/thread-number-fixed 1 integer #f 1)
(solar/thread-number-method 0 integer #f 0)
(solar/r150-default? #t boolean #f #t)
(solar/enable-trans-udf? #f boolean #f #f)
(solar/conservative-form? #t boolean #f #t)
(solar/verbosity 0 integer #f 0)
(solar/shadow-tol 1e-06 real #f 1e-06)
(solar/filename "" string #f "")
(solar/binary? #t boolean #f #t)
(solar/frequency-data 0 integer #f 0)
(sol/apply-do-bc? #f boolean #f #f)
(sol/load-on-fluid? #f boolean #f #f)
(sol/iterations 10 integer #f 10)
(sol/max_level 7 integer #f 7)
(sol/initial-time? #f boolean #f #f)
(sol/method-trans 0 integer #f 0)
(sol/nrel? #f boolean #f #f)
(sol/cx 0.2 real #f 0.2)
(sol/sin_altitude 0.2 real #f 0.2)
(sol/rho_g 0.2 real #f 0.2)
(sol/sunshine_frac 1 real #f 1)
(sol/scat_frac 1 real #f 1)
(sol/diffuse-entry-angle? #f boolean #f #f)
(sol/diff_angle 1.0471974 real angle 1.0471974)
(sol/method-diff_int () () #f ())
(sol/method-intensity () () #f ())
(sol/diff_int 200 real #f 200)
(sol/intensity 1423 real #f 1423)
(sol/dir-from-calc #t boolean #f #t)
(sol/sun_z 1 real #f 1)
(sol/sun_y 0 real #f 0)
(sol/sun_x 0 real #f 0)
(sol/split 0.5 real #f 0.5)
(solpos/longitude -1.4770719 real angle -1.4770719)
(solpos/latitude 0.23823741 real angle 0.23823741)
(solpos/timezone -5 real #f -5)
(solpos/minute 0 integer #f 0)
(solpos/hour 13 integer #f 13)
(solpos/month 6 integer #f 6)
(solpos/day 21 integer #f 21)
(sol/east_z 0 real #f 0)
(sol/east_y 0 real #f 0)
(sol/east_x 1 real #f 1)
(sol/north_z 0 real #f 0)
(sol/north_y 1 real #f 1)
(sol/north_x 0 real #f 0)
(solar/fill-host-domain/exclude-method 0 integer #f 0)
(solar/apply-full-irrad? #f boolean #f #f)
(solar/update-solve? #f boolean #f #f)
(solar/solve? #f boolean #f #f)
(disco/solar? #f boolean #f #f)
(wsggm/emiss-table/method 0 integer #f 0)
(disco/exclude-np-solid-zone? #t boolean #f #t)
(disco/diffuse-source-ext-new? #f boolean #f #f)
(disco/second-order-boundary? #t boolean #f #t)
(disco/second-order-interior? #t boolean #f #t)
(disco/beta-max 2 real #f 2)
(disco/coupled-verbosity 0 integer #f 0)
(hybrid/do-rosseland? #f boolean #f #f)
(disco/amg-tolerance 1e-06 real #f 1e-06)
(disco/n-gray-gas () () #f ())
(disco/band-names () string-list #f ())
(disco/bands () () #f ())
(disco/inner-iterations 2 integer #f 2)
(disco/reduced-storage? #f boolean #f #f)
(disco/pixel/nphi 1 integer #f 1)
(disco/pixel/ntheta 1 integer #f 1)
(disco/interior-pixels? #f boolean #f #f)
(disco/nphi 2 integer #f 2)
(disco/ntheta 2 integer #f 2)
(disco/type "finite-volume" string #f "finite-volume")
(disco/participating-medium? #t boolean #f #t)
(disco/blending-factor 1 real #f 1)
(disco/scheme 0 integer #f 0)
(disco/amg-min-cycles 2 integer #f 2)
(disco/amg-stabilization 0 integer #f 0)
(disco/amg-method 0 integer #f 0)
(disco/cycle-type 0 integer #f 0)
(disco/amg-beta 0.7 real #f 0.7)
(disco/amg-alpha 0.1 real #f 0.1)
(disco/relax-face-correction 1 real #f 1)
(disco/fast-second-order? #f boolean #f #f)
(disco/relax-source 0.5 real #f 0.5)
(disco/relax-explicit 1 real #f 1)
(disco/relax 1 real #f 1)
(disco/solve-method 0 integer #f 0)
(disco/partially-specular-method 2 integer #f 2)
(disco/partially-specular? #t boolean #f #t)
(disco/partial-solve? #f boolean #f #f)
(rad/trans-n-iter 0 integer #f 0)
(rad/time-interval 1 real time 1)
(rad/trans-method "time-step" string #f "time-step")
(rad/porosity-based-scaling-rad-source? #f boolean #f #f)
(rad/wsggm-r150? #f boolean #f #f)
(rad/porosity-based-scaling? #f boolean #f #f)
(rad/enable-wsggm-cell-based? #f boolean #f #f)
(rad/enable-multi-band? #f boolean #f #f)
(rad/enable-multi-fluid? #f boolean #f #f)
(rad/enable-soot-effect-non-wsggm? #f boolean #f #f)
(disco/full-solve? #t boolean #f #t)
(disco/coupled-fine-iter 5 integer #f 5)
(disco/coupled? #f boolean #f #f)
(disco/new-do-init? #f boolean #f #f)
(disco/solve? #t boolean #f #t)
(g/default 0 real heat-flux 0)
(g/patch 0 real heat-flux 0)
(p1/amg-stabilization 0 integer #f 0)
(p1/amg-method 0 integer #f 0)
(p1/cycle-type 0 integer #f 0)
(p1/amg-beta 0.7 real #f 0.7)
(p1/amg-alpha 0.1 real #f 0.1)
(p1/relax 1 real #f 1)
(p1/solve? #t boolean #f #t)
(rosseland/method 1 integer #f 1)
(cci-inited? #f boolean #f #f)
(mpcci-update-interval 1 integer #f 1)
(mpcci-ansys? #f boolean #f #f)
(mpcci-fluent? #f boolean #f #f)
(mpcci? #f boolean #f #f)
(morpher/boundingcp-1dcount 5 integer #f 5)
(morpher/boundingcp-tolerance 0.2 real #f 0.2)
(morpher/enable-surface-cp? #t boolean #f #t)
(morpher/deformation-settings () () #f ())
(morpher/parametric-motion () () #f ())
(morpher/z-coords-custom () real-list #f ())
(morpher/y-coords-custom () real-list #f ())
(morpher/x-coords-custom () real-list #f ())
(morpher/rbf-function 1 integer #f 1)
(morpher/new-method? #f boolean #f #f)
(morpher/newuoa/rhobeg 0.5 real #f 0.5)
(morpher/check-dupl-scfac-file #t boolean #f #t)
(morpher/ids-for-moved-nodes () () #f ())
(morpher/xinit-for-moved-nodes () () #f ())
(morpher/reduce-bb-factor 0.8 real #f 0.8)
(morpher/enlarge-bb-factor 1.25 real #f 1.25)
(morpher/objfn-defn () () #f ())
(morpher/tolerance 1e-06 real #f 1e-06)
(morpher/def-constraint/residual 1e-06 real #f 1e-06)
(morpher/def-constraint/iterations 1000 integer #f 1000)
(morpher/def-constraint/fixed () integer-list #f ())
(morpher/def-constraint/free (-999) integer-list #f (-999))
(morpher/monitor/opt-hist/filename "opt-history" string #f "opt-history")
(morpher/monitor/opt-hist/write? #f boolean #f #f)
(morpher/monitor/opt-hist/window -1 integer #f -1)
(morpher/monitor/opt-hist/plot? #f boolean #f #f)
(morpher/optimizer-history () () #f ())
(morpher/objective-function-history () real-list #f ())
(morpher/end-commands "" string #f "")
(morpher/init-commands "" string #f "")
(morpher/local-reference? #f boolean #f #f)
(morpher/display-deformed-cp? #f boolean #f #f)
(morpher/objective-function 10000000000 real #f 10000000000)
(morpher/z-coords-old () real-list #f ())
(morpher/y-coords-old () real-list #f ())
(morpher/x-coords-old () real-list #f ())
(morpher/z-coords () real-list #f ())
(morpher/y-coords () real-list #f ())
(morpher/x-coords () real-list #f ())
(morpher/n-blocks 1 integer #f 1)
(morpher/n-zeta 4 integer #f 4)
(morpher/n-eta 4 integer #f 4)
(morpher/n-xi 4 integer #f 4)
(morpher/parameter-bounds () () #f ())
(morpher/parameters (0) real-list #f (0))
(morpher/save-snapshot (0 5 "") () #f (0 5 ""))
(morpher/interrupt-fluent-iterations #f boolean #f #f)
(morpher/disable-mesh-check? #f boolean #f #f)
(morpher/mesh-quality (#t 0.05) () #f (#t 0.05))
(morpher/optimizer-parameters ("none" 500 0 0 0.0001 1000 2 #t) () #f ("none" 500 0 0 0.0001 1000 2 #t))
(morpher/deformation-parameters () () #f ())
(morpher/deformation-regions () () #f ())
(morpher/constraints-valid-check? #t boolean #f #t)
(morpher/bernstein-new-eval? #t boolean #f #t)
(morpher/verbosity 0 integer #f 0)
(morpher/untested-features? #f boolean #f #f)
(morpher/on? #f boolean #f #f)
(fensapice/ice/disp? #f boolean #f #f)
(fensapice/ice/swimsol? #f boolean #f #f)
(fensapice/drop/vapor? #f boolean #f #f)
(fensapice/drop/crystal? #f boolean #f #f)
(fensapice/drop/droplet? #f boolean #f #f)
(fensapice/flow/soln-eid? #f boolean #f #f)
(fensapice/flow/soln-shear? #f boolean #f #f)
(fensapice/flow/soln-turb? #f boolean #f #f)
(fensapice/flow/soln-hflux? #f boolean #f #f)
(fensapice/flow/soln-fluent? #f boolean #f #f)
(fensapice/flow/soln? #f boolean #f #f)
(fensapice/flow/on? #f boolean #f #f)
(fensapice/solution-loaded? #f boolean #f #f)
(fensapice/flaero? #f boolean #f #f)
(fensapice/flicing? #f boolean #f #f)
(fensapice/on? #f boolean #f #f)
(adjoint/solution-exists? #f boolean #f #f)
(adjoint/custom-turb-model/on? #f boolean #f #f)
(adjoint/on? #f boolean #f #f)
(s2s/clusters-per-chunk 100 integer #f 100)
(s2s/binary-file? #t boolean #f #t)
(s2s/nci-aggl? #f boolean #f #f)
(s2s/ipc-method? #f boolean #f #f)
(s2s/file-io? #f boolean #f #f)
(s2s/new-encapsulation? #t boolean #f #t)
(s2s/max-inner-encap-iter 25 integer #f 25)
(s2s/c2c-max-node 100 integer #f 100)
(s2s/relabel-before-writing? #t boolean #f #t)
(s2s/new-2d-cluster? #f boolean #f #f)
(s2s/split-two-fpsc? #t boolean #f #t)
(s2s/max-interior-angle 190 real #f 190)
(s2s/cluster-check-quality? #f boolean #f #f)
(s2s/cluster-quality-parameter 2.5 real #f 2.5)
(s2s/verbosity 0 integer #f 0)
(s2s/cluster-iter 6 integer #f 6)
(s2s/c2c-cluster-algo 2 integer #f 2)
(s2s/f2f-cluster-algo 3 integer #f 3)
(s2s/cluster-algo 2 integer #f 2)
(s2s/max-distance 0 real #f 0)
(s2s/auto-distance 0 real #f 0)
(s2s/openmp-raytracing? #f boolean #f #f)
(s2s/max-fpsc 10 integer #f 10)
(s2s/auto-fpsc? #f boolean #f #f)
(s2s/partial-enclosure-emissivity 1 real #f 1)
(s2s/partial-enclosure-t 300 real temperature 300)
(s2s/fast-parallel? #t boolean #f #t)
(s2s/new-algo? #t boolean #f #t)
(s2s/face-clustering? #t boolean #f #t)
(s2s/viewfactor-crf? #t boolean #f #t)
(s2s/viewfactor-compression? #t boolean #f #t)
(s2s/partial-enclosure? #f boolean #f #f)
(s2s/vf-loadbalance -1 integer #f -1)
(s2s/vf-use-bsp 0 integer #f 0)
(s2s/vf-sampling-method 0 integer #f 0)
(s2s/vf-partial-asink 1 real #f 1)
(s2s/vf-partial-enclosure 0 integer #f 0)
(s2s/vf-simple-enclosure 0 integer #f 0)
(s2s/vf-hemi-separation 5 real #f 5)
(s2s/vf-hemi-subdivide 5 integer #f 5)
(s2s/vf-hemi-resolution 10 integer #f 10)
(s2s/vf-smoothing-tol 1e-06 real #f 1e-06)
(s2s/vf-smoothing-iter 100 integer #f 100)
(s2s/vf-smoothing 0 integer #f 0)
(s2s/vf-method 2 integer #f 2)
(s2s/vf-type 1 integer #f 1)
(s2s/cluster-method 0 integer #f 0)
(s2s/glob-file "" string #f "")
(s2s/split-angle 20 real #f 20)
(s2s/flow-face-glob-size 1 integer #f 1)
(s2s/face-glob-size 0 integer #f 0)
(s2s/glob-size 1 integer #f 1)
(s2s/tol 0.001 real #f 0.001)
(s2s/n-sweeps 5 integer #f 5)
(s2s/n-iter 10 integer #f 10)
(s2s/nc-r145? #f boolean #f #f)
(s2s/nc-poly-new? #t boolean #f #t)
(s2s/skip-encapsulation? #t boolean #f #t)
(s2s/enable-encapsulation? #f boolean #f #f)
(fan3d/verbosity 0 integer #f 0)
(fan3d/fancurve-file () list #f ())
(fan3d/enable-fan? #t boolean #f #t)
(vfr/partial-enclosure-emissivity 1 real #f 1)
(vfr/partial-enclosure-t 300 real temperature 300)
(vfr/partial-enclosure? #f boolean #f #f)
(dtrm/solve? #t boolean #f #t)
(dtrm/rays-file "" string #f "")
(dtrm/face-glob-size 1 integer #f 1)
(dtrm/glob-size 1 integer #f 1)
(dtrm/tol 0.001 real #f 0.001)
(dtrm/n-sweeps 5 integer #f 5)
(dtrm/n-iter 10 integer #f 10)
(agglomerate/surface/uncluster-complex-polygons? #f boolean #f #f)
(agglomerate/surface/feature-angle 30 real #f 30)
(agglomerate/surface/pairwise? #t boolean #f #t)
(agglomerate/surface? #f boolean #f #f)
(montecarlo/multiphase/mixture-temp-max-iter 100 integer #f 100)
(montecarlo/load-balancing-option 1 integer #f 1)
(montecarlo/ext-diff-src? #t boolean #f #t)
(montecarlo/mc-cpvc 1 integer #f 1)
(montecarlo/tref 0 real #f 0)
(montecarlo/mapped-interface? #f boolean #f #f)
(montecarlo/agglomeration-level 1 integer #f 1)
(montecarlo/old-agglomeration? #f boolean #f #f)
(montecarlo/agglomerate? #f boolean #f #f)
(montecarlo/work-unit 200 integer #f 200)
(montecarlo/diag-level 0 integer #f 0)
(montecarlo/bc-changed? #f boolean #f #f)
(montecarlo/mc-urf 0.5 real #f 0.5)
(montecarlo/mms-size 1 real #f 1)
(montecarlo/histories 100000 integer #f 100000)
(montecarlo/n-iter 10 integer #f 10)
(ccs/dir/recompute? #f boolean #f #f)
(ccs/dir/post-proc-udmi? #f boolean #f #f)
(ccs/dir/residual-tolerance 1e-06 real #f 1e-06)
(ccs/dir/niter 20 integer #f 20)
(ccs/dir/skew-grid? #f boolean #f #f)
(ccs/dir/amg-stabilization 0 integer #f 0)
(ccs/dir/amg-method 0 integer #f 0)
(ccs/dir/cycle-type 0 integer #f 0)
(ccs/dir/amg-beta 0.7 real #f 0.7)
(ccs/dir/amg-alpha 0.1 real #f 0.1)
(ccs/dir/explicit-relax 1 real #f 1)
(ccs/dir/relax 1 real #f 1)
(rad/apply-mphase-surface-ref-factor? #f boolean #f #f)
(rad/enable-netm? #f boolean #f #f)
(rad/n-time-update 1 integer #f 1)
(enable-beta-rad-features? #f boolean #f #f)
(diffusivity/ortho-sym-linearization-factor 0.1 real #f 0.1)
(diffusivity/ortho-sym-linearization? #t boolean #f #t)
(temperature/anisotropy/coeff/wall 1 integer #f 1)
(temperature/anisotropy/coeff/interior 1 integer #f 1)
(temperature/anisotropy-version 1 integer #f 1)
(temperature/limit-recon-grad-t? #f boolean #f #f)
(energy/porous-long-diffusion? #f boolean #f #f)
(temperature/solid-patankar? #t boolean #f #t)
(temperature/enable-potential-energy? #f boolean #f #f)
(temperature/enable-caf-gui? #f boolean #f #f)
(temperature/2nd-source-bc-relax 0.5 real #f 0.5)
(temperature/explicit-relax? #f boolean #f #f)
(temperature/shell-secondary-gradient? #t boolean #f #t)
(temperature/secondary-gradient? #t boolean #f #t)
(temperature/skew-grid? #f boolean #f #f)
(temperature/limit-on-walls? #t boolean #f #t)
(temperature/max-limit 5000 real temperature 5000)
(temperature/min-limit 1 real temperature 1)
(temperature/default 300 real temperature 300)
(temperature/patch 0 real temperature 0)
(temperature/amg-stabilization 0 integer #f 0)
(temperature/amg-method 0 integer #f 0)
(temperature/cycle-type 3 integer #f 3)
(temperature/amg-beta 0.7 real #f 0.7)
(temperature/amg-alpha 0.1 real #f 0.1)
(temperature/max-iter 5 integer #f 5)
(temperature/residual-tolerance 0.0001 real #f 0.0001)
(temperature/iter-tolerance 0.05 real #f 0.05)
(temperature/explicit-relax 1 real #f 1)
(temperature/scheme 1 integer #f 1)
(temperature/relax 1 real #f 1)
(temperature/solve? #t boolean #f #t)
(energy/swip/filtered? #t boolean #f #t)
(energy/swip/limited? #t boolean #f #t)
(energy/swip/c2 1e-05 real #f 1e-05)
(energy/swip/c1 -20 real #f -20)
(energy/freeze-solid-temp? #f boolean #f #f)
(energy/inertial-force-work? #f boolean #f #f)
(energy/inlet-diffusion? #t boolean #f #t)
(energy/user-definable-cp? #f boolean #f #f)
(energy/kinetic? #f boolean #f #f)
(energy/rom-builder? #f boolean #f #f)
(energy/pressure-work? #f boolean #f #f)
(energy/conservative-form? #t boolean #f #t)
(energy/species-diffusion? #t boolean #f #t)
(low-pressure-slip? #f boolean #f #f)
(viscous-energy-dissipation? #f boolean #f #f)
(continuity/surf-spe-source? #f boolean #f #f)
(time_factor_site 1 real #f 1)
(porous/new-inf 1 integer #f 1)
(porous/physical-velocity-form? #f boolean #f #f)
(model/roughness-colebrook? #t boolean #f #t)
(jump/orient-zone-based-on-flow? #t boolean #f #t)
(sigma-sbc 5.670374e-08 real stefan-boltzmann-constant 5.670374e-08)
(compress/enhanced-numerics/mp/limit-fp? #f boolean #f #f)
(compress/enhanced-numerics/limit-fp? #t boolean #f #t)
(compress/enhanced-numerics/cavitation/limit-p? #f boolean #f #f)
(compress/enhanced-numerics/compr-liquid/limit-p? #f boolean #f #f)
(compress/enhanced-numerics/ssd/mach-limit 0.0001 real #f 0.0001)
(compress/enhanced-numerics/ssd/use-normal-mach? #f boolean #f #f)
(compress/enhanced-numerics/ssd/enable? #f boolean #f #f)
(compress/enhanced-numerics/limit-t/positivity-rate 0.1 real #f 0.1)
(compress/enhanced-numerics/limit-t/enable? #t boolean #f #t)
(compress/enhanced-numerics/limit-p/positivity-rate 0.1 real #f 0.1)
(compress/enhanced-numerics/limit-p/enable? #t boolean #f #t)
(compress/enhanced-numerics/enthalpy/correct-p? #f boolean #f #f)
(compress/enhanced-numerics/enthalpy/correct-ke? #t boolean #f #t)
(compress/enhanced-numerics/pp-dd-select 2 integer #f 2)
(compress/enhanced-numerics/nita/on? #f boolean #f #f)
(compress/enhanced-numerics/on? #t boolean #f #t)
(mdm-press-work-correct? #t boolean #f #t)
(roe/time/include-kp-u? #t boolean #f #t)
(roe/include-kp-u? #f boolean #f #f)
(roe/fp-correct? #t boolean #f #t)
(pbs/density-derivative 0 integer #f 0)
(pbs/fsm/iterative? #f boolean #f #f)
(pbs/all-fluxes? #f boolean #f #f)
(pbs/p-recon 1 integer #f 1)
(pbs/flux-auto-select? #t boolean #f #t)
(pbs/flux-index 1 integer #f 0)
(pbs/flux-type 0 integer #f 0)
(impedance/map () list #f ())
(impedance/verbosity 0 integer #f 0)
(impedance/phase-mode "zero" string #f "zero")
(impedance/fn/model "" string #f "")
(impedance/fn/data "" string #f "")
(impedance/fn/absorption "" string #f "")
(impedance/fn/reflection "" string #f "")
(impedance/fn/impedance "" string #f "")
(impedance/input/type "impedance" string #f "impedance")
(impedance/residue-tolerance 1e-06 real #f 1e-06)
(impedance/tolerance 1e-06 real #f 1e-06)
(impedance/niter 20 integer #f 20)
(momentum/pbns/delta-form? #t boolean #f #t)
(pressure/pressure-correction-linearization-scheme 0 integer #f 0)
(pressure/face-interpolation-second-order-scheme-t 0 integer #f 0)
(pressure/reference-choice 2 integer #f 2)
(pressure/reference/method 1 integer #f 1)
(pressure/limit-pc-grad? #f boolean #f #f)
(pressure/body-force-weighted/new? #f boolean #f #f)
(pressure/fixed-velocity-zero-pressure? #t boolean #f #t)
(pressure/presto/limit-pcorgrad? #f boolean #f #f)
(pressure/presto/limit-pgrad? #f boolean #f #f)
(pressure/flow-init-type -1 integer #f -1)
(pressure/presto-at-startup? #t boolean #f #t)
(pressure/mdm-unsteady-rc? #f boolean #f #f)
(pressure/unsteady-rc-sc? #f boolean #f #f)
(pressure/mp/unsteady-rc? #f boolean #f #f)
(pressure/conv-relax? #f boolean #f #f)
(pressure/unsteady-rc 1 integer #f 1)
(pressure/mp-dissipation? #t boolean #f #t)
(pressure/mp/dissipation? #t boolean #f #t)
(pressure/porous-zone-presto-dissipation? #t boolean #f #t)
(pressure/dissipation? #f boolean #f #f)
(pressure/frozen-flux? #f boolean #f #f)
(pressure/presto-unsteady 1 integer #f 1)
(pressure/unsteady? #t boolean #f #t)
(pressure/ho-rc1-on-porous? #f boolean #f #f)
(pressure/ho-rc-disable? #f boolean #f #f)
(pressure/ho-rc-scheme 2 integer #f 1)
(pressure/presto-low-order? #f boolean #f #f)
(pressure/extrapolate/face-p-based? #f boolean #f #f)
(pressure/extrapolate-inlet/presto-on-vinlet? #t boolean #f #t)
(pressure/extrapolate-inlet? #t boolean #f #t)
(pressure/extrapolate-all? #f boolean #f #f)
(pressure/mp-4th-order-dissipation 1 integer #f 1)
(body-force-includes-axi-visc-term? #t boolean #f #t)
(mp/pcor-coef-sym? #t boolean #f #t)
(mp/body-force-face-p 0 integer #f 0)
(pressure/ap-weighted-face-pressure-1st 0 integer #f 0)
(pressure/ap-weighted-face-pressure-piso 0 integer #f 0)
(pressure/ap-weighted-face-pressure 0 integer #f 0)
(pressure/cpl-omega-flux 1 real #f 1)
(pressure/cpl-courant-number 200 real #f 200)
(pressure/cpl-expl-omega-p 0.75 real #f 0.75)
(pressure/cpl-expl-omega-v 0.75 real #f 0.75)
(pressure/coupled-vof-delta-form? #t boolean #f #t)
(pressure-coupled-mp/update-pgrad? #t boolean #f #t)
(pressure-coupled-mp/couple-mass-transfer? #t boolean #f #t)
(pressure-coupled/implicit-dissipation-bndr? #t boolean #f #t)
(pressure-coupled/implicit-dissipation? #t boolean #f #t)
(pressure-coupled/update-pgrad? #t boolean #f #t)
(pressure-coupled/update-deriv? #t boolean #f #t)
(pressure-coupled-steady/pressure/explicit-relax 0.5 real #f 0.5)
(pressure-coupled-steady/mom/explicit-relax 0.5 real #f 0.5)
(pressure-coupled/pressure/explicit-relax 0.75 real #f 0.75)
(pressure-coupled/mom/explicit-relax 0.75 real #f 0.75)
(pressure-coupled/courant-number 200 real #f 200)
(pressure-coupled/restart? #f boolean #f #f)
(pressure-coupled/amg-stabilization 0 integer #f 0)
(pressure-coupled/amg-method 0 integer #f 0)
(pressure-coupled/cycle-type 3 integer #f 3)
(pressure-coupled/amg-beta 0.7 real #f 0.7)
(pressure-coupled/amg-alpha 0.1 real #f 0.1)
(pressure/coupled-nonlinear? #f boolean #f #f)
(pressure/coupled-pressure-delta-form? #t boolean #f #t)
(pressure/coupled-dissipation 0 integer #f 0)
(pressure/coupled-available? #f boolean #f #f)
(pressure/max-iter 10 integer #f 10)
(pressure/residual-tolerance 0.0001 real #f 0.0001)
(pressure/iter-tolerance 0.25 real #f 0.25)
(pressure/max-limit 50000000000 real pressure 50000000000)
(pressure/min-limit 1 real pressure 1)
(pressure/default 0 real pressure 0)
(pressure/patch 0 real pressure 0)
(pressure/amg-stabilization 0 integer #f 0)
(pressure/amg-method 0 integer #f 0)
(pressure/cycle-type 1 integer #f 1)
(pressure/amg-beta 0.7 real #f 0.7)
(pressure/amg-alpha 0.1 real #f 0.1)
(reversed-flow/pressure-bc? #f boolean #f #f)
(cavitation/pressure-bc? #t boolean #f #t)
(cavitation/enhancement? #t boolean #f #t)
(compress-p/relax? #f boolean #f #f)
(pressure-correction/relax-enhance 0.1 real #f 0.1)
(pressure-correction/relax-drdp 1 real #f 1)
(pressure-correction/relax 0.7 real #f 0.7)
(pressure/explicit-relax 1 real #f 1)
(pressure/relax 0.3 real #f 0.3)
(pressure/scheme 12 integer #f 12)
(time/bso/primitive/pb/first-order? #f boolean #f #f)
(time/bso/primitive/react/first-order? #f boolean #f #f)
(time/bso/primitive/energy/first-order? #f boolean #f #f)
(time/bso/primitive/first-order? #f boolean #f #f)
(time/second-order/bounded/ph-compute? #t boolean #f #t)
(time/second-order/limit-gradient? #f boolean #f #f)
(time/second-order/bounded/include-react-vars? #f boolean #f #f)
(time/second-order/mass-imbalance-treatment? #t boolean #f #t)
(time/second-order/bounded/vof-linearized? #t boolean #f #t)
(time/second-order/bounded/energy-option 1 integer #f 1)
(time/second-order/bounded/pb-option 1 integer #f 1)
(time/second-order/bounded/react-option 2 integer #f 2)
(time/second-order/bounded/turb-option 2 integer #f 2)
(time/second-order/bounded/vof-option 2 integer #f 2)
(time/second-order/bounded/rho-option 2 integer #f 2)
(time/second-order/bounded/conservative-var-form? #f boolean #f #f)
(time/second-order/bounded/primitive-var-alt-form? #f boolean #f #f)
(time/second-order/bounded/generic? #f boolean #f #f)
(2nd-order-time/blend-factor 1.5 real #f 1.5)
(2nd-order-time/bounded? #t boolean #f #t)
(time/adaptive/mp/verbosity? #f boolean #f #f)
(time/adaptive/mp/minimization-method 0 integer #f 0)
(time/adaptive/mp/advective/blending-factor 0.5 real #f 0.5)
(time/adaptive/mp-physical/acoustic? #t boolean #f #t)
(time/adaptive/mp-physical/gravity? #t boolean #f #t)
(time/adaptive/mp-physical/surf-tens? #t boolean #f #t)
(time/adaptive/mp-physical/viscous? #f boolean #f #f)
(time/adaptive/mp-physical-scales? #f boolean #f #f)
(time/adaptive/mp-interfacial? #t boolean #f #t)
(time/adaptive/mesh-courant-number 1 real #f 1)
(time/adaptive/mesh-motion-constraint? #f boolean #f #f)
(time/previous-formulation/fixed? #f boolean #f #f)
(time/enhanced-second-order-in-time? #t boolean #f #t)
(time/enhanced-scheme-with-dbns? #f boolean #f #f)
(time/second-order-verbosity 0 integer #f 0)
(time/parameters/hybrid-coefficient 1 real #f 1)
(time/parameters/hybrid-scheme-startup? #t boolean #f #t)
(time/parameters/hybrid-scheme 0 integer #f 0)
(time/parameters/previous-scheme 0 integer #f 0)
(time/parameters/current-scheme 0 integer #f 0)
(time/parameters/dt-ratio-previous 1 real #f 1)
(time/parameters/dt-ratio 1 real #f 1)
(time/parameters/dt-ratio-type 0 integer #f 0)
(time/parameters/grid-flux-method 0 integer #f 0)
(time/adaptive/compute-dt-aft-mesh-adapt? #t boolean #f #t)
(time/adaptive/max-fixed-timesteps 1 integer #f 1)
(time/adaptive/update-intervals 1 integer #f 1)
(time/adaptive/dt-factor-max 2 real #f 2)
(time/adaptive/dt-factor-min 0.5 real #f 0.5)
(time/adaptive/dt-max 1 real time 1)
(time/adaptive/dt-min 1e-08 real time 1e-08)
(time/adaptive/dt-initial 1e-06 real time 1e-06)
(time/adaptive/desired-cfl 1 real #f 1)
(time/adaptive/controlled? #t boolean #f #t)
(time/adaptive/cfl-type 4 integer #f 4)
(time/adaptive/dt-scheme 0 integer #f 0)
(time/adaptive/dt-method 0 integer #f 0)
(time/adaptive/expert? #f boolean #f #f)
(time/adaptive/dt-modes-overwrited? #t boolean #f #f)
(time/adaptive/dt-timestep-based? #t boolean #f #t)
(time/adaptive/dt-max-status -100000000 real time -100000000)
(time/adaptive/dt-min-status 100000000 real time 100000000)
(time/incremental-time 1000 real time 0)
(time/extrapolation-scheme 3 integer #f 3)
(time/discretization-method 0 integer #f 0)
(time/total-timesteps 0 integer #f 0)
(time/duration-option 0 integer #f 0)
(time/solution-status? #f boolean #f #f)
(z-velocity/default 0 real velocity 0)
(y-velocity/default 0 real velocity 0)
(x-velocity/default 0 real velocity 0)
(z-velocity/patch 0 real velocity 0)
(y-velocity/patch 0 real velocity 0)
(x-velocity/patch 0 real velocity 0)
(z-mom/amg-stabilization 0 integer #f 0)
(z-mom/amg-method 0 integer #f 0)
(z-mom/cycle-type 0 integer #f 0)
(z-mom/amg-beta 0.7 real #f 0.7)
(z-mom/amg-alpha 0.1 real #f 0.1)
(y-mom/amg-stabilization 0 integer #f 0)
(y-mom/amg-method 0 integer #f 0)
(y-mom/cycle-type 0 integer #f 0)
(y-mom/amg-beta 0.7 real #f 0.7)
(y-mom/amg-alpha 0.1 real #f 0.1)
(x-mom/amg-stabilization 0 integer #f 0)
(x-mom/amg-method 0 integer #f 0)
(x-mom/cycle-type 0 integer #f 0)
(x-mom/amg-beta 0.7 real #f 0.7)
(x-mom/amg-alpha 0.1 real #f 0.1)
(mom/rscale-bug? #t boolean #f #t)
(mom/shear-option 2 integer #f 2)
(mom/symmetry-option 2 integer #f 2)
(mom/inertial-force? #t boolean #f #t)
(mom/update-derivatives-after-flow-solve? #t boolean #f #t)
(mom/bcd/beta-mom 0.2 real #f 0.2)
(mom/extrapolate-outflow? #f boolean #f #f)
(mom/rot-cyclic-explicit? #t boolean #f #t)
(mom/from-flux? #t boolean #f #t)
(mom/nita/update-derivatives? #t boolean #f #t)
(mom/nita-mass-flux-update? #t boolean #f #t)
(mom/nita-flux-update? #t boolean #f #t)
(mom/update-flux-subiter? #f boolean #f #f)
(mom/max-iter 5 integer #f 5)
(mom/residual-tolerance 0.0001 real #f 0.0001)
(mom/iter-tolerance 0.05 real #f 0.05)
(mom/scheme 1 integer #f 1)
(mom/explicit-relax 1 real #f 1)
(mom/relax 0.7 real #f 0.7)
(explicit-relaxation? #f boolean #f #f)
(implicit-relaxation? #t boolean #f #t)
(spectral/plfd/fcdata-list (0) integer-list #f (0))
(spectral/plfd/init-a0-from-soln? #t boolean #f #t)
(spectral/plfd/nper 1 integer #f 1)
(spectral/plfd/bfreq-list () real-list #f ())
(spectral/plfd/tstep (0 0) integer-list #f (0 0))
(spectral/plfd/complete (#f #f #f) boolean-list #f (#f #f #f))
(spectral/plfd/sigma-list () real-list #f ())
(spectral/plfd/relax 1 real #f 1)
(spectral/plfd/blade-flutter? #f boolean #f #f)
(spectral/plfd/incl-extra? #f boolean #f #f)
(spectral/plfd/number-of-harmonics 10 integer #f 10)
(spectral/plfd/freq-sel-alg 1 integer #f 1)
(spectral/plfd/default-number-of-harmonics? #t boolean #f #t)
(spectral/bxfd/fcdata-list (0) integer-list #f (0))
(spectral/bxfd/init-a0-from-soln? #t boolean #f #t)
(spectral/bxfd/nper 0 integer #f 0)
(spectral/bxfd/bfreq-list () real-list #f ())
(spectral/bxfd/tstep (0 0) integer-list #f (0 0))
(spectral/bxfd/complete (#f #f #f) boolean-list #f (#f #f #f))
(spectral/bxfd/sigma-list () real-list #f ())
(spectral/bxfd/relax 1 real #f 1)
(spectral/bxfd/blade-flutter? #f boolean #f #f)
(spectral/bxfd/incl-extra? #f boolean #f #f)
(spectral/bxfd/all-walls? #t boolean #f #t)
(spectral/bxfd/all-cells? #t boolean #f #t)
(spectral/gpfd/fcdata-list (0) integer-list #f (0))
(spectral/gpfd/init-a0-from-soln? #t boolean #f #t)
(spectral/gpfd/nper 0 integer #f 0)
(spectral/gpfd/bfreq-list () real-list #f ())
(spectral/gpfd/tstep (0 0) integer-list #f (0 0))
(spectral/gpfd/complete (#f #f #f) boolean-list #f (#f #f #f))
(spectral/gpfd/sigma-list () real-list #f ())
(spectral/gpfd/relax 1 real #f 1)
(spectral/gpfd/blade-flutter? #f boolean #f #f)
(spectral/gpfd/incl-extra? #f boolean #f #f)
(spectral/gpfd/number-of-harmonics 10 integer #f 10)
(spectral/gpfd/freq-sel-alg 1 integer #f 1)
(spectral/gpfd/default-number-of-harmonics? #t boolean #f #t)
(spectral/gpfd/first-4-harms? #t boolean #f #t)
(spectral/post-row-list () () #f ())
(spectral/phaselag-row-list () () #f ())
(spectral/phaselag-czone-vec () () #f ())
(spectral/phaselag-turbk-positivity? #t boolean #f #t)
(spectral/freq-dupl-tolerance 1e-06 real #f 1e-06)
(enable-fourier-coefficients? #f boolean #f #f)
(nita/flux/extrapolate? #f boolean #f #f)
(nita/mp/piso/coupling? #f boolean #f #f)
(nita/single-phase/hybrid/option 0 integer #f 0)
(nita/mp/hybrid/option 1 integer #f 1)
(nita/hybrid/event/vel-limit 1000 real #f 1000)
(nita/hybrid/event/cfl-max 25 real #f 25)
(nita/hybrid/event/cfl-type 0 integer #f 0)
(nita/hybrid/event/outer-iter 5 integer #f 5)
(nita/hybrid/instability-detector? #f boolean #f #f)
(nita/hybrid/start-up/outer-iter 5 integer #f 5)
(nita/hybrid/start-up/time-steps 5 integer #f 5)
(nita/hybrid/mom/impl-relax? #f boolean #f #f)
(nita/hybrid? #f boolean #f #f)
(nita/mom/implicit-relax 0.95 real #f 0.95)
(nita/verbosity 0 integer #f 0)
(nita/aggressive? #f boolean #f #f)
(nita/piso/coupling? #f boolean #f #f)
(nita/residual-tolerance/iter 1 integer #f 1)
(nita/outer-iter 1 integer #f 1)
(noniterative-max-iter 1 integer #f 1)
(noniterative-time-advance? #f boolean #f #f)
(old-unsteady-flux? #t boolean #f #t)
(solve-absolute-velocities? #t boolean #f #t)
(correct-velocity? #t boolean #f #t)
(flow/solve? #t boolean #f #t)
(local-residual/delphi/phase-specific? #t boolean #f #t)
(local-residual/ap/eps-diff 1e-12 real #f 1e-12)
(local-residual/ap/eps-conv 1e-06 real #f 1e-06)
(local-residual/delphi/eps 1e-30 real #f 1e-30)
(local-residual/mode 3 integer #f 3)
(local-residual/scale/method 0 integer #f 0)
(residuals/consistent-scaling? #t boolean #f #t)
(residuals/continuity-scaling-method 0 integer #f 0)
(residuals/enhanced-continuity-residual? #t boolean #f #t)
(residuals/normalize? #f boolean () #f)
(residuals/compute-local? #f boolean #f #f)
(residuals/scale? #t boolean #f #t)
(residuals/local? #f boolean #f #f)
(residuals/need-caching? #f boolean #f #f)
(residuals/wb-enforce-min-niter? #t boolean #f #t)
(residuals/wb-iteration-count 0 integer #f 0)
(residuals/wb-min-number-of-iterations 2 integer #f 2)
(residuals/unrelax? #f boolean #f #f)
(residuals/resid-buffer-interval 1 integer #f 1)
(residuals/convergence-criterion-type 0 integer () 0)
(residuals/debug? #f boolean #f #f)
(residuals/n-display 1000 integer #f 1000)
(residuals/n-save 1000 integer #f 1000)
(residuals/plot? #t boolean #f #t)
(residuals/print? #t boolean #f #t)
(residuals/n-maximize-norms 5 integer #f 5)
(residuals/settings-transient #f () #f #f)
(residuals/settings #f () #f #f)
(patch/cpld/bc-zone? #t boolean #f #t)
(patch/m1-m2? #t boolean #f #t)
(patch/vof/recon? #t boolean #f #t)
(patch-relative? #t boolean #f #t)
(init-relative? #t boolean #f #t)
(profile/circ-ave/average-method 0 integer #f 0)
(profile/circ-ave/viability-check? #t boolean #f #t)
(profile/circ-ave/max-bands 20 integer #f 20)
(profile/circ-ave/variable-width-bands? #t boolean #f #t)
(profile/circ-ave/enable? #f boolean #f #f)
(profile/morphing? #f boolean #f #f)
(profile/update-interval 1 integer #f 1)
(udrg/libname "" string #f "")
(real-gas/mixturefilename "" string #f "")
(real-gas/datafiles-list () string-list #f ())
(real-gas/datanames-list () string-list #f ())
(real-gas/fluidname "" string #f "")
(real-gas/dataname "" string #f "")
(real-gas/custom-refprop? #f boolean #f #f)
(real-gas/datadir "" string #f "")
(real-gas/libname "" string #f "")
(real-gas/libdir "" string #f "")
(real-gas-per-phase #f boolean #f #f)
(real-gas-compressible-turbulence? #t boolean #f #t)
(liquid-energy-diffusion? #t boolean #f #t)
(vapor-phase? #t boolean #f #t)
(user-real-gas-multi-component? #f boolean #f #f)
(user-real-gas? #f boolean #f #f)
(real-gas-multi-component? #f boolean #f #f)
(real-gas? #f boolean #f #f)
(structure/nonconformal/solidsolid/target-weight-tolerance 1e-10 real #f 1e-10)
(structure/nonconformal/solidsolid/on-edge-tolerance 0.001 real #f 0.001)
(structure/nonconformal/solidsolid/newton-raphson-tolerance 1e-12 real #f 1e-12)
(structure/nonconformal/solidsolid/area-tolerance 1e-05 real #f 1e-05)
(structure/nonconformal/solidsolid/normal-tolerance 0.01 real #f 0.01)
(structure/nonconformal/solidsolid/algorithm 0 integer #f 0)
(structure/nonconformal/solidsolid/method 0 integer #f 0)
(structure/nonconformal/solidsolid/penalty 1000 real #f 1000)
(structure/nonconformal/area-tolerance 1e-05 real #f 1e-05)
(structure/nonconformal/normal-tolerance 0.01 real #f 0.01)
(structure/enhanced-strain? #f boolean #f #f)
(structure/thermal-effects? #f boolean #f #f)
(structure/damping-gamma 0 real #f 0)
(structure/enable-rotation-bf? #t boolean #f #t)
(structure/enable-gravity-bf? #t boolean #f #t)
(structure/viscous-fsi-force? #f boolean #f #f)
(structure/explicit-fsi-force? #f boolean #f #f)
(structure/number-of-steady-steps 1 integer #f 1)
(structure/steady-2way-fsi? #f boolean #f #f)
(structure/include-pop? #f boolean #f #f)
(structure/solve? #t boolean #f #t)
(structure/thickness 1 real #f 1)
(udf/wall-nodal-force-fcn "none" string #f "none")
(udf/wall-nodal-disp-fcn "none" string #f "none")
(udf/use-auto-recompile? #t boolean #f #t)
(udf/enable-on-gpu? #f boolean #f #f)
(udf/reacting-channel-bc-fcn ("none") string-list #f ("none"))
(udf/reacting-channel-solver-fcn "none" string #f "none")
(udf/pdf/pdf-table-name "none" string #f "none")
(udf/matrix-solver-fcn "none" string #f "none")
(udf/pb-coalescence-rate-name "Luo Model" string #f "Luo Model")
(udf/pb-break-up-rate-pdf-name "parabolic" string #f "parabolic")
(udf/pb-break-up-rate-freq-name "Luo Model" string #f "Luo Model")
(udf/pb-break-up-rate-name "Luo Model" string #f "Luo Model")
(udf/pb-growth-rate-name "constant" string #f "constant")
(udf/pb-nucleation-rate-name "constant" string #f "constant")
(udf/deltat-fcn "none" string #f "none")
(udf/emission-factor-fcn "none" string #f "none")
(udf/solar-trans "none" string #f "none")
(udf/dom/specular-reflectivity "none" string #f "none")
(udf/dom/diffuse-reflectivity "none" string #f "none")
(udf/dom/bc-adjust "none" string #f "none")
(udf/dom/source-fcn "none" string #f "none")
(udf/viscous/sbes-bf-fcn "none" string #f "none")
(udf/viscous/kw-geko-bf-fcn "built-in" string #f "built-in")
(udf/viscous/kw-geko-cmix-fcn "compute-from-csep" string #f "compute-from-csep")
(udf/viscous/kw-geko-cnw-fcn "constant" string #f "constant")
(udf/viscous/kw-geko-csep-fcn "constant" string #f "constant")
(udf/viscous/corner-flow-correction-ccorner-fcn "constant" string #f "constant")
(udf/viscous/curvature-correction-ccurv-fcn "constant" string #f "constant")
(udf/viscous/trans-alg-rec-cor-fcn "built-in" string #f "built-in")
(udf/viscous/trans-geomrgh-fcn "constant" string #f "constant")
(udf/viscous/trans-retheta-t-fcn "none" string #f "none")
(udf/viscous/trans-retheta-c-fcn "none" string #f "none")
(udf/viscous/trans-flength-fcn "none" string #f "none")
(udf/viscous/wall-law-fcn "none" string #f "none")
(udf/viscous/schmidt-fcn "none" string #f "none")
(udf/viscous/prt-t-wall-fcn "none" string #f "none")
(udf/viscous/prt-t-fcn "none" string #f "none")
(udf/viscous/prt-o-fcn "none" string #f "none")
(udf/viscous/prt-d-fcn "none" string #f "none")
(udf/viscous/prt-k-fcn "none" string #f "none")
(udf/viscous/mu-t-fcn "none" string #f "none")
(udf/cphi-fcn "none" string #f "none")
(udf/perforated-cd-fcn "none" string #f "none")
(udf/edc-mdot-fcn "none" string #f "none")
(udf/edc-scales-fcn "none" string #f "none")
(udf/chem-step-fcn "none" string #f "none")
(udf/cav-rate-fcn "none" string #f "none")
(udf/soot-mom-rates-fcn "none" string #f "none")
(udf/soot-mass-rates-fcn "none" string #f "none")
(udf/soot-nucleation-rates-fcn "none" string #f "none")
(udf/soot-oxidation-rate-fcn "none" string #f "none")
(udf/soot-precursor-fcn "none" string #f "none")
(udf/hg-rate-fcn "none" string #f "none")
(udf/sox-rate-fcn "none" string #f "none")
(udf/nox-rate-fcn "none" string #f "none")
(udf/flamelet-parameters-fcn "none" string #f "none")
(udf/execute-at-exit-fcns () string-list #f ())
(udf/write-hdf-data-fcns () string-list #f ())
(udf/read-hdf-data-fcns () string-list #f ())
(udf/write-hdf-case-fcns () string-list #f ())
(udf/read-hdf-case-fcns () string-list #f ())
(udf/write-data-fcns () string-list #f ())
(udf/read-data-fcns () string-list #f ())
(udf/write-case-fcns () string-list #f ())
(udf/read-case-fcns () string-list #f ())
(udf/drift-diam-fcn "constant" string #f "constant")
(udf/splashing-distribution-fcn "none" string #f "none")
(udf/film-regime-fcn "none" string #f "none")
(udf/impingement-fcn "none" string #f "none")
(udf/dpm/n-reals 0 integer #f 0)
(udf/dpm/interpolation-fcn "none" string #f "none")
(udf/dpm/timestep-fcn "none" string #f "none")
(udf/dpm/spray-collide-fcn "none" string #f "none")
(udf/dpm/scalar-fcn "none" string #f "none")
(udf/dpm/erosion-fcn "none" string #f "none")
(udf/dpm/output-fcn "none" string #f "none")
(udf/dpm/source-fcn "none" string #f "none")
(udf/dpm/body-force-fcn "none" string #f "none")
(udf/dpm/drag-fcn "none" string #f "none")
(udf/thickened-flame-model-fcn "none" string #f "none")
(udf/ignite-src-fcn "none" string #f "none")
(udf/spark-geom-fcn ("none") string-list #f ("none"))
(udf/g-eqn-src-fcn "none" string #f "none")
(udf/ecfm-spark-src-fcn ("none") string-list #f ("none"))
(udf/ecfm-src-fcn "none" string #f "none")
(udf/heat-flux-fcn "none" string #f "none")
(udf/trb-prmx-src-fcn "none" string #f "none")
(udf/battery/eload-profile-fcn "none" string #f "none")
(udf/battery/cluster-fcn "none" string #f "none")
(udf/battery/newman-swell-layer-n-fcn "none" string #f "none")
(udf/battery/newman-prop-porn-fcn "none" string #f "none")
(udf/battery/newman-prop-porp-fcn "none" string #f "none")
(udf/battery/newman-prop-dlnfdlnce-fcn "none" string #f "none")
(udf/battery/newman-prop-tplus-fcn "none" string #f "none")
(udf/battery/newman-prop-dsp-fcn "none" string #f "none")
(udf/battery/newman-prop-dsn-fcn "none" string #f "none")
(udf/battery/newman-prop-de-fcn "none" string #f "none")
(udf/battery/newman-prop-kappa-fcn "none" string #f "none")
(udf/battery/newman-postprocessing-fcn "none" string #f "none")
(udf/battery/newman-bv-rate-fcn "none" string #f "none")
(udf/battery/newman-ocp-fcn "none" string #f "none")
(udf/battery/entropic-heat-fcn "none" string #f "none")
(udf/battery/echem-model-fcn "none" string #f "none")
(udf/battery/parameter-ecm-fcn "none" string #f "none")
(udf/battery/parameter-ntgk-fcn "none" string #f "none")
(udf/customize-addon-udf-name "none" string #f "none")
(udf/customize-addon-library? #f boolean #f #f)
(udf/ec-rate-fcn "none" string #f "none")
(udf/pr-rate-fcn "none" string #f "none")
(udf/sr-rate-fcn "none" string #f "none")
(udf/vr-rate-fcn "none" string #f "none")
(udf/relax-to-equilibrium-fcn "none" string #f "none")
(udf/net-reaction-rate-fcn "none" string #f "none")
(udf/execute-at-end-fcns () string-list #f ())
(udf/adjust-fcns () string-list #f ())
(udf/init-fcns () string-list #f ())
(udf/compile/files () list #f ())
(udf/define-macros () string-list #f ())
(udf/para-funcs () string-list #f ())
(udf/para-macros () string-list #f ())
(udf/c-files () string-list #f ())
(udf/libname () string-list #f ())
(udf/listing? #f boolean #f #f)
(udf/stack-size 10000 integer #f 10000)
(udf/cpp-command "cpp" string #f "cpp")
(udf/use-contrib-cpp? #f boolean #f #f)
(udf/filename "" string #f "")
(udf/use-scons-windows? #f boolean #f #f)
(udf/use-clang-if-vc-not-available? #t boolean #f #t)
(user-fan/program-name "fan-model" string #f "fan-model")
(user-fan/update-interval 10 integer #f 10)
(user-fan/profile-points 20 integer #f 20)
(user-fan/fan-zones () thread-list #f ())
(title "" string #f "")
(mesh/garbage-collect/optimized-comm? #t boolean #f #t)
(enhanced-pmn-report/max-cells-report 100 integer #f 100)
(enhanced-pmn-report/enable? #f boolean #f #f)
(pmn/mark-once-per-dt? #t boolean #f #t)
(pmn/limits-offset 0.01 real #f 0.01)
(pmn/cfl-jump 5 real #f 5)
(pmn/cfl-limit 10 real #f 10)
(pmn/velocity-limit 500 real #f 500)
(pmn/mark-cfl-jump? #f boolean #f #f)
(pmn/mark-cfl-limit? #f boolean #f #f)
(pmn/mark-vel-limit? #f boolean #f #f)
(pmn/mark-viscosity-limit? #f boolean #f #f)
(pmn/mark-primary-limits? #t boolean #f #t)
(pmn/solution-based-treatment? #f boolean #f #f)
(mesh/bad/orthogonal-enhancing-metrics/verbosity 0 integer #f 0)
(mesh/bad/orthogonal-enhancing-metrics/use-old-centroid? #f boolean #f #f)
(mesh/bad/orthogonal-enhancing-metrics/quality-change-threshold 0.1 real #f 0.1)
(mesh/bad/orthogonal-enhancing-metrics/quality-threshold 0.1 real #f 0.1)
(mesh/bad/orthogonal-enhancing-metrics/exponent-p 1 real #f 1)
(mesh/bad/orthogonal-enhancing-metrics/max-area-normalization? #f boolean #f #f)
(mesh/bad/orthogonal-enhancing-metrics? #f boolean #f #f)
(mesh/bad/combined-quality-imbalance/quality-no-mass-imbalance? #f boolean #f #f)
(mesh/bad/combined-quality-imbalance/mass-imbalance-no-quality? #f boolean #f #f)
(mesh/bad/combined-quality-imbalance/marking-frequency 5 integer #f 5)
(mesh/bad/combined-quality-imbalance/verbosity 0 integer #f 0)
(mesh/bad/combined-quality-imbalance/threshold 0.2 real #f 0.2)
(mesh/bad/combined-quality-imbalance/eps 1e-10 real #f 1e-10)
(mesh/bad/combined-quality-imbalance/available? #f boolean #f #f)
(mesh/bad/exterior-cell-treatment 1 integer #f 1)
(mesh/bad/tmp-enhanced-pmn? #f boolean #f #f)
(mesh/bad/tmp-cfl-limit 1 real #f 1)
(mesh/bad/tmp-limit-cfl? #f boolean #f #f)
(mesh/dual-cell-zones () () #f ())
(mesh/bad/repair-sltn/use-bndry-info? #t boolean #f #t)
(mesh/bad/repair-sltn/disable-cont-eqn? #t boolean #f #t)
(mesh/bad/repair-sltn/disable-coupled? #f boolean #f #f)
(mesh/bad/repair-sltn-mode 0 integer #f 0)
(mesh/bad/hinv/enable-hg-postprocessing? #f boolean #f #f)
(mesh/bad/repair-grad/hinv/debug-var-enum-name "SV_P" string #f "SV_P")
(mesh/bad/repair-grad/hinv/verbosity 0 integer #f 0)
(mesh/bad/repair-grad/hinv/det-threshold 0.001 real #f 0.001)
(mesh/bad/repair-grad/hinv/limit-h-norm? #f boolean #f #f)
(mesh/bad/repair-grad/hinv/use-viscous-h-for-rg? #f boolean #f #f)
(mesh/bad/repair-grad/hinv/skip-rg? #f boolean #f #f)
(mesh/bad/repair/vof/option 1 integer #f 1)
(mesh/bad/repair/vof-specific? #t boolean #f #t)
(mesh/bad/vof/repair-grad-avg? #f boolean #f #f)
(mesh/bad/repair-grad-flag-based? #t boolean #f #t)
(mesh/bad/repair-grad/repair-unlimited? #f boolean #f #f)
(mesh/bad/repair-grad/tmp-dont-repair-viscous? #f boolean #f #f)
(mesh/bad/repair-grad-mode 2 integer #f 2)
(mesh/bad/add_pmn_neighbors? #t boolean #f #t)
(mesh/bad/boundary-layer-optimized? #t boolean #f #t)
(mesh/bad/grad-quality/threshold 0.2 real #f 0.2)
(mesh/bad/grad-quality/sigmoid-beta-coefficient 5 real #f 5)
(mesh/bad/grad-quality/available? #f boolean #f #f)
(mesh/bad/verbosity 0 integer #f 0)
(mesh/bad/smoothing/encapsulate? #f boolean #f #f)
(mesh/bad/smoothing/parallel-balance-poor-cells #f boolean #f #f)
(mesh/bad/smoothing/number-of-node-iterations 50 integer #f 50)
(mesh/bad/percent-worst-to-improve 0.1 real #f 0.1)
(mesh/bad/allow-local-polyhedra-conversion? #t boolean #f #t)
(mesh/bad/allow-boundary-node-improvement? #f boolean #f #f)
(mesh/bad/use-tweaked-centroids? #t boolean #f #t)
(mesh/bad/aspect-ratio-threshold 50 real #f 50)
(mesh/bad/min-orthogonal-quality 0.05 real #f 0.05)
(mesh/bad/quality/warp-factor 1 real #f 1)
(mesh/bad/quality/method 0 integer #f 0)
(mesh/bad/enable-quality-based-treatment? #f boolean #f #f)
(mesh/bad/repair-small-faces 1 integer #f 1)
(mesh/bad/repair-hex-block-singularity? #t boolean #f #t)
(mesh/bad/min-face-area-factor 1e-08 real #f 1e-08)
(mesh/bad/repair-performed? #f boolean #f #f)
(mesh/bad/enable-bad-quality-treatment? #t boolean #f #t)
(mesh/inflation-factor 2 integer #f 2)
(mesh/interpolate-in-time? #f boolean #f #t)
(mesh/slit/opt-slitting? #t boolean #f #t)
(mesh/slit-misoriented-face-zone? #f boolean #f #f)
(mesh/slitting-with-extended-thread? #f boolean #f #f)
(mesh/slit/merge-junction-nodes? #t boolean #f #t)
(mesh/slit/ensure-continuous-node-id? #t boolean #f #t)
(mesh/slit/ensure-continuous-face-id? #t boolean #f #t)
(mesh/compact-memory-block-size 15000000 integer #f 15000000)
(mesh/compact-memory-block-limit 0.5 real #f 0.5)
(mesh/verbosity 1 integer #f 1)
(mesh/check/verbosity 0 integer #f 0)
(mesh/check/watertight-tolerance 1 real #f 1)
(mesh/check/quality-across-periodics? #t boolean #f #t)
(mesh/check/failed? #f boolean #f #f)
(mesh/check/before-solve? #f boolean #f #f)
(mesh/check/use-stored-metrics? #t boolean #f #t)
(mesh/optional-grid-check-performed? #f boolean #f #f)
(mesh/grid-check-performed? #f boolean #f #f)
(mesh/show-periodic-shadow-threads? #t boolean #f #t)
(gocart/morph/diffusion-law 0 integer #f 0)
(gocart/morph/residues 1e-08 real #f 1e-08)
(gocart/morph/solver 2 integer #f 2)
(gocart/morph/method 3 integer #f 3)
(gocart/prism/nlayer 1 integer #f 1)
(gocart/prism/rate 1 real #f 1)
(gocart/prism/height 0 real length 0)
(gocart/prism/aspect-ratio 1 real #f 1)
(gocart/prism/type 1 integer #f 1)
(gocart/prisms? #f boolean #f #f)
(gocart/prism/abort-on-morph-failure? #f boolean #f #f)
(gocart/prism/morph-frequency 5 integer #f 5)
(gocart/prism/delete-interior-faces? #t boolean #f #t)
(gocart/enable-prisms? #t boolean #f #t)
(gocart/extract-as-polyhedra? #t boolean #f #t)
(gocart/thin-cut-edge-zones 2 integer #f 2)
(gocart/post-improve-level 1 integer #f 1)
(gocart/perturb-init? #t boolean #f #t)
(gocart/remesh-manual? #f boolean #f #f)
(gocart/remesh-interval 0 integer #f 0)
(gocart/max-cell-aspect-ratio 0 real #f 0)
(gocart/min-orthogonal-quality 0.05 real #f 0.05)
(gocart/max-cell-skew 0.95 real #f 0.95)
(gocart/ignore-warnings? #f boolean #f #f)
(gocart/sf-growth-rate 1.2 real #f 1.2)
(gocart/sf-max-size 0.01 real #f 0.01)
(gocart/sf-min-size 0.0001 real #f 0.0001)
(polyhedra/verbosity 0 integer #f 0)
(polyhedra/hanging-nodes/correct-periodic-node-order? #t boolean #f #t)
(polyhedra/skewness/max-cell-skew 0.9 real #f 0.9)
(polyhedra/smoothing/quality-threshold 0.2 real #f 0.2)
(polyhedra/smoothing/no-iter-bad 10 integer #f 10)
(polyhedra/smoothing/relax-all 0.1 real #f 0.1)
(polyhedra/smoothing/no-iter-all 3 integer #f 3)
(polyhedra/dual/migrate-and-reorder-warning? #t boolean #f #t)
(polyhedra/dual/migrate-and-reorder-after-conversion? #f boolean #f #f)
(polyhedra/dual/make-periodics-on-tolerance? #t boolean #f #t)
(polyhedra/dual/preserve-interior-thread-ids () integer-list #f ())
(polyhedra/dual/preserve-interior-pattern "" string #f "")
(polyhedra/dual/aspect-ratio-threshold 5 real #f 5)
(polyhedra/dual/project-face-nodes? #f boolean #f #f)
(polyhedra/dual/check-correct-periodics? #t boolean #f #t)
(polyhedra/dual/volume-ratio/tet-pyramid-ratio 8 real #f 8)
(polyhedra/dual/volume-ratio/threshold 512 real #f 512)
(polyhedra/dual/detect-volume-ratio? #t boolean #f #t)
(polyhedra/dual/wide-gaps/angle 160 real #f 160)
(polyhedra/dual/wide-gaps/volume-ratio-threshold 20 real #f 20)
(polyhedra/dual/detect-wide-gaps? #t boolean #f #t)
(polyhedra/dual/detect-gaps? #t boolean #f #t)
(polyhedra/dual/back-to-back-wall-angle 3 real #f 3)
(polyhedra/dual/skew-decompose-threshold -1 real #f -1)
(polyhedra/dual/skew-boundary-angle -1 real #f -1)
(polyhedra/dual/skew-threshold -1 real #f -1)
(polyhedra/dual/boundary-edge-feature-angle -1 real #f -1)
(polyhedra/dual/always-check-lower-feature-angle? #f boolean #f #f)
(polyhedra/dual/feature-angle-table ((6000 1) (1000 3) (25 5) (15 10) (10 15) (8 20) (-1 30)) () #f ((6000 1) (1000 3) (25 5) (15 10) (10 15) (8 20) (-1 30)))
(polyhedra/modified-dual-on-faces? #f boolean #f #f)
(polyhedra/modified-dual-alpha 1 real #f 1)
(polyhedra/modified-dual-threshold -1 real #f -1)
(polyhedra/preserve-boundary-layer-option 0 integer #f 0)
(polyhedra/preserve-boundary-faces? #f boolean #f #f)
(polyhedra/conversion-feature-angle -1 real #f -1)
(polyhedra/lean-conversion/prism-aspect-ratio-threshold 200 real #f 200)
(polyhedra/lean-conversion/circumcenter-centroid-factor 0.9999 real #f 0.9999)
(polyhedra/lean-conversion/circumcenter-face-dual? #f boolean #f #f)
(polyhedra/lean-conversion/circumcenter-cell-dual? #f boolean #f #f)
(polyhedra/lean-conversion? #t boolean #f #t)
(dynamesh/laplace-repart/add-wgt? #f boolean #f #f)
(dynamesh/laplace-repart/after-read-case/method 0 integer #f 0)
(dynamesh/solver-options-verbosity 0 integer #f 0)
(dynamesh/mdm-solver-options? #t boolean #f #t)
(dynamesh/sc-bc-compressibility-type 1 integer #f 1)
(dynamesh/replace-mesh/verbosity 0 integer #f 0)
(dynamesh/replace-mesh/partition-per-zone? #f boolean #f #f)
(dynamesh/update-in-timestep/residual-criterion 1e-05 real #f 1e-05)
(dynamesh/update-in-timestep/relax-last-iter 1 real #f 1)
(dynamesh/update-in-timestep/relax 0.1 real #f 0.1)
(dynamesh/update-in-timestep/update-interval 1 integer #f 1)
(dynamesh/zone-preview-substeps 0 integer #f 0)
(dynamesh/motion-history/basename "C:\Users\COM\AppData\Local\Temp\WB_COM_11008_2\wbnew_files\dp0\FFF\MECH\FFF" string #f "")
(dynamesh/motion-history? #f boolean #f #f)
(dynamesh/in-cyn/output/ty (1 0 0) real-list #f (1 0 0))
(dynamesh/in-cyn/output/tx (0 0 1) real-list #f (0 0 1))
(dynamesh/in-cyn/output/sa (0 1 0) real-list #f (0 1 0))
(dynamesh/in-cyn/output/udf "" string #f "")
(dynamesh/in-cyn/output/method 1 integer #f 1)
(dynamesh/in-cyn/output/sc (0 0 0) real-list #f (0 0 0))
(dynamesh/in-cyn/output/zid () integer-list #f ())
(dynamesh/in-cyn/output/freq 0 integer #f 0)
(dynamesh/in-cyn/output/fname "" string #f "")
(dynamesh/in-cyn/output? #f boolean #f #f)
(dynamesh/in-cyn/insert-layer-node-correct-relax 0.5 real #f 0.5)
(dynamesh/in-cyn/delta-angle 0.5 real crank-angle 0.5)
(dynamesh/in-cyn/event-list () () #f ())
(dynamesh/in-cyn/piston-data (0 0 0) real-list #f (0 0 0))
(dynamesh/in-cyn/minimum-stroke 0 real length 0)
(dynamesh/in-cyn/minimum-lift 0 real length 0)
(dynamesh/in-cyn/crank-period 10000000000 real crank-angle 720)
(dynamesh/in-cyn/crank-end-angle -1 real crank-angle -1)
(dynamesh/in-cyn/crank-start-angle 0 real crank-angle 0)
(dynamesh/in-cyn/crank-rpm 0.1666666666666667 real crank-angular-velocity 2000)
(dynamesh/in-cyn/crank-angle 0 real crank-angle 0)
(dynamesh/models/update-in-timestep? #f boolean #f #f)
(dynamesh/models/contact? #f boolean #f #f)
(dynamesh/models/per? #f boolean #f #f)
(dynamesh/models/sdof? #f boolean #f #f)
(dynamesh/models/in-cylinder? #f boolean #f #f)
(dynamesh/method/remesh? #f boolean #f #f)
(dynamesh/method/layering? #f boolean #f #f)
(dynamesh/method/smoothing? #t boolean #f #t)
(dynamesh/set-dynamic-zones-state? #f boolean #f #f)
(dynamesh/recreate-shells? #t boolean #f #t)
(dynamesh/motion/nested-omega-analytical? #t boolean #f #t)
(dynamesh/motion/grid-motion-retain-normal-bc? #t boolean #f #t)
(dynamesh/motion/mark-adjacent-zones #t boolean #f #t)
(dynamesh/motion/interfaces/search-factor 2 real #f 2)
(dynamesh/motion/interfaces/custom-config () () #f ())
(dynamesh/motion/interfaces/mid-nodes 0 integer #f 0)
(dynamesh/motion/interfaces/project? #f boolean #f #f)
(dynamesh/motion/interfaces/sync? #t boolean #f #t)
(dynamesh/steady/optional-remesh-after-moving? #f boolean #f #f)
(dynamesh/steady/n-iter 0 integer #f 0)
(dynamesh/steady/pseudo-time-step 1 real #f 1)
(dynamesh/conservation/conserve-m1? #f boolean #f #f)
(dynamesh/conservation/multiphase? #t boolean #f #t)
(dynamesh/conservation/local? #t boolean #f #t)
(dynamesh/conservation/scale-max 1.25 real #f 1.25)
(dynamesh/conservation/scale? #t boolean #f #t)
(dynamesh/cell-data-when-face-interpol-fails? #t boolean #f #t)
(dynamesh/face-data-interpol-range 50 real #f 50)
(narrow-gaps/legacy-interpolation? #f boolean #f #f)
(narrow-gaps/update-dynamesh-parameters? #f boolean #f #f)
(narrow-gaps/optimization/fast-grad? #t boolean #f #t)
(narrow-gaps/optimization/force-gap-migration? #t boolean #f #t)
(narrow-gaps/optimization/force-gap-update? #f boolean #f #f)
(narrow-gaps/stabilization/extend-modeling-gap-shape-layers 1 integer #f 1)
(narrow-gaps/stabilization/extend-blocking-gap-shape-layers 1 integer #f 1)
(narrow-gaps/stabilization/extend-gap-shape? #f boolean #f #f)
(narrow-gaps/stabilization/saved-time-step-size 1 real #f 1)
(narrow-gaps/stabilization/time-step-size-factor 1 real #f 1)
(narrow-gaps/stabilization/cfl-stabilization-factor 1 real #f 1)
(narrow-gaps/stabilization/desired-cfl 10 real #f 10)
(narrow-gaps/stabilization/dt-based-on-gap-status? #f boolean #f #f)
(narrow-gaps/stabilization/adjust-time-step-size? #f boolean #f #f)
(narrow-gaps/stabilization/check-cfl-condition? #f boolean #f #f)
(narrow-gaps/stabilization/viscosity-ramp-up-layers 3 integer #f 3)
(narrow-gaps/stabilization/max-reynolds-ramp-up-factor 250 real #f 250)
(narrow-gaps/stabilization/desired-reynolds-number 1 real #f 1)
(narrow-gaps/stabilization/viscosity-ramp-up-factor 10 real #f 10)
(narrow-gaps/stabilization/old-gap-viscosity-factor 10 real #f 10)
(narrow-gaps/stabilization/gap-viscosity-factor 1000 real #f 1000)
(narrow-gaps/stabilization/use-face-based-filling? #t boolean #f #t)
(narrow-gaps/stabilization/automatic-viscosity-ramp-up? #f boolean #f #f)
(narrow-gaps/stabilization/real-viscosity-ramp-up? #f boolean #f #f)
(narrow-gaps/stabilization/artificial-viscosity-ramp-up? #t boolean #f #t)
(narrow-gaps/stabilization/viscosity-ramp-up? #f boolean #f #f)
(narrow-gaps/stabilization/cushion-layer? #f boolean #f #f)
(narrow-gaps/stabilization/bounding-method 1 integer #f 1)
(narrow-gaps/stabilization/solution-bounded? #t boolean #f #t)
(narrow-gaps/stabilization/mirror-velocity-p? #f boolean #f #f)
(narrow-gaps/stabilization/adjust-grads? #f boolean #f #f)
(narrow-gaps/stabilization/linear-urf? #f boolean #f #f)
(narrow-gaps/stabilization/seal-leaked-faces? #t boolean #f #t)
(narrow-gaps/stabilization/remove-isolated-cells? #t boolean #f #t)
(narrow-gaps/stabilization/steady-state? #f boolean #f #f)
(narrow-gaps/stabilization/severity-level 0 integer #f 0)
(narrow-gaps/stabilization/high-visc-relax? #f boolean #f #f)
(narrow-gaps/stabilization/enabled? #f boolean #f #f)
(narrow-gaps/modeling/rom/strong-force-distribution? #f boolean #f #f)
(narrow-gaps/modeling/rom/gap-flow-available? #f boolean #f #f)
(narrow-gaps/modeling/rom/gap-dissipation? #t boolean #f #t)
(narrow-gaps/modeling/decelerated/constant-kernel-fraction 0.55 real #f 0.55)
(narrow-gaps/modeling/resisted/constant-kernel-fraction 1 real #f 1)
(narrow-gaps/modeling/udf/constant-kernel-fraction 1 real #f 1)
(narrow-gaps/modeling/sponge/constant-kernel-fraction 0 real #f 0)
(narrow-gaps/modeling/sponge/global-stabilization? #f boolean #f #f)
(narrow-gaps/modeling/sponge/max-viscosity-change-ratio 1000000 real #f 1000000)
(narrow-gaps/modeling/sponge/min-vel-mag 0.001 real #f 0.001)
(narrow-gaps/modeling/sponge/lower-bound-limiting? #t boolean #f #t)
(narrow-gaps/modeling/sponge/velocity-based-limit? #f boolean #f #f)
(narrow-gaps/modeling/sponge/viscosity-based-formulation? #f boolean #f #f)
(narrow-gaps/modeling/rel-vel? #f boolean #f #f)
(narrow-gaps/numerics/growth-rate-control? #f boolean #f #f)
(narrow-gaps/numerics/growth-control-method 5 integer #f 5)
(narrow-gaps/numerics/min-vel-limit-value -5000 real #f -5000)
(narrow-gaps/numerics/max-vel-limit-value 5000 real #f 5000)
(narrow-gaps/numerics/vel-relax-factor 0.8 real #f 0.8)
(narrow-gaps/numerics/scale-gradient-factor 1 real #f 1)
(narrow-gaps/numerics/viscous-gap-disc? #f boolean #f #f)
(narrow-gaps/numerics/zero-int-ext-regions? #f boolean #f #f)
(narrow-gaps/numerics/zero-derivative? #f boolean #f #f)
(narrow-gaps/numerics/zero-rgradient? #f boolean #f #f)
(narrow-gaps/numerics/zero-p-derivative? #f boolean #f #f)
(narrow-gaps/numerics/zero-p-rgradient? #f boolean #f #f)
(narrow-gaps/numerics/zero-vel-derivative? #f boolean #f #f)
(narrow-gaps/numerics/zero-vel-rgradient? #f boolean #f #f)
(narrow-gaps/numerics/local-1st-order-in-time? #t boolean #f #t)
(narrow-gaps/numerics/update-turbulence? #f boolean #f #f)
(narrow-gaps/numerics/add-gflux-to-grad? #f boolean #f #f)
(narrow-gaps/numerics/add-gflux-to-vn? #t boolean #f #t)
(narrow-gaps/numerics/adjust-gflux-sign? #t boolean #f #t)
(narrow-gaps/numerics/add-pressure-work? #t boolean #f #t)
(narrow-gaps/numerics/correct-velocity? #t boolean #f #t)
(narrow-gaps/numerics/check-face-values? #f boolean #f #f)
(narrow-gaps/numerics/remeshing-intp-type 0 integer #f 0)
(narrow-gaps/controller/dynamic-multilayer? #f boolean #f #f)
(narrow-gaps/controller/dynamic-interpolation? #t boolean #f #t)
(narrow-gaps/interpolation/skip-data-update? #f boolean #f #f)
(narrow-gaps/interpolation/skip-dead-to-solve-cells? #t boolean #f #t)
(narrow-gaps/interpolation/excessive-exchanges? #f boolean #f #f)
(narrow-gaps/interpolation/update-grads? #t boolean #f #t)
(narrow-gaps/interpolation/update-gap-bc-faces? #t boolean #f #t)
(narrow-gaps/interpolation/update-gap-interface? #f boolean #f #f)
(narrow-gaps/interpolation/update-old-time-level? #t boolean #f #t)
(narrow-gaps/interpolation/alternative-face-flux? #f boolean #f #f)
(narrow-gaps/interpolation/unified? #t boolean #f #t)
(narrow-gaps/interpolation/n-layers 2 integer #f 2)
(narrow-gaps/interpolation/face-scheme 0 integer #f 0)
(narrow-gaps/interpolation/cell-scheme 0 integer #f 0)
(narrow-gaps/interpolation/method 1 integer #f 1)
(narrow-gaps/interpolation/data-type 0 integer #f 0)
(narrow-gaps/interpolation/node-based-filling? #f boolean #f #f)
(narrow-gaps/interpolation/node-based-data? #f boolean #f #f)
(narrow-gaps/pde-mark/face-check/method 0 integer #f 0)
(narrow-gaps/pde-mark/n-eqn 0 integer #f 0)
(narrow-gaps/search-mark/cell-check/excessive-filling-scheme 2 integer #f 2)
(narrow-gaps/search-mark/cell-check/method 2 integer #f 2)
(narrow-gaps/search-mark/face-check/method 0 integer #f 0)
(narrow-gaps/search-mark/cleanup-cell-marks? #f boolean #f #f)
(narrow-gaps/search-mark/build-exceptional-handling-flist? #t boolean #f #t)
(narrow-gaps/search-mark/enforce-filling-isolated-cells? #f boolean #f #f)
(narrow-gaps/search-mark/cell-check/add-first-layer-cells? #f boolean #f #f)
(narrow-gaps/search-mark/cell-check/two-sided-condition? #f boolean #f #f)
(narrow-gaps/search-mark/cell-check/distance-factor 1 real #f 1)
(narrow-gaps/marking/alternative-hole-filling-approach? #f boolean #f #f)
(narrow-gaps/marking/search-for-leftover-blocked-ext-f-list? #t boolean #f #t)
(narrow-gaps/marking/unified-blocked-ext-f-list? #t boolean #f #t)
(narrow-gaps/marking/update-flags-on-sliding-bc? #f boolean #f #f)
(narrow-gaps/marking/move-interface? #f boolean #f #f)
(narrow-gaps/marking/excessive-checks? #f boolean #f #f)
(narrow-gaps/marking/smoothing-by-adjacent-cells? #f boolean #f #f)
(narrow-gaps/marking/max-gap-smoothing-cycles 10 integer #f 10)
(narrow-gaps/marking/reupdate-old-levels? #f boolean #f #f)
(narrow-gaps/marking/reupdate-gap-regions? #t boolean #f #t)
(narrow-gaps/marking/modeling/method 0 integer #f 0)
(narrow-gaps/marking/method 0 integer #f 0)
(narrow-gaps/marking/alternative-marking? #f boolean #f #f)
(narrow-gaps/marking/unified-marking? #f boolean #f #f)
(narrow-gaps/gaps-setting () () #f ())
(narrow-gaps/detailed-cell-types? #f boolean #f #f)
(narrow-gaps/coupled-walls-allowed? #f boolean #f #f)
(narrow-gaps/l1-to-l2-intensity-threshold 0.6 real #f 0.6)
(narrow-gaps/update-grads? #f boolean #f #f)
(narrow-gaps/force-orient-faces? #f boolean #f #f)
(narrow-gaps/auxiliary-numerics? #f boolean #f #f)
(narrow-gaps/render/active-mesh-only? #f boolean #f #f)
(narrow-gaps/render-flow-modeling-gaps? #t boolean #f #t)
(narrow-gaps/render-gap-interface? #f boolean #f #f)
(narrow-gaps/render-debug? #f boolean #f #f)
(narrow-gaps/render-data? #f boolean #f #f)
(narrow-gaps/render-marks? #f boolean #f #f)
(narrow-gaps/exposure 1 integer #f 1)
(narrow-gaps/expert-settings? #f boolean #f #f)
(narrow-gaps/verbosity 0 integer #f 0)
(narrow-gaps/compatibility-check? #t boolean #f #t)
(narrow-gaps/expert-gui? #f boolean #f #f)
(narrow-gaps? #f boolean #f #f)
(narrow-gaps-available? #t boolean #f #t)
(skip-contact-limiting 0 integer #f 0)
(skip-contact-flux 1 integer #f 1)
(skip-contact-correct-velocity 1 integer #f 1)
(skip-contact-vector-gradient 1 integer #f 1)
(skip-contact-scalar-update 1 integer #f 1)
(skip-contact-scalar-gradient 1 integer #f 1)
(skip-contact-face-pressure-correction 1 integer #f 1)
(skip-momentum 1 integer #f 1)
(skip-continuity 1 integer #f 1)
(skip-contact-sources 1 integer #f 1)
(numerics/flexible/ramp-scalars? #f boolean #f #f)
(numerics/flexible/ramp-turbulence? #f boolean #f #f)
(numerics/flexible/ramp-flow? #f boolean #f #f)
(numerics/flexible/model-control? #f boolean #f #f)
(numerics/flexible/gradient-method 0 integer #f 0)
(numerics/flexible/gradient-control? #f boolean #f #f)
(numerics/flexible/pv-coupling-method 24 integer #f 24)
(numerics/flexible/pv-coupling-control? #f boolean #f #f)
(numerics/flexible/persistence-type 0 integer #f 0)
(numerics/flexible/time-duration 1 real #f 1)
(numerics/flexible/time-steps 5 integer #f 5)
(numerics/flexible/iteration-count 0 integer #f 0)
(numerics/flexible/iterations 5 integer #f 5)
(numerics/flexible/verbosity 0 integer #f 0)
(numerics/flexible/solution-statistics-level 0 integer #f 0)
(numerics/flexible/compute-solution-statistics? #t boolean #f #t)
(numerics/flexible/amg/coarsening-rate 2 integer #f 2)
(numerics/flexible/amg/reduce-coarsening-rate? #f boolean #f #f)
(numerics/flexible/amg/pre-sweeps 1 integer #f 1)
(numerics/flexible/amg/increase-pre-sweeps? #f boolean #f #f)
(numerics/flexible/amg/enforce-laplace-coarsening? #f boolean #f #f)
(numerics/flexible/override-specified-settings? #f boolean #f #f)
(numerics/flexible/transient/modified-time-step-counter -3 integer #f -3)
(numerics/flexible/transient/time-scale-factor 1 real #f 1)
(numerics/flexible/transient/time-scale-method 0 integer #f 0)
(numerics/flexible/transient/scheme 0 integer #f 0)
(numerics/flexible/transient/specify? #f boolean #f #f)
(numerics/flexible/scalar/secondary-gradient-type 0 integer #f 0)
(numerics/flexible/scalar/secondary-gradient-off? #t boolean #f #t)
(numerics/flexible/zero-pressure-grad-options 0 integer #f 0)
(numerics/flexible/flow/zero-grad-options 0 integer #f 0)
(numerics/flexible/flow/secondary-gradient-type 0 integer #f 0)
(numerics/flexible/flow/secondary-gradient-off? #t boolean #f #t)
(numerics/contact/vel-grad-include-grid-flux? #f boolean #f #f)
(numerics/flexible/flow/rc-method 0 integer #f 0)
(numerics/flexible/flow/force-rc-method #f boolean #f #f)
(numerics/flexible/advection-scheme 0 integer #f 0)
(numerics/flexible/blending-factor-l (1 0.75 0.25 0.1) real-list #f (1 0.75 0.25 0.1))
(numerics/flexible/blending-factor 1 real #f 1)
(numerics/flexible/engaged? #f boolean #f #f)
(numerics/flexible/suspend-convergence-check? #t boolean #f #t)
(numerics/flexible/mode -1 integer #f -1)
(numerics/flexible/zero-grid-flux? #f boolean #f #f)
(numerics/flexible/enable? #f boolean #f #f)
(numerics/flexible/activated? #f boolean #f #f)
(numerics/contact/add-pressure-work? #t boolean #f #t)
(numerics/contact/dead-to-solve-cells-skip-extrapolation? #t boolean #f #t)
(numerics/contact/interpolation/update-old-time-levels? #t boolean #f #t)
(numerics/contact/interpolation/report-detailed-statistics? #f boolean #f #f)
(numerics/contact/interpolation/report-statistics? #f boolean #f #f)
(numerics/contact/interpolation/post? #f boolean #f #f)
(numerics/contact/interpolation/after-gchanged? #f boolean #f #f)
(numerics/contact/interpolation/zero-velocity? #f boolean #f #f)
(numerics/contact/interpolation/include-bface? #t boolean #f #t)
(numerics/contact/interpolation/include-face1? #t boolean #f #t)
(numerics/contact/interpolation/combine-layers? #f boolean #f #f)
(numerics/contact/interpolation/all-layers? #f boolean #f #f)
(numerics/contact/interpolation/max-layers 1 integer #f 1)
(numerics/contact/interpolation/scheme 2 integer #f 2)
(numerics/contact/interpolation/method 1 integer #f 1)
(dynamesh/contact/remesh/linear-interpolation? #t boolean #f #t)
(numerics/contact/update-new-active-cells-method 1 integer #f 1)
(numerics/contact/active-old? #f boolean #f #f)
(numerics/contact/active? #f boolean #f #f)
(dynamesh/contact/skip-face-orientation? #f boolean #f #f)
(dynamesh/contact/zero-reconstruction-gradient? #f boolean #f #f)
(dynamesh/contact/diffusion-enhancement-factor 1 real #f 1)
(dynamesh/contact/diffusion-enhancement? #t boolean #f #t)
(dynamesh/contact/sym-explicit-only? #f boolean #f #f)
(dynamesh/contact/sym-limit-type 0 integer #f 0)
(dynamesh/contact/limit-reconstruction? #t boolean #f #t)
(dynamesh/contact/wall-type 1 integer #f 1)
(dynamesh/contact/gap-treatment-available? #f boolean #f #f)
(dynamesh/verbosity 0 integer #f 0)
(dynamesh/contact/compute-grid-flux? #t boolean #f #t)
(dynamesh/contact/skip-negative-volume? #f boolean #f #f)
(dynamesh/wallbc-auto-include-motion? #t boolean #f #t)
(dynamesh/dynamic-zones () () #f ())
(dynamesh/contact/imaps () () #f ())
(dynamesh/contact/maps () () #f ())
(dynamesh/contact/zones () integer-list #f ())
(dynamesh/contact/threshold 0.1 real length 0.1)
(dynamesh/contact/cell-first-layer-only? #f boolean #f #f)
(dynamesh/contact/cell-check-method 2 integer #f 2)
(dynamesh/contact/cell-distance-factor 1 real #f 1)
(dynamesh/contact/cell-smooth? #t boolean #f #t)
(dynamesh/contact/cell-check-two-sided? #t boolean #f #t)
(dynamesh/contact/on-initialization? #t boolean #f #t)
(dynamesh/contact/render-blocked-cells? #f boolean #f #f)
(dynamesh/contact/model 1 integer #f 1)
(dynamesh/contact/require-different-cell-zone-adjacency? #f boolean #f #f)
(dynamesh/contact/require-dynamic-threads? #f boolean #f #f)
(dynamesh/contact/separate? #t boolean #f #t)
(dynamesh/contact/restriction? #f boolean #f #f)
(dynamesh/contact/verbosity 0 integer #f 0)
(dynamesh/contact/udf-level 2 integer #f 2)
(dynamesh/contact/udf "" string #f "")
(dynamesh/contact/steady? #t boolean #f #t)
(dynamesh/per/cmplx? #f boolean #f #f)
(dynamesh/per/obj-groups () () #f ())
(dynamesh/per/objects () () #f ())
(dynamesh/per/n-passages 0 integer #f 0)
(dynamesh/sdof/objects () () #f ())
(dynamesh/sdof/motion-history/closest-angle? #t boolean #f #t)
(dynamesh/sdof/motion-history-file-at-end? #f boolean #f #f)
(dynamesh/sdof/minimum-cutoff-moments 9.999999999999999e-21 real #f 9.999999999999999e-21)
(dynamesh/sdof/implicit-udf-forces? #f boolean #f #f)
(dynamesh/sdof/toll-implicit 9.999999999999999e-21 real #f 9.999999999999999e-21)
(dynamesh/sdof/max-iter-implicit 20 integer #f 20)
(dynamesh/sdof/max-iter 20 integer #f 20)
(dynamesh/sdof/toll 1e-05 real #f 1e-05)
(dynamesh/sdof/abeta 0.25 real #f 0.25)
(dynamesh/sdof/agamma 0.5 real #f 0.5)
(dynamesh/sdof/beta 0.25 real #f 0.25)
(dynamesh/sdof/gamma 0.5 real #f 0.5)
(dynamesh/sdof/newmark? #t boolean #f #t)
(dynamesh/sdof/old-sdof? #f boolean #f #f)
(dynamesh/sdof/verbosity 0 integer #f 0)
(dynamesh/adapt/readapt-after-remeshing? #t boolean #f #t)
(dynamesh/adapt/move-adapted-cells? #t boolean #f #t)
(dynamesh/surf-deform/face-smoothing/true-dx-v? #f boolean #f #f)
(dynamesh/surf-deform/face-smoothing/true-dx-v-v? #f boolean #f #f)
(dynamesh/surf-deform/face-smoothing/dx-threshold 0.005 real #f 0.005)
(dynamesh/surf-deform/face-smoothing/amount 0.05 real #f 0.05)
(dynamesh/surf-deform/face-smoothing/area-threshold 0 real #f 0)
(dynamesh/surf-deform/face-smoothing/method 2 integer #f 2)
(dynamesh/surf-deform/face-smoothing/small-faces? #t boolean #f #t)
(dynamesh/surf-deform/conserve-mag-factor 0 real #f 0)
(dynamesh/surf-deform/clip-inward-dir 1 real #f 1)
(dynamesh/surf-deform/smooth-inward? #t boolean #f #t)
(dynamesh/surf-deform/clip-inward? #t boolean #f #t)
(dynamesh/surf-deform/dx-smoothing/relax-factor 1 real #f 1)
(dynamesh/surf-deform/dx-smoothing/n-to-f-kernel 0 integer #f 0)
(dynamesh/surf-deform/dx-smoothing/f-to-n-kernel 3 integer #f 3)
(dynamesh/surf-deform/dx-smoothing/passes 5 integer #f 5)
(dynamesh/surf-deform/dx-smoothing/remove-tang-component? #f boolean #f #f)
(dynamesh/surf-deform/dx-smoothing/local-norm? #f boolean #f #f)
(dynamesh/surf-deform/dx-smoothing/face-based? #f boolean #f #f)
(dynamesh/surf-deform/dx-smoothing/as-vector? #t boolean #f #t)
(dynamesh/surf-deform/max-move-fac 0.1 real #f 0.1)
(dynamesh/surf-deform/node-data? #f boolean #f #f)
(dynamesh/surf-deform/local-limiting? #f boolean #f #f)
(dynamesh/surf-deform/adaptive-dt? #t boolean #f #t)
(dynamesh/surf-deform/max-dt-growth 2 real #f 2)
(dynamesh/surf-deform/max-dt 10000000000 real #f 10000000000)
(dynamesh/surf-deform/min-dt 0 real #f 0)
(dynamesh/surf-deform/verbosity 0 integer #f 0)
(dynamesh/surf-smoother/dx-threshold 0 real #f 0)
(dynamesh/surf-smoother/curvature-threshold 400 real #f 400)
(dynamesh/surf-smoother/curvature-plane-threshold 1e-09 real #f 1e-09)
(dynamesh/surf-smoother/override-curvature-threshold? #f boolean #f #f)
(dynamesh/surf-smoother/sigma-range 6 real #f 6)
(dynamesh/surf-smoother/filter-curv-thresh? #t boolean #f #t)
(dynamesh/surf-smoother/min-aniso-weight -1 real #f -1)
(dynamesh/surf-smoother/eta-relax-factor 1 real #f 1)
(dynamesh/surf-smoother/tang-relax-factor 0.01 real #f 0.01)
(dynamesh/surf-smoother/norm-relax-factor 1e-05 real #f 1e-05)
(dynamesh/surf-smoother/laplace-factor 0 real #f 0)
(dynamesh/surf-smoother/feature-angle 160 real #f 160)
(dynamesh/surf-smoother/eta-niter 100 integer #f 100)
(dynamesh/surf-smoother/compute-eta? #t boolean #f #t)
(dynamesh/surf-smoother/step-size 1 integer #f 1)
(dynamesh/surf-smoother/niter 10 integer #f 10)
(dynamesh/surf-smoother/use-new? #t boolean #f #t)
(dynamesh/surf-smoother/eta-update-fixed? #f boolean #f #f)
(dynamesh/surf-smoother/modified-cot? #t boolean #f #t)
(dynamesh/surf-smoother/no-gradient-across-features? #t boolean #f #t)
(dynamesh/remesh/intersecting-padding 0.1 real #f 0.1)
(dynamesh/remesh/loop-cut-angle 60 real #f 60)
(dynamesh/remesh/check-intersecting-loops? #t boolean #f #t)
(dynamesh/remesh/data-interpolation-across-zones? #f boolean #f #f)
(dynamesh/remesh/data-interpolation-cell-search-count 500 integer #f 500)
(dynamesh/remesh/data-interpolation-cell-search-method 0 integer #f 0)
(dynamesh/remesh/repartition-interface-threshold 10 real #f 0)
(dynamesh/remesh/repartition-load-threshold 20 real #f 20)
(dynamesh/remesh/repartition-interval 20 integer #f -1)
(dynamesh/remesh/repartition-auto? #t boolean #f #t)
(dynamesh/remesh/repartition-enable? #t boolean #f #t)
(dynamesh/remesh/remesh-improvements 0 integer #f 0)
(dynamesh/remesh/verbosity 0 integer #f 0)
(dynamesh/remesh/parallel-remeshing? #t boolean #f #t)
(dynamesh/remesh/region/remesh-udf-deform? #f boolean #f #f)
(dynamesh/remesh/region/remesh-threads-on-prism-quality? #t boolean #f #t)
(dynamesh/remesh/region/max-prism-size-factor 1.7 real #f 1.7)
(dynamesh/remesh/region/tetrahedra-connectivity-level 2 integer #f 2)
(dynamesh/remesh/region/collect-connected-wedges? #f boolean #f #f)
(dynamesh/remesh/region/collect-node-connected-tetrahedra? #t boolean #f #t)
(dynamesh/remesh/face/size? #f boolean #f #f)
(dynamesh/remesh/face/cavities-on-same-cpu? #t boolean #f #t)
(dynamesh/remesh/face/prism-check-fixed-parameters? #f boolean #f #f)
(dynamesh/remesh/face/prism-all-layer-prox? #f boolean #f #f)
(dynamesh/remesh/prism/number-of-layers-max 200 integer #f 200)
(dynamesh/remesh/prism/number-of-layers 0 integer #f 0)
(dynamesh/remesh/prism/growth-rate 0 real #f 0)
(dynamesh/remesh/prism/first-height 0 real length 0)
(dynamesh/remesh/prism/allow-stairstepping? #f boolean #f #f)
(dynamesh/remesh/prism/remesh-with-prisms? #t boolean #f #t)
(dynamesh/remesh/thread/include-quad-faces? #f boolean #f #f)
(dynamesh/remesh/thread/include-face-threads? #t boolean #f #t)
(dynamesh/remesh/thread/size-control 2 integer #f 2)
(dynamesh/remesh/refine-length-scale-limit-factor 0.1 real #f 0.1)
(dynamesh/remesh/remesh-size-interval 5 integer #f 5)
(dynamesh/remesh/sizing-function? #f boolean #f #f)
(dynamesh/remesh/improve-remesh-local? #t boolean #f #t)
(dynamesh/remesh/improve-remeshed-cavity-threshold 0.95 real #f 0.95)
(dynamesh/remesh/sliver-skew 0.95 real #f 0.95)
(dynamesh/remesh/boundary-sliver-threshold 0.999 real #f 0.999)
(dynamesh/remesh/surfer-improve-method 3 integer #f 3)
(dynamesh/remesh/refine-coarsen-order? #f boolean #f #f)
(dynamesh/remesh/remesh-skewness-priority-marking? #t boolean #f #t)
(dynamesh/remesh/remesh-exterior-enhanced? #t boolean #f #t)
(dynamesh/remesh/remesh-exterior? #t boolean #f #t)
(dynamesh/remesh/remesh-sweep 5 integer #f 5)
(dynamesh/remesh/perturb-cavity-nodes? #f boolean #f #f)
(dynamesh/remesh/face-v6.1? #f boolean #f #f)
(dynamesh/remesh/swap-iteration 4 integer #f 4)
(dynamesh/remesh/swap-angle 100 real #f 100)
(dynamesh/remesh/skewness-method 0 integer #f 0)
(dynamesh/remesh/refine-method 0 integer #f 0)
(dynamesh/remesh/height-relax-factor 0.4 real #f 0.4)
(dynamesh/remesh/max-thread-skew 0.98 real #f 0.98)
(dynamesh/remesh/face-skew-rejection-threshold 0.99 real #f 0.99)
(dynamesh/remesh/max-face-skew 0.7 real #f 0.7)
(dynamesh/remesh/max-length-scale 1000 real length 1000)
(dynamesh/remesh/min-length-scale 0 real length 0)
(dynamesh/remesh/methods (#f #t #f #f #f #f) boolean-list #f (#f #t #f #f #f #f))
(dynamesh/remesh/exchange-cell-ids-with-hash? #t boolean #f #t)
(dynamesh/remesh/angle 40 real #f 40)
(dynamesh/remesh/num-cell-layers 2 integer #f 2)
(dynamesh/remesh/cac/exclude-pyramid? #t boolean #f #t)
(dynamesh/remesh/cac/remove-stairstep? #f boolean #f #f)
(dynamesh/remesh/cac/verbosity 0 integer #f 0)
(dynamesh/remesh/mmc/bl-min-ortho 0.1 real #f 0.1)
(dynamesh/remesh/mmc/min-ortho 0.1 real #f 0.1)
(dynamesh/remesh/mmc/mark-poly? #f boolean #f #f)
(dynamesh/remesh/mmc/sizing-factor-low 0.25 real #f 0.25)
(dynamesh/remesh/mmc/sizing-factor-high 2 real #f 2)
(dynamesh/remesh/mmc/sizing-marking-method 3 integer #f 3)
(dynamesh/remesh/mmc/aspect-ratio-marking? #f boolean #f #f)
(dynamesh/remesh/mmc/avg-size? #f boolean #f #f)
(dynamesh/remesh/mmc/mesh-based? #f boolean #f #f)
(dynamesh/remesh/rdc/update-moving-size-fns? #t boolean #f #t)
(dynamesh/remesh/rdc/max-bl-tot-height 1.5 real #f 1.5)
(dynamesh/remesh/rdc/min-bl-tot-height 0.5 real #f 0.5)
(dynamesh/remesh/rdc/max-bl-height 1.2 real #f 1.2)
(dynamesh/remesh/rdc/min-bl-height 0.8 real #f 0.8)
(dynamesh/remesh/rdc/bl-flags? #t boolean #f #t)
(dynamesh/remesh/rdc/mark-on-prisms-height? #f boolean #f #f)
(dynamesh/remesh/rdc/update-prisms-params? #f boolean #f #f)
(dynamesh/remesh/rdc/post-process? #f boolean #f #f)
(dynamesh/remesh/rdc/mark-only? #f boolean #f #f)
(dynamesh/remesh/rdc/write-out-cavity? #f boolean #f #f)
(dynamesh/remesh/rdc/verbosity 0 integer #f 0)
(dynamesh/remesh/rdc/replicate-cells? #t boolean #f #t)
(dynamesh/remesh/rdc/prime? #f boolean #f #f)
(dynamesh/remesh/rdc/print-conserved? #f boolean #f #f)
(dynamesh/remesh/rdc/navg-steps 5 integer #f 5)
(dynamesh/remesh/rdc/max-aspect-ratio 0 real #f 0)
(dynamesh/remesh/rdc/cell-size-scale-factor 1 real #f 1)
(dynamesh/remesh/rdc/face-size-scale-factor 1 real #f 1)
(dynamesh/remesh/rdc/min-max-size-scale-factor 1.5 real #f 1.5)
(dynamesh/remesh/rdc/cell-refine-size-ratio 1.5 real #f 1.5)
(dynamesh/remesh/rdc/face-skew-improve-max 0.7 real #f 0.7)
(dynamesh/remesh/rdc/cell-skew-improve-max 0.85 real #f 0.85)
(dynamesh/remesh/rdc/growth-rate 1.2 real #f 1.2)
(dynamesh/remesh/rdc/size-field-name "sizes.sf" string #f "sizes.sf")
(dynamesh/remesh/rdc/avg-size-field? #f boolean #f #f)
(dynamesh/remesh/rdc/auto-mesh-sizing 1 integer #f 1)
(dynamesh/remesh/rdc/size-field-method 3 integer #f 3)
(dynamesh/remesh/rdc/prism-cap-side-overlap-angle 0 real #f 0)
(dynamesh/remesh/rdc/prism-offset-correct-smooth? #t boolean #f #t)
(dynamesh/remesh/rdc/prism-normal-smooth-iter 10 integer #f 10)
(dynamesh/remesh/rdc/check-level 0 integer #f 0)
(dynamesh/remesh/unified/mesh-based-marking? #t boolean #f #t)
(dynamesh/remesh/unified/user-max-lscale 0 real #f 0)
(dynamesh/remesh/unified/user-min-lscale 0 real #f 0)
(dynamesh/remesh/rdc/print? #f boolean #f #f)
(dynamesh/remesh/unified/auto-lscale? #t boolean #f #t)
(dynamesh/remesh/sizing-controls () () #f ())
(dynamesh/remesh/prism-controls () () #f ())
(dynamesh/remesh/sf-info () () #f ())
(dynamesh/remesh/generalized-remesher? #t boolean #f #t)
(dynamesh/boundary/project-deforming-nodes-twice? #f boolean #f #f)
(dynamesh/boundary/project-deforming-nodes? #t boolean #f #t)
(dynamesh/boundary/laplace-node-relax 1 real #f 1)
(dynamesh/spring/face-node-skewness 0.6 real #f 0.6)
(dynamesh/spring/deformable-element-type? #f boolean #f #f)
(dynamesh/spring/all-element-type? #t boolean #f #t)
(dynamesh/spring/boundary-node-relax 1 real #f 1)
(dynamesh/spring/boundary-stiffness 1 real #f 1)
(dynamesh/smooth/skewness/encapsulate-cells? #f boolean #f #f)
(dynamesh/smooth/skewness/smooth-boundary-zones-with-no-geom? #f boolean #f #f)
(dynamesh/smooth/skewness/smooth-all-deforming-zones? #t boolean #f #t)
(dynamesh/smooth/rbf/per-zone? #t boolean #f #t)
(dynamesh/smooth/rbf/max_abs_error 1e-05 real #f 1e-05)
(dynamesh/smooth/rbf/max_rel_error 1e-05 real #f 1e-05)
(dynamesh/smooth/rbf/nthreads 0 integer #f 0)
(dynamesh/smooth/rbf/serialize? #t boolean #f #t)
(dynamesh/smooth/rbf/verbosity 0 integer #f 0)
(dynamesh/smooth/fem/stabilization/krylov-size-last-used 0 integer #f 0)
(dynamesh/smooth/fem/stabilization/krylov-size 10 integer #f 10)
(dynamesh/smooth/fem/precondition/max-cycles 1 integer #f 1)
(dynamesh/smooth/fem/precondition/alpha 0.3 real #f 0.3)
(dynamesh/smooth/fem/use-max-residual? #t boolean #f #t)
(dynamesh/smooth/fem/amg-conservative-coarsening? #f boolean #f #f)
(dynamesh/smooth/fem/amg-divergence-epsilon 1000000 real #f 1000000)
(dynamesh/smooth/fem/amg-tolerance 1e-09 real #f 1e-09)
(dynamesh/smooth/fem/amg-scale-matrix? #f boolean #f #f)
(dynamesh/smooth/fem/amg-stabilization 3 integer #f 3)
(dynamesh/smooth/fem/amg-cycle-type 3 integer #f 3)
(dynamesh/smooth/fem/amg-beta 0.7 real #f 0.7)
(dynamesh/smooth/fem/amg-alpha 1e-10 real #f 1e-10)
(dynamesh/smooth/fem/amg-cpld-max-cycles 30 integer #f 30)
(dynamesh/smooth/fem/amg-cpld-group-size 2 integer #f 2)
(dynamesh/smooth/fem/amg-cpld-post-relaxations 1 integer #f 1)
(dynamesh/smooth/fem/amg-cpld-pre-relaxations 0 integer #f 0)
(dynamesh/smooth/fem/amg-cpld-relaxation-method "gauss-seidel" string #f "gauss-seidel")
(dynamesh/smooth/fem/poisson-ratio 0.45 real #f 0.45)
(dynamesh/smooth/fem/integration-order 1 integer #f 1)
(dynamesh/smooth/fem/model 0 integer #f 0)
(dynamesh/smooth/fem/verbosity 0 integer #f 0)
(dynamesh/smooth/laplace/boundary/no-quality-check? #f boolean #f #f)
(dynamesh/smooth/laplace/residual-divergence-history 2 integer #f 2)
(dynamesh/smooth/laplace/check-divergence? #t boolean #f #t)
(dynamesh/smooth/laplace/boundary-update-with-gradient? #f boolean #f #f)
(dynamesh/smooth/laplace/boundary-secondary-gradient? #t boolean #f #t)
(dynamesh/smooth/laplace/secondary-gradient? #t boolean #f #t)
(dynamesh/smooth/laplace/amg-stabilization 0 integer #f 0)
(dynamesh/smooth/laplace/amg-method 0 integer #f 0)
(dynamesh/smooth/laplace/amg-cycle-type 3 integer #f 3)
(dynamesh/smooth/laplace/amg-beta 0.7 real #f 0.7)
(dynamesh/smooth/laplace/amg-alpha 0.1 real #f 0.1)
(dynamesh/smooth/laplace/amg-cpld-group-size 2 integer #f 2)
(dynamesh/smooth/laplace/amg-cpld-post-relaxations 1 integer #f 1)
(dynamesh/smooth/laplace/amg-cpld-pre-relaxations 0 integer #f 0)
(dynamesh/smooth/laplace/amg-cpld-relaxation-method "gauss-seidel" string #f "gauss-seidel")
(dynamesh/smooth/laplace/solve-coupled? #t boolean #f #t)
(dynamesh/smooth/laplace/relative-tolerance 0.0001 real #f 0.0001)
(dynamesh/smooth/laplace/max-iter 20 integer #f 20)
(dynamesh/smooth/laplace/explicit-relax 1 real #f 1)
(dynamesh/smooth/laplace/relax 1 real #f 1)
(dynamesh/smooth/laplace/boundary-distance-method 0 integer #f 0)
(dynamesh/smooth/laplace/diff-coeff-param 1.5 real #f 1.5)
(dynamesh/smooth/laplace/diff-coeff-func 0 integer #f 0)
(dynamesh/smooth/laplace/verbosity 0 integer #f 0)
(dynamesh/smooth/spring/verbosity 0 integer #f 0)
(dynamesh/smooth/method/diffusion-fvm? #f boolean #f #f)
(dynamesh/smooth/method 3 integer #f 3)
(dynamesh/smooth/local/verbosity 1 integer #f 1)
(dynamesh/smooth/local/marking-register-name "" string #f "")
(dynamesh/smooth/local/marking-method 1 integer #f 1)
(dynamesh/smooth/local? #f boolean #f #f)
(dynamesh/smooth/from-ref/for-rotating-mesh 2 integer #f 2)
(dynamesh/smooth/update-moving-ref? #t boolean #f #t)
(dynamesh/smooth/from-ref? #f boolean #f #f)
(dynamesh/grid/epsilon 0.0001 real #f 0.0001)
(dynamesh/grid/itermax 100 integer #f 100)
(dynamesh/grid/relax 0.1 real #f 0.1)
(dynamesh/layering/allow-with-2.5d? #f boolean #f #f)
(dynamesh/layering/layering-before-move? #f boolean #f #f)
(dynamesh/layering/nodes-per-thread? #f boolean #f #f)
(dynamesh/layering/check-insertion-location? #t boolean #f #t)
(dynamesh/layering/constant-height #t boolean #f #t)
(dynamesh/layering/adapt? #f boolean #f #f)
(dynamesh/layering/omega-col 0.2 real #f 0.2)
(dynamesh/layering/omega 0.4 real #f 0.4)
(dynamesh/redistribute-bl-subset? #t boolean #f #t)
(dynamesh/nci-recon? #f boolean #f #f)
(dynamesh/allow-bso-time-formulation? #f boolean #f #f)
(dynamesh/transient/verbosity 0 integer #f 0)
(dynamesh/allow-time-2nd-order? #t boolean #f #t)
(dynamesh/layering/enable-2nd-order? #t boolean #f #t)
(dynamesh/layering/subdivide-dvolume-dt? #f boolean #f #f)
(dynamesh/grid-flux-first-order? #f boolean #f #f)
(dynamesh/verify-gcl? #f boolean #f #f)
(dynamesh/gcl-threshold 1e-06 real #f 1e-06)
(dynamesh/report-not-tge-normal? #f boolean #f #f)
(sizing-function/post-processing-thread -1 integer #f -1)
(sizing-function/boundary-threshold 0.1 real #f 0.1)
(sizing-function/variation-rate -2 real #f -2)
(sizing-function/smoothing? #t boolean #f #t)
(centrifugal/density-ratio 0 real #f 0)
(centrifugal/exit-radius 0 real length 0)
(centrifugal-init? #f boolean #f #f)
(post/use-local-nodes? #f boolean #f #f)
(post/node-weight-interpolation? #t boolean #f #t)
(post/cell2node-values/approach 0 integer #f 0)
(post-processing-iteration? #f boolean #f #f)
(post-process-equations? #f boolean #f #f)
(first-post-niter 0 integer #f 0)
(max-post-iterations-per-step 10 integer #f 10)
(max-iterations-per-step 20 integer #f 20)
(number-of-time-steps 0 integer #f 0)
(number-of-iterations 0 integer #f 0)
(nrbc-vinlet/on? #f boolean #f #f)
(nrbc-pinlet/on? #f boolean #f #f)
(nrbc-pout/on? #f boolean #f #f)
(nrbc/unit-cfl-at-supersonic? #t boolean #f #t)
(nrbc/vinlet-density-from-total-temperature? #t boolean #f #t)
(nrbc/vinlet-temporal-relaxation-t 0.35 real #f 0.35)
(nrbc/vinlet-absorbing-parameter-t 0.35 real #f 0.35)
(nrbc/pinlet-purturbation-boundary-t? #f boolean #f #f)
(nrbc/pinlet-absorbing-boundary-t? #f boolean #f #f)
(nrbc/pinlet-temporal-relaxation-t 0.35 real #f 0.35)
(nrbc/pinlet-pressure-forcing-parameter-t 0.2 real #f 0.2)
(nrbc/pinlet-absorbing-parameter-t 0.35 real #f 0.35)
(nrbc/pout-absorbing-boundary-t? #f boolean #f #f)
(nrbc/pout-temporal-relaxation-t 0.35 real #f 0.35)
(nrbc/pout-pressure-forcing-parameter-t 0.2 real #f 0.2)
(nrbc/pout-absorbing-parameter-t 0.35 real #f 0.35)
(gen-nrbc/verbosity 0 integer #f 0)
(gen-nrbc/ig-correct? #f boolean #f #f)
(gen-nrbc/init-from-flux? #t boolean #f #t)
(gen-nrbc/tangential-source? #f boolean #f #f)
(gen-nrbc/relax 0.5 real #f 0.5)
(gen-nrbc/sig2 5 real #f 5)
(gen-nrbc/sig 0.15 real #f 0.15)
(gen-nrbc/on? #f boolean #f #f)
(bc/convection-z-velocity 0 real #f 0)
(bc/convection-y-velocity 0 real #f 0)
(bc/convection-x-velocity 1 real #f 1)
(bc/convective-outflow? #f boolean #f #f)
(wd-phi/amg-stabilization 0 integer #f 0)
(wd-phi/amg-method 0 integer #f 0)
(wd-phi/cycle-type 3 integer #f 3)
(wd-phi/amg-beta 0.7 real #f 0.7)
(wd-phi/amg-alpha 0.1 real #f 0.1)
(wd-phi/relative-tolerance 0.0001 real #f 0.0001)
(wd-phi/max-iter 20 integer #f 20)
(wd-phi/explicit-relax 1 real #f 1)
(wd-phi/relax 1 real #f 1)
(ost/vof/node-based/new-framework? #t boolean #f #t)
(ost/vof/exp/own-wts? #f boolean #f #f)
(ost/use-central-donor-for-anb? #f boolean #f #f)
(ost/add-imbalance-at-receptor 0 integer #f 0)
(ost/skip-overset-face-pressure-correction? #f boolean #f #f)
(ost/skip-overset-correct-face-flux? #f boolean #f #f)
(ost/skip-correct-face-flux? #f boolean #f #f)
(ost/press-solve-skip? #f boolean #f #f)
(ost/skip-mass-error? #f boolean #f #f)
(ost/skip-correct-v? #f boolean #f #f)
(ost/press/coeffs-debug? #f boolean #f #f)
(ost/press/flux-corr-debug? #f boolean #f #f)
(ost/press/press-corr-debug? #f boolean #f #f)
(ost/press/face-press-debug? #f boolean #f #f)
(ost/press/high-order/startup/ntime 3 integer #f 3)
(ost/press/high-order? #f boolean #f #f)
(ost/press/skip-high-order? #t boolean #f #t)
(ost/flux/explicit-correction-type-t 0 integer #f 0)
(ost/interpolate-mass-imbalance? #f boolean #f #f)
(ost/flux/high-order? #t boolean #f #t)
(ost/flux/use-previous-vel? #t boolean #f #t)
(ost/flux/include-press-diss? #f boolean #f #f)
(ost/mom/coeff-debug? #f boolean #f #f)
(ost/flux/imbalance-debug? #f boolean #f #f)
(ost/flux/update-debug? #f boolean #f #f)
(ost/init/flux-debug? #f boolean #f #f)
(ost/amg/ilus-debug? #f boolean #f #f)
(ost/amg/ilud-debug? #f boolean #f #f)
(ost/amg/residual-debug? #f boolean #f #f)
(ost/amg/smooth-debug? #f boolean #f #f)
(ost/amg/fill-matrix-debug? #f boolean #f #f)
(ost/amg/mfl-verbosity 0 integer #f 0)
(ost/skip-amg? #f boolean #f #f)
(ost/skip-overlap-residual? #f boolean #f #f)
(ost/print-amg-matrix? #f boolean #f #f)
(ost/overset-specific-amg? #f boolean #f #f)
(ost/amg/positive-interpolation-weights-t 0 integer #f 0)
(ost/generalized-face-update-after-mesh-motion? #t boolean #f #t)
(ost/grid-update-receptor-weights-method 1 integer #f 1)
(ost/non-receptor-interpolation-weight-type 1 integer #f 1)
(ost/update-by-cell-status? #f boolean #f #f)
(ost/extrapolation-donors-check-history? #f boolean #f #f)
(ost/orphan-treatment-type 0 integer #f 0)
(ost/orphan-treatment-on? #t boolean #f #t)
(ost/least-squares-disco-t? #f boolean #f #f)
(ost/least-squares-disco-bounding-type-t 1 integer #f 1)
(ost/least-squares-enforce-zero-deltax? #f boolean #f #f)
(ost/least-squares-bounded? #t boolean #f #t)
(ost/least-squares-weights-check-level 3 integer #f 3)
(ost/least-squares-weights-check? #t boolean #f #t)
(ost/weighted-least-squares? #t boolean #f #t)
(ost/recon/limits-use-principal-donor? #f boolean #f #f)
(ost/recon/limit-reconstruction? #t boolean #f #t)
(ost/deriv/use-reconstruction-grad? #f boolean #f #f)
(ost/interpolation-method 1 integer #f 1)
(ost/least-squares-presto-pgrad-interp-principal-donor? #t boolean #f #t)
(ost/least-squares-presto-pgrad-interp? #f boolean #f #f)
(ost/least-squares-presto-central-donor? #t boolean #f #t)
(ost/least-squares-scalars? #t boolean #f #t)
(ost/least-squares-vof? #t boolean #f #t)
(ost/lsf-fast? #t boolean #f #t)
(ost/explicit-receptors? #f boolean #f #f)
(ost/pressure-relax 1 real #f 1)
(ost/deriv-verb 0 integer #f 0)
(ost/amg-verb 0 integer #f 0)
(ost/disc-verb 0 integer #f 0)
(ost/init-verb 0 integer #f 0)
(ost/residual-debug? #f boolean #f #f)
(ost/update-solve-break? #f boolean #f #f)
(ost/perfect-match? #f boolean #f #f)
(ost/amg/hyb-positive-weights-mode 0 integer #f 0)
(ost/use-principal-gradient? #f boolean #f #f)
(ost/use-principal-solution? #f boolean #f #f)
(ost/hybrid-limit-rg? #t boolean #f #t)
(ost/hybrid-use-rg? #f boolean #f #f)
(ost/hybrid-unlimited-gradient? #t boolean #f #t)
(ost/hybrid-unlimited-rg? #f boolean #f #f)
(ost/hybrid-gradient-mode 1 integer #f 1)
(ost/idw-gradient-method 0 integer #f 0)
(ost/idw-exponent 1 integer #f 1)
(ost/apply-solution-bounds? #t boolean #f #t)
(ost/solution-interpolation-before-grad? #t boolean #f #t)
(ost/solution-interpolation-before-rgrad? #t boolean #f #t)
(ost/solution-interpolation-mode 1 integer #f 1)
(ost/hybrid-weighted-system? #t boolean #f #t)
(ost/enforce-zero-deltax? #t boolean #f #t)
(ost/hybrid-solution-bounded? #t boolean #f #t)
(ost/check-weights-type 3 integer #f 3)
(ost/check-weights? #t boolean #f #t)
(ost/interpolation-tolerance 1e-10 real #f 1e-10)
(ost/solver-expert? #f boolean #f #f)
(ost/hip-mode -1 integer #f -1)
(ost/allow-hybrid-interpolation? #f boolean #f #f)
(ost/inv-dist-type 0 integer #f 0)
(ost/enforce-default-solver-options? #t boolean #f #t)
(overset/testing? #f boolean #f #f)
(overset/expert? #f boolean #f #f)
(overset/clearing-updates-neighborhood? #f boolean #f #f)
(overset/update-before-case-write? #t boolean #f #t)
(overset/adapt/gap-size-factor 4 real #f 4)
(overset/adapt/gap-marking-method 0 integer #f 0)
(overset/adapt/max-refine-level 4 integer #f 4)
(overset/adapt/sweeps 2 integer #f 2)
(overset/adapt/max-cycles 5 integer #f 5)
(overset/adapt/buffer-layers-coarsen 2 integer #f 2)
(overset/adapt/buffer-layers-refine 1 integer #f 1)
(overset/adapt/fixed-orphans? #f boolean #f #f)
(overset/adapt/mark-size-on-central-donor-only? #f boolean #f #f)
(overset/adapt/prism-aspect-ratio 3 real #f 3)
(overset/adapt/anisotropic? #t boolean #f #t)
(overset/adapt/type (#t #t #f #t) boolean-list #f (#t #t #f #t))
(overset/adapt/dynamic? #f boolean #f #f)
(overset/extended-threads/cache-hash-tables? #t boolean #f #t)
(overset/extended-threads/cache-size-threshold 1.5 real #f 1.5)
(overset/extended-threads/use? (#t #f) boolean-list #f (#t #f))
(overset/memory/compact-interval 20 integer #f 20)
(overset/partition/migrate-dci? #t boolean #f #t)
(overset/partition/metis/npart-prev-mwp -1 integer #f -1)
(overset/partition/metis/use-mwp? #t boolean #f #t)
(overset/partition/metis/dr-conn? #f boolean #f #f)
(overset/partition/interval 20 integer #f 20)
(overset/partition/method "Metis" string #f "Metis")
(overset/render/fill-area-weights? #t boolean #f #t)
(overset/render/include-all-donor-cells? #f boolean #f #f)
(overset/render/include-receptor-cells? #f boolean #f #f)
(overset/render/need-surface-recreation? #f boolean #f #f)
(overset/render/active-mesh-only? #f boolean #f #f)
(overset/verbosity 0 integer #f 0)
(overset/donor/max-lscale-ratio 3 real #f 3)
(overset/donor/modified-parameters? #f boolean #f #f)
(overset/donor/dead-update-full-donors? #t boolean #f #t)
(overset/donor/dead-update-nlayer 3 integer #f 3)
(overset/donor/fill-update-connectivity? (#t #t #f) boolean-list #f (#t #t #f))
(overset/donor/cache-search-method 1 integer #f 1)
(overset/donor/cache-bounding-cells? #t boolean #f #t)
(overset/donor/parallel-convert-orphan-cells? #f boolean #f #f)
(overset/donor/cache-extended-threads? #t boolean #f #t)
(overset/donor/extend-dead-cells? #f boolean #f #f)
(overset/donor/bmap-buffer-layer? #f boolean #f #f)
(overset/donor/bmap-nmax 24 integer #f 24)
(overset/donor/extended-thread-mark-method 1 integer #f 1)
(overset/donor/extended-thread-buffer-layer? #t boolean #f #t)
(overset/donor/extended-thread-rel-tol 0 real #f 0)
(overset/donor/boundary-distance-method 1 integer #f 1)
(overset/donor/priority-factor 1.25 real #f 1.25)
(overset/donor/priority-method 0 integer #f 0)
(overset/donor/dead-neighbor-level 2 integer #f 2)
(overset/donor/include-dead-neighbors? #f boolean #f #f)
(overset/donor/gap-blocked-neighbor-level 2 integer #f 2)
(overset/donor/include-gap-blocked-neighbors? #t boolean #f #t)
(overset/donor/contact-neighbor-level 2 integer #f 2)
(overset/donor/include-contact-neighbors? #t boolean #f #t)
(overset/donor/include-dead-to-solve-neighbors? #t boolean #f #t)
(overset/donor/include-receptor-neighbors? #t boolean #f #t)
(overset/donor/node-connected? #f boolean #f #f)
(overset/donor/check-history? #t boolean #f #t)
(overset/donor/include-neighbors-all? #f boolean #f #f)
(overset/donor/include-neighbors? #t boolean #f #t)
(overset/donor/poly-search-node-connected? #f boolean #f #f)
(overset/donor/node-connected-after-at-location? #t boolean #f #t)
(overset/donor/accept-any-at-location-cell? #f boolean #f #f)
(overset/donor/orphan-perturb-factor 0.5 real #f 0.5)
(overset/donor/orphan-perturb-location? #f boolean #f #f)
(overset/donor/search-tries 10 integer #f 10)
(overset/donor/search-random-max 25 integer #f 25)
(overset/donor/search-random-seed? #t boolean #f #t)
(overset/donor/search-range-node-connected 5 integer #f 5)
(overset/donor/search-range-factor -1 real #f -1)
(overset/donor/search-method 4 integer #f 4)
(overset/fill-donors? #t boolean #f #t)
(overset/minimize/dead-to-solve-removal-method 0 integer #f 0)
(overset/minimize/receptor-to-dead-conv-method 1 integer #f 1)
(overset/minimize/solve-island-flood-filling-from-walls-only? #f boolean #f #f)
(overset/minimize/solve-island-removal-check-donor? #t boolean #f #t)
(overset/minimize/solve-island-removal-method 1 integer #f 1)
(overset/minimize/peel-layers 0 integer #f 0)
(overset/minimize/serial-same-as-parallel? #f boolean #f #f)
(overset/minimize/donor-neighbor-check? #f boolean #f #f)
(overset/minimize-overlap? #t boolean #f #t)
(overset/cut/modified-parameters? #f boolean #f #f)
(overset/cut/cache-extended-threads? #t boolean #f #t)
(overset/cut/full-extended-threads? #f boolean #f #f)
(overset/cut/cut-seed-zones () integer-list #f ())
(overset/cut/cut-seeds () () #f ())
(overset/cut/cut-seed-cell-at-mixed-dead-cell-nodes? #t boolean #f #t)
(overset/cut/cut-seed-cell-at-overset-threads? #t boolean #f #t)
(overset/cut/cut-seed-cell-at-cut-threads? #f boolean #f #f)
(overset/cut/cut-seed-cell-for-all-components? #f boolean #f #f)
(overset/cut/cut-seed-cell-for-cut-free-components? #t boolean #f #t)
(overset/cut/search-tries 50 integer #f 50)
(overset/cut/unresolved-cut-thread-check? #f boolean #f #f)
(overset/cut/seed-cluster-ignore-local? #f boolean #f #f)
(overset/cut/seed-cluster-ignore-size 0 integer #f 0)
(overset/cut/flood-fill-max-level 0 integer #f 0)
(overset/cut/flood-fill? #t boolean #f #t)
(overset/cut/point-in-cell-method 2 integer #f 2)
(overset/cut/unmark-wrong-outside-nodes? #t boolean #f #t)
(overset/cut/in-out-node-mark-per-zone #f boolean #f #f)
(overset/cut/in-out-node-mark-max-face-warp 5 real #f 5)
(overset/cut/in-out-node-mark-max-feature-angle -1 real #f -1)
(overset/cut/in-out-node-mark-angle 0.001 real #f 0.001)
(overset/cut/in-out-node-mark-tol -1 real #f -1)
(overset/cut/in-out-node-mark-method 0 integer #f 0)
(overset/cut/uncut-dead-cell-islands? #f boolean #f #f)
(overset/cut/thin-cut-aspect-ratio 5 real #f 5)
(overset/cut/thin-cut-nlayer 1 integer #f 1)
(overset/cut/partial-clip-polygon-scale-factor 1.02 real #f 1.02)
(overset/cut/partial-face-scale-factor 0.95 real #f 0.95)
(overset/cut/partial-area-fraction-max 0.98 real #f 0.98)
(overset/cut/partial-area-fraction-min 0.001 real #f 0.001)
(overset/cut/partial-cut-faces? #t boolean #f #t)
(overset/cut/feature-angle-factor 1.25 real #f 1.25)
(overset/cut/feature-angle -1 real #f -1)
(overset/cut/face-search-range-factor 1.05 real #f 1.05)
(overset/cut/face-overlap-epsilon-tolerance 1 real #f 1)
(overset/cut/overlap-boundaries () integer-list #f ())
(overset/cut/overlap-boundary-relative-tolerance 5 real #f 5)
(overset/cut/overlap-boundary-check? #t boolean #f #t)
(overset/cut/cut-control () () #f ())
(overset/require-background-grid? #f boolean #f #f)
(overset/allow-mesh-interfaces? #t boolean #f #t)
(overset/allow-non-fluid-zones? #f boolean #f #f)
(overset/auto-detect-geometry? #t boolean #f #t)
(overset/auto-create-default-interface? #t boolean #f #t)
(overset/interfaces () () #f ())
(overset/available? #t boolean #f #t)
(overset/incremental-neighbor-count 0 integer #f 0)
(overset/use-incremental-neighborhood? #f boolean #f #f)
(solid/transient/mspec-data () () #f ())
(mgrid/transient/mspec-data () () #f ())
(mrf/transient/rotate-gravity? #t boolean #f #t)
(mrf/transient/mspec-data () () #f ())
(nonconformal/general-parallel-exchange-type 0 integer #f 0)
(nonconformal/use-general-parallel-exchange? #t boolean #f #t)
(si/relative-solid-data () () #f ())
(si/relative-mrf-data () () #f ())
(si/relative-mgrid-data () () #f ())
(si/apply-opt? #t boolean #f #t)
(nonconformal/padding-fraction 0.25 real #f 0.25)
(nonconformal/water-tight-numerics? #f boolean #f #f)
(nonconformal/add-new-child-interior? #f boolean #f #f)
(nonconformal/area-fraction-ff? #t boolean #f #t)
(nonconformal/use-sided-area-vector? #t boolean #f #t)
(nonconformal/new-snci? #t boolean #f #t)
(nonconformal/options/static? #f boolean #f #f)
(nonconformal/auto-create/nonoverlap-tolerance-for-display 0.8 real #f 0.8)
(nonconformal/auto-create/keep-empty-interface? #f boolean #f #f)
(nonconformal/auto-create/enable-optimized-pairing? #t boolean #f #t)
(nonconformal/auto-create/pairing-between-interface-zone-only? #f boolean #f #f)
(nonconformal/auto-create/pairing-between-diff-cell-zone-only? #f boolean #f #f)
(nonconformal/auto-create/si-name-length 25 integer #f 25)
(nonconformal/auto-create/naming-option 1 integer #f 1)
(nonconformal/auto-create/default-name-prefix "intf" string #f "intf")
(nonconformal/auto-create/max-gtol-length-factor 5 real #f 5)
(nonconformal/auto-create/gtol-length-factor 1 real #f 1)
(nonconformal/auto-create/adjustable-tolerance? #f boolean #f #f)
(nonconformal/auto-create/one-to-one-pairing? #f boolean #f #f)
(nonconformal/post-processing? #f boolean #f #f)
(nonconformal/auto-create/proximity-tolerance 0.5 real #f 0.5)
(nonconformal/auto-create/apply-mapped-option-at-solids? #f boolean #f #f)
(nonconformal/auto-create/auto-pairing-one-to-one? #t boolean #f #t)
(nonconformal/enable-pmn-for-virtpoly-lefthanded-faces? #t boolean #f #t)
(nonconformal/mapped/auto? #f boolean #f #f)
(nonconformal/mapped/with-limitations? #t boolean #f #t)
(nonconformal/mapped/check-many-to-many? #f boolean #f #f)
(nonconformal/mapped/no-leftover-if-fully-mapped? #t boolean #f #t)
(nonconformal/mapped/enforce-area-conservation? #t boolean #f #t)
(nonconformal/mapped/gtol-length-factor 1 real #f 1)
(nonconformal/mapped/gtol-absolute-value 0 real #f 0)
(nonconformal/use-pre-16-release-naming-conventions? #f boolean #f #f)
(nonconformal/disable-side-switch? #f boolean #f #f)
(nonconformal/overintersect-check-relaxation-factor 1.25 real #f 1.25)
(nonconformal/normal-check-relaxation-factor 1 real #f 1)
(nonconformal/use-sided-centroid? #t boolean #f #t)
(nonconformal/use-parent-centroid? #t boolean #f #t)
(nonconformal/interface-options 0 integer #f 0)
(nonconformal/mapped? #f boolean #f #f)
(nonconformal/with-node-coordinates? #t boolean #f #t)
(nonconformal/matching/allow-overlap? #t boolean #f #t)
(nonconformal/matching/smallest-area-tolerance-factor 1e-08 real #f 1e-08)
(nonconformal/matching/angular-tolerance 89 real #f 89)
(nonconformal/matching/remove-left-handed-faces? #f boolean #f #f)
(nonconformal/matching/local-area-threshold 0.5 real #f 0.5)
(nonconformal/matching/global-area-threshold 0.01 real #f 0.01)
(nonconformal/enable-double-solid-sided-coupled-wall? #f boolean #f #f)
(nonconformal/preserve-steady? #t boolean #f #t)
(nonconformal/pitch-tolerance 1 real #f 1)
(si/enforce-cont-after-bc? #f boolean #f #f)
(nonconformal/force-stretched-interfaces? #f boolean #f #f)
(phaselag/auto-create/default-name-prefix "phase-lag-intf" string #f "phase-lag-intf")
(phaselag/ghost-cell-layer-type 2 integer #f 2)
(phaselag/ghost-cell-layer-count 2 integer #f 2)
(phaselag/copy-grad? #t boolean #f #t)
(nonconformal/allow-side-periodic-wall-interface? #f boolean #f #f)
(nonconformal/interface-zone-types () () #f ())
(nonconformal/new-proximity-algo? #f boolean #f #f)
(nonconformal/angular-tolerance 45 real #f 45)
(nonconformal/normal-tolerance-factor 0.1 real #f 0.1)
(nonconformal/smallest-area-tolerance-factor-nonoverlap 0.005 real #f 0.005)
(nonconformal/smallest-area-tolerance-factor 1e-05 real #f 1e-05)
(nonconformal/smallest-virtpoly-size 1e-18 real #f 1e-18)
(nonconformal/enhanced-intersection-lookup? #t boolean #f #t)
(nonconformal/ignore-proximity-test? #f boolean #f #f)
(nonconformal/max-nodes-per-voxel 100 integer #f 100)
(nonconformal/verbosity 0 integer #f 0)
(nonconformal/correct-virtpoly-face-handedness? #f boolean #f #f)
(nonconformal/virtual-polygons? #t boolean #f #t)
(nonconformal/periodic-is-matching? #t boolean #f #t)
(saved-si-member-thread-vars () () #f ())
(cached-interfaces-ids-and-names () () #f ())
(nonconformal/intf-properties () () #f ())
(sliding-interfaces-one-to-one-old () () #f ())
(sliding-interfaces-one-to-one () () #f ())
(sliding-interfaces () () #f ())
(list-of-tables () () #f ())
(solvertime 0 real #f 0)
(flcai/verbosity 0 integer #f 0)
(user-defined-db-name "" string #f "")
(user-defined-database? #f boolean #f #f)
(material/property-warnings 1 integer #f 1)
(material/sat-clipping-option 1 integer #f 1)
(material/independent-rgp-tables-for-properties? #f boolean #f #f)
(material/use-mix-conductivity-combination-avg 0 integer #f 0)
(material/cueos-cp-departure-limit 5 real #f 5)
(material/blended-table-derivatives? #t boolean #f #t)
(materials ((air fluid (chemical-formula . #f) (density (constant . 1.225) (compressible-liquid 101325 1.225 142000 1 1.1 0.9)) (specific-heat (constant . 1006.43) (polynomial piecewise-polynomial (100 1000 1161.48214452351 -2.36881890191577 0.0148551108358867 -5.03490927522584e-05 9.9285695564579e-08 -1.11109658897742e-10 6.54019600406048e-14 -1.57358768447275e-17) (1000 3000 -7069.81410143802 33.7060506468204 -0.0581275953375815 5.42161532229608e-05 -2.936678858119e-08 9.237533169567681e-12 -1.56555339604519e-15 1.11233485020759e-19)) (polynomial nasa-9-piecewise-polynomial (200 1000 2898903 -56496.26 1437.799 -1.653609 0.003062254 -2.279138e-06 6.272365e-10) (1000 6000 69324940 -361053.2 1476.665 -0.06138349 2.027963e-05 -3.075525e-09 1.888054e-13))) (thermal-conductivity (constant . 0.0242)) (viscosity (constant . 1.7894e-05) (sutherland 1.716e-05 273.11 110.56) (power-law 1.716e-05 273.11 0.666) (blottner-curve-fit 0.0307 0.23 -10.8)) (molecular-weight (constant . 28.966)) (characteristic-vibrational-temperature (constant . 2686)) (lennard-jones-length (constant . 3.711)) (lennard-jones-energy (constant . 78.59999999999999)) (thermal-accom-coefficient (constant . 0.9137)) (velocity-accom-coefficient (constant . 0.9137)) (formation-entropy (constant . 194336)) (reference-temperature (constant . 298.15)) (critical-pressure (constant . 3758000)) (critical-temperature (constant . 132.3)) (acentric-factor (constant . 0.033)) (critical-volume (constant . 0.002857)) (electric-conductivity (constant . 1e-09)) (dual-electric-conductivity (constant . 1e-09)) (therm-exp-coeff (constant . 0)) (speed-of-sound (none . #f))) (aluminum solid (chemical-formula . al) (density (constant . 2719)) (specific-heat (constant . 871) (polynomial nasa-9-piecewise-polynomial (200 1000 1542807 5735.686 743.4314000000001 0.06124886 -7.495425e-05 4.740278e-08 -1.215476e-11) (1000 6000 -9000630 35984.76 726.2905 0.0238426 -4.71308e-06 -3.072811e-10 1.557189e-13) (6000 20000 -155330700000 117170100 -33352.98 4.774677 -0.0003297569 1.106924e-08 -1.447104e-13))) (atomic-number (constant . 13)) (thermal-conductivity (constant . 202.4)) (formation-entropy (constant . 164448.08)) (electric-conductivity (constant . 35410000)) (dual-electric-conductivity (constant . 2.3677)) (magnetic-permeability (constant . 1.257e-06)) (struct-youngs-modulus (constant . 70000000000)) (struct-poisson-ratio (constant . 0.32)))) () #f ())
(proximity/threads () integer-list #f ())
(proximity/faces-per-twig 50 integer #f 50)
(optics/monitor/enable? #f boolean #f #f)
(optics/beam-grids () () #f ())
(optics/run-avg/time-window/max-size 1 real #f 1)
(optics/run-avg/time-window/reset-at-prerun? #f boolean #f #f)
(optics/sampling/steady/iters 1 integer #f 1)
(optics/sampling/unsteady/time-steps 1 integer #f 1)
(optics/sampling/unsteady/time-period 1 real #f 1)
(optics/sampling/unsteady/basis 0 integer #f 0)
(optics/density-interpolation/order 1 integer #f 1)
(optics/refractive-index/model/kgd-constant 0.000227 real #f 0.000227)
(optics/refractive-index/model 0 integer #f 0)
(optics/beam/aperture/shape 0 integer #f 0)
(optics/beam/ray-npnts 100 integer #f 100)
(optics/on? #f boolean #f #f)
(optics/post-processing? #t boolean #f #t)
(optics/available? #t boolean #f #t)
(mda/cht/apply-heat-flux-bc #f boolean #f #f)
(mda/cht/single-session/delete-group-after-solve? #t boolean #f #t)
(mda/cht/single-session/manipulate-sliding-interfaces? #f boolean #f #f)
(mda/cht/single-session/manipulate-face-shadow-pairs? #f boolean #f #f)
(mda/cht/single-session/couple-after-solve? #t boolean #f #t)
(mda/cht/single-session/verbosity 0 integer #f 0)
(mda/cht/laplace-repart? #f boolean #f #f)
(mda/cht/iters-per-tstep 20 integer #f 20)
(mda/cht/solid-tsteps-num 1 integer #f 1)
(mda/cht/fluid-tsteps-num 1 integer #f 1)
(mda/cht/iters-num 1 integer #f 1)
(mda/cht/exchange-time-interval 1 real #f 1)
(mda/cht/fluid-send-data/run-avg? #t boolean #f #t)
(mda/cht/solid-has-bigger-time-step? #t boolean #f #t)
(mda/cht/solid-to-fluid-time-steps-ratio 10 integer #f 10)
(mda/cht/exchange-frequency 10 integer #f 10)
(mda/cht/exchange-type 3 integer #f 3)
(mda/cht/server-has-fluid? #t boolean #f #t)
(mda/cht/starting-case-data-file-name "mda_cht_start" string #f "mda_cht_start")
(mda/cht/single-session/implicit? #t boolean #f #t)
(mda/cht/single-session? #t boolean #f #t)
(mda/cht/debug-messages? #f boolean #f #f)
(mda/cht? #f boolean #f #f)
(mda/local-entity-map/cell-locator/search-method 1 integer #f 1)
(mda/local-entity-map/cell-locator/gradient-based? #f boolean #f #f)
(mda/one-sided-communication? #f boolean #f #f)
(mda/helper/gui? #f boolean #f #f)
(mda/starting-data-file-name "" string #f "")
(mda/start-with-data-file? #f boolean #f #f)
(mda/starting-case-file-name "" string #f "")
(mda/save-starting-files-when-read? #f boolean #f #f)
(mda? #t boolean #f #t)
(gpuapp/print-subiteration-residuals? #f boolean #f #f)
(gpuapp/allowed-thread-count-for-setup 1 integer #f 1)
(gpuapp/write-partitioned-case "" string #f "")
(gpuapp/allow-auto-convert-settings? #t boolean #f #t)
(gpuapp/allow-species? #f boolean #f #f)
(gpuapp/divergence-check-threshold -0.1 real #f -0.1)
(gpuapp/aggregation-type "joe" string #f "joe")
(gpuapp/scale-transient-residual? #f boolean #f #f)
(gpuapp/limited-p-recon? #t boolean #f #t)
(gpuapp/temporary-fixes () string-list #f ())
(gpuapp/upload-metric? #f boolean #f #f)
(gpuapp/allow-stats? #f boolean #f #f)
(gpuapp/allow-smooth-restart? #t boolean #f #t)
(gpuapp/allow-wall-distance-upload? #f boolean #f #f)
(gpuapp/allow-initial-solution-upload? #f boolean #f #f)
(gpuapp/allow-coupled? #f boolean #f #f)
(gpuapp/devices "" string #f "")
(gpuapp/residuals () list #f ())
(cromwell/epsilon-residual? #t boolean #f #t)
(cromwell/k-residual? #t boolean #f #t)
(cromwell/zvelocity-residual? #t boolean #f #t)
(cromwell/yvelocity-residual? #t boolean #f #t)
(cromwell/xvelocity-residual? #t boolean #f #t)
(cromwell/pressure-residual? #t boolean #f #t)
(app/parallel/gpu/cpu-operations-threads 1 integer #f 1)
(app/parallel/cpu/meshing-num-threads 0 integer #f 0)
(app/parallel/cpu/solver-num-threads 1 integer #f 1)
(app/auto-max-perf? #t boolean #f #t)
(lb/wall/mark-srnd-wall-dead? #t boolean #f #t)
(lb/wall/shallow-interp 0 integer #f 0)
(lb/collide-coeffs/cw 0.5 real #f 0.5)
(lb/collide-coeffs/cs 0.1 real #f 0.1)
(lb/collide-coeffs/sq 1.92 real #f 1.92)
(lb/collide-coeffs/s16 1.92 real #f 1.92)
(lb/collide-coeffs/s2 1.14 real #f 1.14)
(lb/collide-coeffs/s1 1.63 real #f 1.63)
(lb/use-wall-octs-in-cloud? #t boolean #f #t)
(lb/valid-cloud-size 5 integer #f 5)
(lb/wall/local-recon-dof -1 integer #f -1)
(lb/wall/maxyplus 5000 real #f 5000)
(lb/wall/alternate-wf 4 integer #f 4)
(lb/wall/alternate-xi? #t boolean #f #t)
(lb/collision/wall/mrt-specific 1 integer #f 1)
(lb/collision/re_max 5 real #f 5)
(lb/collision/p-out/re-limited? #t boolean #f #t)
(lb/collision/sym/re-limited? #t boolean #f #t)
(lb/read-parent-data? #f boolean #f #f)
(lb/read-region-data? #t boolean #f #t)
(lb/write-parent-data? #f boolean #f #f)
(lb/write-region-data? #t boolean #f #t)
(lb/dump-pops 0 integer #f 0)
(lb/initialize-compute-from " " string #f " ")
(lb/boundary-size 0.1 real #f 0.1)
(lb/ref-steps 1 integer #f 1)
(lb/mesh-size 0.1 real #f 0.1)
(lb/number-of-timesteps 0 integer #f 0)
(lb/views () list #f ())
(lb/animations-data-state () list #f ())
(lb/solution-animations () list #f ())
(lb/auto-save () list #f ())
(lb/report-definitions () list #f ())
(lb/mesh-refinement-box () list #f ())
(lb/custom-boundary-size () list #f ())
(lb/parallel-octree-mesher-group-id -1 integer #f -1)
(lb/symmetry-reflection? #t boolean #f #t)
(lb/velocity-inlet-momentum-exchange? #f boolean #f #f)
(lb/pressure-outlet-non-equilibrium-extrapolation? #t boolean #f #t)
(lb/non-reflecting-pressure-bc? #t boolean #f #t)
(lb/p-outlet-zeroth-order-extrapolation? #t boolean #f #t)
(lb/spatial-interp-p-outlet? #t boolean #f #t)
(lb/cut-links-at-baffles? #t boolean #f #t)
(lb/post/revert-point-creation? #f boolean #f #f)
(lb/post/boundary-clip/disable? #f boolean #f #f)
(lb/post/boundary-clip/log-details-for-cell -1 integer #f -1)
(lb/post/use-boundary-domain-zones? #t boolean #f #t)
(lb/laminar-bc-option 1 integer #f 1)
(lb/solve-option 1 integer #f 1)
(lb/unified-boundary-treatment 1 integer #f 1)
(lb/reporting-interval 100 integer #f 100)
(lb/pressure-wave-damping/timesteps 0 integer #f 0)
(lb/pressure-wave-damping/epsilon 0.025 real #f 0.025)
(lb/dt 1e-05 real #f 1e-05)
(lb/max-mach 0.05 real #f 0.05)
(lb/timestep-options "Fixed" string #f "Fixed")
(lb/models/viscous "Smagorinsky" string #f "Smagorinsky")
(lb/time-step 0 integer #f 0)
(lb/flow-time 0 real #f 0)
(lb/tolerant-check? #t boolean #f #t)
(lb/epsilon-factor 0.001 real #f 0.001)
(lb/octree-closest-pt-mode 1 integer #f 1)
(partition/nmachines-per-group 1 integer #f 1)
(partition/master-only? #f boolean #f #f)
(parallel/migration-buffer-length-min 10000 integer #f 10000)
(parallel/migration-buffer-length 100000 integer #f 100000)
(parallel/migration-buffer-size-min 1000000 integer #f 1000000)
(parallel/migration-buffer-size 10000000 integer #f 10000000)
(partition/partition-count 0 integer #f 0)
(partition/require-group-partition? #t boolean #f #t)
(partition/coeff "" string #f "")
(partition/smooth/aspect-ratio -1 real #f -1)
(partition/band/new? #t boolean #f #t)
(partition/band/record? #f boolean #f #f)
(partition/band/by-cell-type/record? #f boolean #f #f)
(partition/band/by-cell-type/nfilter 4 integer #f 4)
(partition/band/by-cell-type/nband 2 integer #f 2)
(partition/band/svar -1 integer #f -1)
(partition/band/nfilter 4 integer #f 4)
(partition/band/nband 2 integer #f 2)
(partition/layer/base () integer-list #f ())
(partition/layer/use? #f boolean #f #f)
(partition/laplace/metis/itr 1000 real #f 1000)
(partition/laplace/metis/remove-duplicate-adjncy? #f boolean #f #f)
(partition/laplace/method "Metis" string #f "Metis")
(partition/laplace/bounded-prism-cells/aspect-ratio-correction? #t boolean #f #t)
(partition/laplace/filter-weights? #f boolean #f #f)
(partition/laplace/hist/use-ratio-cutoff? #f boolean #f #f)
(partition/laplace/hist/cutoff 70 real #f 70)
(partition/laplace/hist/nbins 100 integer #f 100)
(partition/laplace/hist/spacing "auto" string #f "auto")
(partition/laplace/solid-ratio-cutoff 0.2 real #f 0.2)
(partition/laplace/use-cell-wt? #f boolean #f #f)
(partition/laplace/use-multi-wt? #t boolean #f #t)
(partition/laplace/smooth 1 integer #f 1)
(partition/laplace/level -1 integer #f -1)
(partition/laplace/aspect-ratio/default 10 real #f 10)
(partition/laplace/aspect-ratio -1 real #f -1)
(partition/laplace/auto? #f boolean #f #f)
(partition/laplace/use? #f boolean #f #f)
(partition/check-partition-method? #f boolean #f #f)
(partition/metis/minimize-communication? #t boolean #f #t)
(partition/ubvec-constraint 1.05 real #f 1.05)
(partition/ubvec 1.005 real #f 1.005)
(partition/encapsulate-hex-core? #f boolean #f #f)
(partition/balance/adaption/interval 10 integer #f 10)
(partition/balance/adaption/auto? #t boolean #f #t)
(partition/balance/adaption/threshold 5 real #f 5)
(partition/weight/filter/metis/min-cell-cutoff 1 real #f 1)
(partition/weight/filter/metis/factor 0.9 real #f 0.9)
(partition/weight/filter/metis/use? #t boolean #f #t)
(partition/weight/filter/log_base 1.1 real #f 1.1)
(partition/weight/filter/max-wgt-ratio 500 integer #f 500)
(partition/weight/filter/beta 0.7 real #f 0.7)
(partition/weight/filter/alpha -15 real #f -15)
(partition/weight/filter/max 25000 integer #f 25000)
(partition/weight/filter/min 10000 integer #f 10000)
(partition/weight/filter/method 1 integer #f 1)
(partition/weight/filter/use? #f boolean #f #f)
(partition/weight/overset/receptor-cell-weight 1 real #f 1)
(partition/weight/overset/solve-cell-weight 10 real #f 10)
(partition/weight/overset/use? #f boolean #f #f)
(partition/weight/do/use? #f boolean #f #f)
(partition/balance/multi-physics/interval 10 integer #f 10)
(partition/balance/multi-physics/auto? #t boolean #f #t)
(partition/balance/multi-physics/threshold 10 real #f 10)
(partition/balance/multi-physics/use? #f boolean #f #f)
(partition/weight/isat/iter-average 100 integer #f 100)
(partition/weight/isat/value 1 real #f 1)
(partition/weight/isat/user-defined? #f boolean #f #f)
(partition/weight/isat/use? #f boolean #f #f)
(partition/weight/face-area/value 0 real #f 0)
(partition/weight/face-area/user-defined? #f boolean #f #f)
(partition/weight/face-area/use? #f boolean #f #f)
(partition/weight/vof/value 1 real #f 1)
(partition/weight/vof/user-defined? #f boolean #f #f)
(partition/weight/vof/use? #f boolean #f #f)
(partition/weight/solid/cutoff 0.3 real #f 0.3)
(partition/weight/solid/value 0.1 real #f 0.1)
(partition/weight/solid/user-defined? #f boolean #f #f)
(partition/weight/solid/use? #t boolean #f #t)
(partition/weight/dpm/use-face-weight? #f boolean #f #f)
(partition/weight/dpm/cutoff 0.05 real #f 0.05)
(partition/weight/dpm/value 1 real #f 1)
(partition/weight/dpm/user-defined? #f boolean #f #f)
(partition/weight/dpm/use? #f boolean #f #f)
(partition/weight/nface/value 2 real #f 2)
(partition/weight/nface/user-defined? #t boolean #f #t)
(partition/weight/nface/use? #t boolean #f #t)
(partition/solid/abs-fluid-cell-deviation 0.05 real #f 0.05)
(partition/solid/repartition-after-read-case? 0 integer #f 0)
(parallel/virtual-machine/ranks-per-machine-min 10 integer #f 10)
(parallel/virtual-machine/ranks-per-machine -1 integer #f -1)
(partition/auto/laplace/max-machine-memory-load 0.7 real #f 0.7)
(partition/auto/laplace/aspect-ratio 10 real #f 10)
(partition/auto/laplace/check-aspect-ratio 100 real #f 100)
(partition/auto/laplace/use? #f boolean #f #f)
(partition/auto/mwp-cell-zone-info () integer-list #f ())
(partition/auto/mwp-enforce? #f boolean #f #f)
(partition/auto/transfer-mesh-from-tgrid? #f boolean #f #f)
(partition/auto/mwp? #t boolean #f #t)
(partition/auto/applied? #f boolean #f #f)
(partition/auto/weight/nface/enforce? #f boolean #f #f)
(partition/auto/remap? #t boolean #f #t)
(partition/auto/weight/nface/value 2 real #f 2)
(partition/auto/weight/nface/use? #t boolean #f #t)
(partition/force-solid-constraint? #f boolean #f #f)
(partition/model-weighted-partition 1 integer #f 1)
(partition/minimum-elements-for-parallel-sort 0 integer #f 0)
(partition/auto/combine-partitions? #f boolean #f #f)
(partition/auto/fast? #t boolean #f #t)
(partition/auto/force? #f boolean #f #f)
(partition/auto/load-vector () real-list #f ())
(partition/auto/across-zones? #t boolean #f #t)
(partition/auto/pre-test? #f boolean #f #f)
(partition/counter-last-partition 0 integer #f 0)
(partition/auto/use-default? #t boolean #f #t)
(partition/auto/parent/new? #t boolean #f #t)
(partition/auto/method "Metis" string #f "Metis")
(partition/zonal-methods () () #f ())
(partition/stored/method "Metis" string #f "Metis")
(partition/active/method "Metis" string #f "Metis")
(partition/reorder/method "architecture-aware" string #f "architecture-aware")
(partition/reorder? #f boolean #f #f)
(partition/metis-agglomerate? #t boolean #f #t)
(partition/encapsulate-node-pairs? #f boolean #f #f)
(partition/load-vector () real-list #f ())
(partition/across-zones? #t boolean #f #t)
(partition/interface-owner -1 integer #f -1)
(partition/encapsulate-si? #f boolean #f #f)
(partition/encapsulate-owner -1 integer #f -1)
(partition/encapsulate-shell-level -1 integer #f -1)
(partition/restrict-children? #t boolean #f #t)
(partition/metis/use-space-filling-curve? #f boolean #f #f)
(partition/metis/use-edge-weight #t boolean #f #t)
(partition/metis/check-data? #f boolean #f #f)
(partition/metis-edge-max 10 integer #f 10)
(partition/verbosity 1 integer #f 1)
(partition/origin/z 0 real #f 0)
(partition/origin/y 0 real #f 0)
(partition/origin/x 0 real #f 0)
(partition/pre-test? #f boolean #f #f)
(partition/smooth-iter 3 integer #f 3)
(partition/smooth? #t boolean #f #t)
(partition/merge-iter 3 integer #f 3)
(partition/merge? #f boolean #f #f)
(partition/expert? #f boolean #f #f)
(partition/cell-function "" string #f "")
(errorhandling/use-async-signal-unsafe-functions? #f boolean #f #f)
(cache-flush/disabled? #t boolean #f #t)
(cache-flush/swap-cache-max-effect 0.4 real #f 0.4)
(cache-flush/free-cache-min-effect 0.4 real #f 0.4)
(cache-flush/target/reduce-by-mb 0 integer #f 0)
(cache-flush/allocunitsize-in-mb 1 integer #f 1)
(io/case-read/enable-vert-dump-optimization? #f boolean #f #f)
(io/case-read/enable-optimization? #t boolean #f #t)
(io/cff/write-project-files? #t boolean #f #t)
(io/cff/add-missed-data? #t boolean #f #t)
(parallel/point-monitor/check-grid-id? #t boolean #f #t)
(parallel/benchmark/time 0 real #f 0)
(parallel/benchmark/count 0 integer #f 0)
(parallel/mallopt-mmap-threshold 262144 integer #f 262144)
(parallel/partition-zone-flag 0 integer #f 0)
(parallel/htc/acc-do-cycles 2 integer #f 2)
(parallel/htc/acc-do-sweeps-before-convergence-check 1 integer #f 1)
(parallel/htc/acc-do-tolerance 0.001 real #f 0.001)
(parallel/htc/acc-do-sweep-exchange? #t boolean #f #t)
(parallel/htc/acc-do-sweeps 20 integer #f 20)
(parallel/htc/acc-do? #f boolean #f #f)
(parallel/htc/cpu-domain-fraction 0 real #f 0)
(parallel/gpgpu-max 0 integer #f 0)
(parallel/gpgpu-selected () integer-list #f ())
(parallel/metrics-recomputation-optimized? #t boolean #f #t)
(parallel/weights-recompute-boundary-only? #t boolean #f #t)
(parallel/nci-avoid-create-neighborhood? #t boolean #f #t)
(parallel/si-cleanup-fraction 0.3 real #f 0.3)
(parallel/si-cleanup-interval 1000 integer #f 1000)
(parallel/nci-cache-neighborhood 0 integer #f 0)
(parallel/resolve-mid-node-lists-ext? #f boolean #f #f)
(parallel/resolve-duplicate-hanging-nodes? #f boolean #f #f)
(parallel/resolve-node-lists-ext? #t boolean #f #t)
(parallel/full-neighborhood? #f boolean #f #f)
(parallel/add-dgcp-to-int-or-corner? #t boolean #f #t)
(parallel/add-ext-si-bridge-nodes-to-int-or-corner? #t boolean #f #t)
(parallel/neighborhood/debug-always-checks? #f boolean #f #f)
(parallel/neighborhood/fast-corner? #t boolean #f #t)
(parallel/overlap-case-io-facedump-fill-processing? #t boolean #f #t)
(parallel/buffered-case-write-inter-machine-bw-cutoff 10 integer #f 10)
(parallel/fill-iface-edge-with-extended-neighborhood? #t boolean #f #t)
(parallel/extended-neighborhood? #t boolean #f #t)
(parallel/case-read/optimization 0 integer #f 0)
(parallel/data-read/polled-recv? #f boolean #f #f)
(parallel/buffered-case-read-chunk-size 524288 integer #f 524288)
(parallel/allow-node0-read? #f boolean #f #f)
(parallel/buffered-case-read? #f boolean #f #f)
(parallel/thread-number-fixed 1 integer #f 1)
(parallel/thread-number-method 0 integer #f 0)
(parallel/empty-thread-merge-with-head-copy? #f boolean #f #f)
(parallel/openmp-threads -1 integer #f -1)
(parallel/separate-and-order 1 integer #f 1)
(parallel/allow-parallel-case-write? #f boolean #f #f)
(parallel/force-parallel-io? #f boolean #f #f)
(parallel/panfs-layout (4 65536 65535 1 1) integer-list #f (4 65536 65535 1 1))
(parallel/panfs-auto-parameter 0.5 real #f 0.5)
(parallel/migrate-metrics? #t boolean #f #t)
(parallel/use-exchange-face-shadow-svar-message? #t boolean #f #t)
(parallel/node-message/enhanced-update-flag-exchange? #t boolean #f #t)
(parallel/node-message/enhanced? #t boolean #f #t)
(parallel/node-message/p2p? #t boolean #f #t)
(parallel/comm-type-io 1 integer #f 1)
(parallel/comm-type-amg 1 integer #f 1)
(parallel/comm-type 1 integer #f 1)
(parallel/dump-face-send-buffer-size 8 real #f 8)
(parallel/encapsulate-shell? #f boolean #f #f)
(parallel/new-err-handle #t boolean #f #t)
(parallel/remote-shell-cmd "default" string #f "default")
(parallel/remote-shell 1 integer #f 1)
(parallel/remote-arch "auto" string #f "auto")
(parallel/migrate-si-after-adaption? #t boolean #f #t)
(parallel/claim-host-not-filled? #f boolean #f #f)
(parallel/read-case-data-shipping/use-packing? #f boolean #f #f)
(parallel/use-t1-build-grid? #f boolean #f #f)
(parallel/read-case-data-shipping? #t boolean #f #t)
(parallel/data-shipping? #t boolean #f #t)
(parallel/print-mpi-io? #f boolean #f #f)
(parallel/pdat-io? #f boolean #f #f)
(parallel/mpi-io? #f boolean #f #f)
(parallel/data-read-write-in-chunks? #t boolean #f #t)
(parallel/fast-read-section? #t boolean #f #t)
(parallel/fast-read-case? #t boolean #f #t)
(parallel/fast-io? #f boolean #f #f)
(parallel/lam-shutdown-before-exit? #f boolean #f #f)
(parallel/init-io-buffers-before-read? #t boolean #f #t)
(parallel/case-read-use-pack? #t boolean #f #t)
(parallel/debug-case? #f boolean #f #f)
(parallel/auto-spawn? #t boolean #f #t)
(parallel/rc-failed? #f boolean #f #f)
(parallel/balance-threshold 10 real #f 10)
(parallel/balance-adaption? #t boolean #f #t)
(parallel/niter-balance-auto 20 integer #f 20)
(parallel/niter-balance 0 integer #f 0)
(parallel/balance-on-kill #t boolean #f #t)
(parallel/enable-balance #f boolean #f #f)
(parallel/trace-level 0 integer #f 0)
(parallel/read-mesh? #f boolean #f #f)
(parallel/gprof? #f boolean #f #f)
(parallel/max-spawn 8 integer #f 8)
(parallel/time-out 50 integer time 50)
(parallel/nprocs_string "1" string #f "")
(parallel/ruser "" string #f "")
(parallel/rhost "" string #f "")
(parallel/path "" string #f "")
(parallel/function "fluent 2ddp -r22.2.0   -ic=default -node -t1" string #f "")
(parallel/sync-interval 10 integer #f 10)
(parallel/check-verbosity 0 integer #f 0)
(parallel/print-verbosity 1 integer #f 1)
(parallel/max-messages 16 integer #f 16)
(parallel/mask () integer-list #f ())
(parallel/hostsfile "" string #f "")
(parallel/machines () machine-list #f ())
(parallel/hdfio/expert? #f boolean #f #f)
(parallel/hdfio/group -1 integer #f -1)
(parallel/expert/read-face-buffer-opt-max 700000 integer #f 700000)
(parallel/relabel/retain-order? #t boolean #f #t)
(data/single? #f boolean #f #f)
(case/reading-option 0 integer #f 0)
(case/node-mismatch-options 0 integer #f 0)
(case/single? #f boolean #f #f)
(case/save-id? #f boolean #f #f)
(checkpoint/time-step? #f boolean #f #f)
(checkpoint/exit? #f boolean #f #f)
(checkpoint/write-case? #t boolean #f #t)
(checkpoint/restart-filename "" string #f "")
(checkpoint/filename "" string #f "")
(case-config ((rp-seg? . #t) (rp-acoustics? . #f) (rp-optics? . #f) (rp-atm? . #f) (rp-axi? . #f) (rp-des? . #f) (rp-dpm-cache? . #f) (rp-dpm-cache-serial? . #f) (rp-unsteady? . #f) (rp-dual-time? . #f) (rp-amg? . #f) (rf-energy? . #f) (rp-hvac? . #f) (rp-inviscid? . #f) (rp-ke? . #f) (rp-kklw? . #f) (rp-kw? . #t) (rp-lam? . #f) (rp-les? . #f) (rp-structure? . #f) (rp-structure-damping? . #f) (rp-structure-linear? . #f) (rp-structure-nonlinear? . #f) (rp-structure-time? . #f) (rp-lsf? . #f) (rp-net? . #f) (rp-react? . #f) (rp-sa? . #f) (rp-sas? . #f) (rp-sge? . #f) (rp-spe? . #f) (rp-spe-part? . #f) (rp-potential? . #f) (rp-lithium? . #f) (rp-dual-potential? . #f) (rp-electrolysis? . #f) (rp-electro-chem? . #f) (rp-spe-site? . #f) (rp-spe-surf? . #f) (rp-transition-model . none) (rp-trans-one-eqn? . #f) (rp-trans-sst? . #f) (rp-trb-scl? . #t) (rp-turb? . #t) (rp-absorbing-media? . #f) (rp-visc? . #t) (rp-v2f? . #f) (sg-cylindrical? . #f) (sg-disco? . #f) (sg-montecarlo? . #f) (sg-bee-gees? . #f) (sg-crev? . #f) (sg-dpm? . #f) (sg-dqmom-iem? . #f) (sg-dtrm? . #f) (sg-dynmesh? . #f) (sg-overset? . #f) (sg-ecfm? . #f) (sg-geqn? . #f) (sg-hg? . #f) (sg-inert? . #f) (sg-ignite? . #f) (sg-network? . #f) (sg-pcb? . #f) (sg-node-udm? . #f) (sg-noniterative? . #f) (sg-nox? . #f) (sg-melt? . #f) (sg-micro-mix? . #f) (sg-mphase? . #f) (sg-p1? . #f) (rp-sootspecies? . #f) (sg-par-premix? . #f) (sg-pb? . #f) (sg-pdf? . #f) (sg-pdf-transport? . #f) (sg-premixed? . #f) (sg-pull? . #f) (sg-rosseland? . #f) (sg-rsm? . #f) (sg-s2s? . #f) (sg-soot? . #f) (sg-sox? . #f) (sg-spark? . #f) (sg-swirl? . #f) (sg-twotemp? . #f) (sg-udm? . #f) (sg-uds? . #f) (sg-addon? . #f) (sg-addon-loaded? . #f) (sg-vfr? . #f) (sg-solar? . #f) (sg-wetsteam? . #f) (sg-moistair? . #f) (sg-wallfilm? . #f) (hyb-init? . #t) (rp-spe-surf-rc? . #f) (rp-3d? . #f) (rp-double? . #t) (rp-graphics? . #t) (rp-host? . #t) (rp-thread? . #f) (dpm-cache? . #t) (rp-wallfilm? . #f)) () #f ())
(sampling-chunk 1 integer #f 1)
(iteration-chunk 1 integer #f 1)
(reference-tol 1e-06 real #f 1e-06)
(local-ref-zone? #f boolean #f #f)
(reference-thread -1 integer #f -1)
(reference-gamma 1.4 real #f 1.4)
(reference-viscosity 1.7894e-05 real viscosity 1.7894e-05)
(reference-velocity 1 real velocity 1)
(reference-temperature 288.16 real temperature 288.16)
(use-inlet-density -1 integer #f -1)
(use-inlet-density? #f boolean #f #f)
(reference-pressure 0 real pressure 0)
(reference-length 1 real length 1)
(reference-enthalpy 0 real specific-energy 0)
(reference-density 1.225 real density 1.225)
(reference-depth 1 real depth 1)
(reference-area 1 real area 1)
(restart/identical/reset-pdf? #f boolean #f #f)
(restart/identical-at-any-time? #f boolean #f #f)
(restart/identical-from-saved-data? #f boolean #f #f)
(restart/deterministic? #f boolean #f #f)
(reorder/domain/after-update-physical-time? #f boolean #f #f)
(reorder/domain/after-laplace-repart? #f boolean #f #f)
(reorder/domain/label-cells-and-faces? #t boolean #f #t)
(reorder/domain/after-migration? #f boolean #f #f)
(reorder/domain/verbose #t boolean #f #t)
(reorder/thread/at-mesh-read? #f boolean #f #f)
(reorder/amg-boundary-seed-unstructured-only? #t boolean #f #t)
(reorder/amg-boundary-seed? #t boolean #f #t)
(reorder/amg 1 integer #f 1)
(reorder/at-read 3 integer #f 3)
(reorder/across-zone? #f boolean #f #f)
(reorder/boundary-thread-ids () integer-list #f ())
(reorder-expert? #f boolean #f #f)
(reorder/method "reverse-cuthill-mckee" string #f "reverse-cuthill-mckee")
(reorder/reordered 0 integer #f 0)
(pressure-reference/changed? #t boolean #f #t)
(pressure-reference/z 0 real length 0)
(pressure-reference/y 0 real length 0)
(pressure-reference/x 0 real length 0)
(gravity/z 0 real acceleration 0)
(gravity/y 0 real acceleration 0)
(gravity/x 0 real acceleration 0)
(gravity? #f boolean #f #f)
(operating-pressure 101325 real pressure 101325)
(initial-operating-pressure 101325 real pressure 101325)
(floating-operating-pressure? #f boolean #f #f)
(positivity-limit 0.2 real #f 0.2)
(boundary-values? #t boolean #f #t)
(separate-thread-id-list () list #f ())
(uncoupled-face-zones-original-state () () #f ())
(deactivated-original-state () () #f ())
(deactivated-dynamic-zones () () #f ())
(append-rp-list () symbol-list #f ())
(scanned-thread-list () symbol-list #f ())
(geom-thread-id/name () list #f ())
(reading-surface-mesh? #f boolean #f #f)
(grid/compact-memory-blocks-after-case-read? #t boolean #f #t)
(grid/msn? #t boolean #f #t)
(interpolate-during-zone-replacing? #t boolean #f #t)
(cell-zone-deletion? #f boolean #f #f)
(mesh-replacing? #f boolean #f #f)
(zone-replacing? #f boolean #f #f)
(grid-appending? #f boolean #f #f)
(grid/partitions? #f boolean #f #f)
(grid/level 0 integer #f 0)
(streamf/nit 8 integer #f 8)
(allow-all-pr-dis-schemes? #f boolean #f #f)
(activate-power-law-scheme? #f boolean #f #f)
(allow-expert-dis-schemes? #f boolean #f #f)
(flowf-expert? #f boolean #f #f)
(node/level 0 integer #f 0)
(refine/cell-distance 1 integer #f 1)
(refine/split-ratio 0.5 real #f 0.5)
(refine/maxv 1 real volume 1)
(boundary-layer/normal-deviation-cutoff 0.8660254040000001 real #f 0.8660254040000001)
(boundary-layer/prism-count-cutoff 0.07000000000000001 real #f 0.07000000000000001)
(boundary-layer/check-types? #f boolean #f #f)
(boundary-layer/initialized? #f boolean #f #f)
(boundary-layer/max-depth 256 integer #f 256)
(boundary-layer/persist? #t boolean #f #t)
(boundary-layer/verbosity 0 integer #f 0)
(adapt/optim/gradation/spanning-factor 0.125 real #f 0.125)
(adapt/optim/gradation/scaling 1.02 real #f 1.02)
(adapt/optim/gradation/tolerance 1.05 real #f 1.05)
(adapt/optim/gradation/ratio 1.5 real #f 1.5)
(adapt/optim/gradation/enable? #t boolean #f #t)
(adapt/optim/limiting/mesh/coarsen-factor 10 real #f 10)
(adapt/optim/limiting/mesh/refine-factor 0.1 real #f 0.1)
(adapt/optim/limiting/mesh/enable? #f boolean #f #f)
(adapt/optim/limiting/metric/anisotropic-ratio -1 real #f -1)
(adapt/optim/limiting/metric/max-length -1 real #f -1)
(adapt/optim/limiting/metric/min-length -1 real #f -1)
(adapt/optim/limiting/metric/enable? #f boolean #f #f)
(adapt/optim/refine/max-iterations 1 integer #f 1)
(adapt/optim/refine/max-length 1.41421356 real #f 1.41421356)
(adapt/optim/refine/enable? #t boolean #f #t)
(adapt/optim/coarsen/max-iterations 1 integer #f 1)
(adapt/optim/coarsen/min-length 0.707106781 real #f 0.707106781)
(adapt/optim/coarsen/enable? #t boolean #f #t)
(adapt/optim/swap/max-iterations 5 integer #f 5)
(adapt/optim/swap/min-quality 0.4 real #f 0.4)
(adapt/optim/swap/enable-bdy-edge-swap? #t boolean #f #t)
(adapt/optim/swap/enable-edge-swap? #t boolean #f #t)
(adapt/optim/swap/enable-face-swap? #t boolean #f #t)
(adapt/optim/swap/enable? #f boolean #f #f)
(adapt/optim/lp 4 real #f 4)
(adapt/optim/multiscale? #t boolean #f #t)
(adapt/optim/target-complexity 100000 real #f 100000)
(adapt/optim/scale-complexity? #t boolean #f #t)
(adapt/optim/metric-field "pressure" string #f "pressure")
(adapt/optim/metric-function -1 integer #f -1)
(adapt/optim/interpolation-method 0 integer #f 0)
(adapt/optim/fixed-threads () integer-list #f ())
(adapt/optim/iterations 5 integer #f 5)
(adapt/optim/verbosity 2 integer #f 2)
(cell-register/max-count-for-display 20000 integer #f 20000)
(adapt/predicates ("max-refine-level" "min-refine-volume" "skip-zero-level-coarsening") string-list #f ("max-refine-level" "min-refine-volume" "skip-zero-level-coarsening"))
(adapt/display/settings () list #f ())
(adapt/overset/inout-mark-dead-cells? #t boolean #f #t)
(adapt/reconstruct-geometry? #f boolean #f #f)
(adapt/unused-mid-node-limit 0 integer #f 0)
(adapt/quality/min 0.01 real #f 0.01)
(adapt/verbosity 0 integer #f 0)
(adapt/yp/min 50 real #f 50)
(adapt/yp/max 500 real #f 500)
(adapt/yp/type 0 integer #f 0)
(adapt/max-passes 10 integer #f 10)
(adapt/region/shape "hexahedron" string #f "hexahedron")
(adapt/region/inside? #t boolean #f #t)
(adapt/region/radius 0 real #f 0)
(adapt/region/zmax 0 real #f 0)
(adapt/region/zmin 0 real #f 0)
(adapt/region/ymax 0 real #f 0)
(adapt/region/ymin 0 real #f 0)
(adapt/region/xmax 0 real #f 0)
(adapt/region/xmin 0 real #f 0)
(adapt/boundary/volume-decay 1 real #f 1)
(adapt/boundary/volume-target 1 real #f 1)
(adapt/boundary/distance-threshold 0 real #f 0)
(adapt/boundary/number-of-cells 1 integer #f 1)
(adapt/coarsen/marker/color "cyan" string #f "cyan")
(adapt/coarsen/marker/size 0.1 real #f 0.1)
(adapt/coarsen/marker/symbol "@" string #f "@")
(adapt/coarsen/expression "" string #f "")
(adapt/coarsen/bit 1 integer #f 1)
(adapt/coarsen? #t boolean #f #t)
(adapt/refine/use-edge-centroids? #t boolean #f #t)
(adapt/refine/marker/color "red" string #f "red")
(adapt/refine/marker/size 0.1 real #f 0.1)
(adapt/refine/marker/symbol "@" string #f "@")
(adapt/refine/expression "" string #f "")
(adapt/refine/bit 0 integer #f 0)
(adapt/refine? #t boolean #f #t)
(adapt/dynamic/print-memory-usage? #f boolean #f #f)
(adapt/dynamic/security-layer-thickness 1 integer #f 1)
(adapt/dynamic/interval 20 integer #f 20)
(adapt/dynamic/list-functions ("Pressure..." "Static Pressure") string-list #f ("Pressure..." "Static Pressure"))
(adapt/dynamic/function "pressure" string #f "pressure")
(adapt/dynamic/sweeps 1 integer #f 1)
(adapt/advanced? #f boolean #f #f)
(adapt/dynamic? #f boolean #f #f)
(adapt/gradient/volume-weight 1 real #f 1)
(adapt/gradient/normalize-per-zone? #f boolean #f #f)
(adapt/gradient/normalization 0 integer #f 0)
(adapt/gradient/method "curvature" string #f "curvature")
(adapt/max-refine-level 2 integer #f 2)
(adapt/maxc 0 integer #f 0)
(adapt/minc 0 integer #f 0)
(adapt/minv 0 real volume 0)
(adapt/threshold/volume-change 2.5 real #f 2.5)
(adapt/threshold/coarsen 0 real #f 0)
(adapt/threshold/refine 10000000000 real #f 10000000000)
(adapt/threads/2.5d () integer-list #f ())
(adapt/threads () integer-list #f ())
(adapt/external? #f boolean #f #f)
(adapt/expression? #t boolean #f #t)
(adapt/balance-option "after" string #f "after")
(adapt/anisotropic/max-nodes 30 integer #f 30)
(adapt/anisotropic/max-depth 0 integer #f 0)
(adapt/anisotropic/status 0 integer #f 0)
(adapt/anisotropic? #f boolean #f #f)
(adapt/global? #t boolean #f #t)
(adapt/status 0 integer #f 0)
(adapt/objects () list #f ())
(prof-ref-frame-list () list #f ())
(interp-method-list () list #f ())
(interp-method 0 integer #f 0)
(distance/crit 1.5 real #f 1.5)
(prmxa-rans 0.52 real #f 0.52)
(prmxcd-rans 0.37 real #f 0.37)
(prmx-adiabatic? #t boolean #f #t)
(prmxmu 0.26 real #f 0.26)
(prmxa 0.52 real #f 0.52)
(prmxcd 0.37 real #f 0.37)
(hvac-species/sct 1 real #f 1)
(hvac-keprt 0.9 real #f 0.9)
(hvac-const 0.039 real #f 0.039)
(drsm-kw-zeta-star 0.5 real #f 0.5)
(drsm-kw-r-w 6.2 real #f 6.2)
(drsm-kw-r-k 12 real #f 12)
(drsm-kw-r-beta 12 real #f 12)
(drsm-kw-alpha-0 0.105 real #f 0.105)
(drsm-c2-omega 0.52 real #f 0.52)
(drsm-c1-omega 1.8 real #f 1.8)
(drsm-c5-ssg 0.4 real #f 0.4)
(drsm-c4-ssg 1.25 real #f 1.25)
(drsm-c3s-ssg 1.3 real #f 1.3)
(drsm-c3-ssg 0.8 real #f 0.8)
(drsm-c2-ssg 4.2 real #f 4.2)
(drsm-c1s-ssg 1.8 real #f 1.8)
(drsm-c1-ssg 3.4 real #f 3.4)
(drsm-c2-wall 0.3 real #f 0.3)
(drsm-c1-wall 0.5 real #f 0.5)
(drsm-c2 0.6 real #f 0.6)
(drsm-c1 1.8 real #f 1.8)
(drsm-bsl-based? #f boolean #f #f)
(drsm-omega-wilcox? #t boolean #f #t)
(drsm-omega-based? #f boolean #f #f)
(drsm-ssg-ps? #f boolean #f #f)
(drsm-linear-ps? #t boolean #f #t)
(drsm-wall-factor-clip? #t boolean #f #t)
(drsm-ps-wall? #t boolean #f #t)
(drsm-lowre-epsilon? #f boolean #f #f)
(drsm-tke-solve? #t boolean #f #t)
(sst-limit-cross-diff-to-n-times-w-destruct 1000000 real #f 1000000)
(sst-linearize-neg-cross-diff? #t boolean #f #t)
(trans-one-eqn-crossflow-crsf 1 real #f 1)
(trans-one-eqn-crossflow? #f boolean #f #f)
(trans-one-eqn-dudn-method 1 integer #f 1)
(trans-one-eqn-tke-term-coef 1 real #f 1)
(trans-one-eqn-csep 1 real #f 1)
(trans-one-eqn-lim-cpg2 3 real #f 3)
(trans-one-eqn-lim-cpg1 1.5 real #f 1.5)
(trans-one-eqn-cpg3 0 real #f 0)
(trans-one-eqn-cpg2 -0.5 real #f -0.5)
(trans-one-eqn-cpg1 1 real #f 1)
(trans-one-eqn-ctu3 1 real #f 1)
(trans-one-eqn-ctu2 1000 real #f 1000)
(trans-one-eqn-ctu1 100 real #f 100)
(trans-intermit-smoothing? #f boolean #f #f)
(trans-sst-geomrgh-const 0 real #f 0)
(trans-sst-rghcor? #f boolean #f #f)
(trans-sst-pk-factor 10 real #f 10)
(trans-sst-production-limiter? #t boolean #f #t)
(trans-sst-kato-launder? #t boolean #f #t)
(trans-sst-s1 2 real #f 2)
(trans-sst-cthetat 0.03 real #f 0.03)
(trans-sst-ce2 50 real #f 50)
(trans-sst-ce1 1 real #f 1)
(trans-sst-ca2 0.06 real #f 0.06)
(trans-sst-ca1 2 real #f 2)
(retheta-inlet-duds? #f boolean #f #f)
(retheta-sig 2 real #f 2)
(intermit-sig 1 real #f 1)
(turb-positive-linearization-separate? #f boolean #f #f)
(kw-dissipation-newton? #t boolean #f #t)
(kw-not-trans-sst-production-limiter? #t boolean #f #t)
(kw-not-trans-sst-kato-launder? #f boolean #f #f)
(kw-sst-min-visc/apply-below-f2-value 0 real #f 0)
(kw-sst-min-visc-ratio 0 real #f 0)
(sst-pk-lam-factor 0 real #f 0)
(sst-po-lam-factor 0 real #f 0)
(sst-pk-factor 10 real #f 10)
(sst-v61? #f boolean #f #f)
(sst-kappa 0.41 real #f 0.41)
(sst-beta-i2 0.0828 real #f 0.0828)
(sst-beta-i1 0.075 real #f 0.075)
(sst-a1 0.31 real #f 0.31)
(sst-sig-w2 1.168 real #f 1.168)
(sst-sig-w1 2 real #f 2)
(sst-sig-k2 1 real #f 1)
(sst-sig-k1 1.176 real #f 1.176)
(geko-creal 0.577 real #f 0.577)
(geko-beta 0.083 real #f 0.083)
(geko-sig-w 1.17 real #f 1.17)
(geko-sig-k 1 real #f 1)
(geko-coeff 2 real #f 2)
(geko-bf-expr "" string #f "")
(geko-bf-lam-low-lim 1 real #f 1)
(geko-bf-lam 25 real #f 25)
(geko-bf-tur 2 real #f 2)
(geko-bf-blam 0.666667 real #f 0.666667)
(geko-bf-blend 0.9 real #f 0.9)
(geko-bf-pre193? #f boolean #f #f)
(geko-cjet-aux 2 real #f 2)
(geko-cjet-v193 0.9 real #f 0.9)
(geko-cmix-expr "" string #f "")
(geko-cmix 0 real #f 0)
(geko-cnw-sub 1.7 real #f 1.7)
(geko-cnw-expr "" string #f "")
(geko-cnw 0.5 real #f 0.5)
(geko-csep-expr "" string #f "")
(geko-csep 1.75 real #f 1.75)
(geko-enforce-wdf? #f boolean #f #f)
(kw-geko-on? #f boolean #f #f)
(geko? #f boolean #f #f)
(bsl-beta-i2 0.0828 real #f 0.0828)
(bsl-beta-i1 0.075 real #f 0.075)
(bsl-sig-w2 1.168 real #f 1.168)
(bsl-sig-w1 2 real #f 2)
(bsl-sig-k2 1 real #f 1)
(bsl-sig-k1 2 real #f 2)
(kw-sig-w 2 real #f 2)
(kw-sig-k 2 real #f 2)
(kw-beta-i 0.07199999999999999 real #f 0.07199999999999999)
(kw-mt0 0.25 real #f 0.25)
(kw-zeta-star 1.5 real #f 1.5)
(kw-r-w 2.95 real #f 2.95)
(kw-r-k 6 real #f 6)
(kw-r-beta 8 real #f 8)
(kw-beta-star-inf 0.09 real #f 0.09)
(kw-alpha-0 0.11111 real #f 0.11111)
(kw-alpha-inf 0.52 real #f 0.52)
(kw-alpha-star-inf 1 real #f 1)
(kw-wall-omega-treatment-r13? #t boolean #f #t)
(kw-vorticity-pk? #f boolean #f #f)
(kw-set-wall-w? #f boolean #f #f)
(kw-shear-mod? #t boolean #f #t)
(kw-low-re-mod? #f boolean #f #f)
(kw-sst-strain? #f boolean #f #f)
(wj-bsl-earsm/beta-fact 1 real #f 1)
(wj-bsl-earsm/cdiff 0 real #f 0)
(wj-bsl-earsm/neq 4.05 real #f 4.05)
(wj-bsl-earsm/c1prime 1.8 real #f 1.8)
(wj-bsl-earsm/cmu 0.09 real #f 0.09)
(wj-bsl-earsm/a4 2.25 real #f 2.25)
(wj-bsl-earsm/a3 1.8 real #f 1.8)
(wj-bsl-earsm/a1 1.245 real #f 1.245)
(kw-wj-bsl-earsm-on? #f boolean #f #f)
(kw-easm-beta 0.83 real #f 0.83)
(kw-easm-gama 0.53 real #f 0.53)
(kw-easm-sig-k 1 real #f 1)
(kw-easm-cmu 0.0895 real #f 0.0895)
(kw-easm-on? #f boolean #f #f)
(kw-sst-on? #t boolean #f #t)
(kw-bsl-on? #f boolean #f #f)
(kw-std-on? #f boolean #f #f)
(kw-any/sas-term-on? #f boolean #f #f)
(turb-any/des-mode-on? #f boolean #f #f)
(des-omega/min-limit 1e-12 real time-inverse 1e-12)
(des-epsilon/min-limit 1e-07 real turbulent-energy-diss-rate 1e-07)
(des-k/min-limit 1e-07 real turbulent-kinetic-energy 1e-07)
(des-limiter-option 4 integer #f 4)
(des-rke-limiter-option 2 integer #f 2)
(des-sa-limiter-option 2 integer #f 2)
(des-iddes-r13-r15? #f boolean #f #f)
(des-sst-on? #f boolean #f #f)
(des-rke-on? #f boolean #f #f)
(des-sa-on? #f boolean #f #f)
(sbes-bf-include-sub-function1? #f boolean #f #f)
(sbes-freestream-one? #f boolean #f #f)
(sbes-csdes 0.4 real #f 0.4)
(sbes-cs 20 real #f 20)
(sbes-sgs-model-option 3 integer #f 3)
(sbes-blending-function-option 2 integer #f 2)
(turb-any/sbes-mode-on? #f boolean #f #f)
(p-func-jaya-mod? #f boolean #f #f)
(p-func-jaya-on? #t boolean #f #t)
(trans-kw-ctaul 4360 real #f 4360)
(trans-kw-calpha-teta 0.035 real #f 0.035)
(trans-kw-cw3 0.3 real #f 0.3)
(trans-kw-cw1 0.44 real #f 0.44)
(trans-kw-cint 0.75 real #f 0.75)
(trans-kw-anu 6.75 real #f 6.75)
(trans-kw-sig-w 1.17 real #f 1.17)
(trans-kw-sig-k 1 real #f 1)
(trans-kw-crnat-new 0.02 real #f 0.02)
(trans-kw-ctscrit 1000 real #f 1000)
(trans-kw-cnatcrit-new 1250 real #f 1250)
(trans-kw-ats 200 real #f 200)
(trans-kw-anat-new 200 real #f 200)
(trans-kw-cr-new 0.12 real #f 0.12)
(trans-kw-clam 2.495 real #f 2.495)
(v2f-alpha 0.6 real #f 0.6)
(v2f-cl 0.23 real #f 0.23)
(v2f-ceta 70 real #f 70)
(v2f-c2 0.3 real #f 0.3)
(v2f-c1 1.4 real #f 1.4)
(v2f-enn 6 real #f 6)
(v2f-kec2 1.9 real #f 1.9)
(v2f-kec1 1.4 real #f 1.4)
(v2f-kecmu 0.22 real #f 0.22)
(coeff-drsm-omega-or-bsl-mu-dok 0.001 real #f 0.001)
(coeff-kw-mu-dok 0.001 real #f 0.001)
(coeff-ke-mu-prod 1 real #f 1)
(coeff-ke-mu-dok 1 real #f 1)
(turb-alt-negative-handling? #f boolean #f #f)
(turb-wf-thermal-han-and-reitz-beta 2.5 real #f 2.5)
(turb-wf-thermal-han-and-reitz-on? #f boolean #f #f)
(turb-wf-ustar-limiter-coef 0.1 real #f 0.1)
(turb-wf-ustar-limiter? #t boolean #f #t)
(turb-pk-compress? #f boolean #f #f)
(turb-non-newton-lb? #f boolean #f #f)
(turb-non-newton? #f boolean #f #f)
(wall-distance/sliding-zones-opt-level 1 integer #f 1)
(wall-distance/fill-wall-roughness? #f boolean #f #f)
(wall-distance/update-synthetic-turbulence? #f boolean #f #f)
(wall-distance/update-roughness? #f boolean #f #f)
(wall-distance/recalc? #t boolean #f #t)
(wall-distance/check-during-computation? #t boolean #f #t)
(wall-distance/quad-correction-nonprojecting? #f boolean #f #f)
(wall-distance/quad-correction-aspect-ratio 100 real #f 100)
(wall-distance/quad-correction? #t boolean #f #t)
(wall-distance-legacy? #f boolean #f #f)
(wall-distance-alternative? #f boolean #f #f)
(wall-distance/multi-threaded 1 integer #f 1)
(wall-distance/method 2 integer #f 2)
(ke-yplus-udf 11.224708 real #f 11.224708)
(ke-elog-udf 9.792999999999999 real #f 9.792999999999999)
(ke-rotation-model? #f boolean #f #f)
(ke-time-scale-clip-const? 0.6 real #f 0.6)
(ke-time-scale-clip? #f boolean #f #f)
(ke-pk-factor 10 real #f 10)
(ke-production-limiter? #f boolean #f #f)
(ke-kato-launder? #f boolean #f #f)
(rng-swirl-const 0.07000000000000001 real #f 0.07000000000000001)
(rng-swirl-on? #f boolean #f #f)
(rng-kec2 1.68 real #f 1.68)
(rng-kec1 1.42 real #f 1.42)
(rng-kecmu 0.08450000000000001 real #f 0.08450000000000001)
(rng-visc-mod-on? #f boolean #f #f)
(rng-ke-on? #f boolean #f #f)
(ke-time-marching? #t boolean #f #t)
(ke-uncoupled? #t boolean #f #t)
(ke-prod-mod #f boolean #f #f)
(ke-source-mod #t boolean #f #t)
(realizable-epsilon? #f boolean #f #f)
(ke-easm-on? #f boolean #f #f)
(ke-realizability-on? #f boolean #f #f)
(ke-compress-const 1 real #f 1)
(rsm-ssg-kec2 1.83 real #f 1.83)
(rke-cmu-rotation? #f boolean #f #f)
(rke-kesige 1.2 real #f 1.2)
(rke-kec2 1.9 real #f 1.9)
(wallprt 0.85 real #f 0.85)
(keprt 0.85 real #f 0.85)
(kesige 1.3 real #f 1.3)
(kesigk 1 real #f 1)
(ke-easm-c4 0.4 real #f 0.4)
(ke-easm-c3 1.25 real #f 1.25)
(ke-easm-c2 0.36 real #f 0.36)
(ke-easm-c1-1 1.8 real #f 1.8)
(ke-easm-c1-0 3.4 real #f 3.4)
(ke-easm-cmu 0.0885 real #f 0.0885)
(kec2-nonlin 1.83 real #f 1.83)
(kec2 1.92 real #f 1.92)
(kec1 1.44 real #f 1.44)
(kecmu 0.09 real #f 0.09)
(ke-two-layer-c-l-mu 0.33 real #f 0.33)
(ke-two-layer-a-mu-norris 50.5 real #f 50.5)
(ke-two-layer-a-mu 70 real #f 70)
(ke-two-layer-option 1 integer #f 1)
(ke-two-layer-delta 40 real #f 40)
(ke-two-layer-rey-c 200 real #f 200)
(ke-rough-wall-treatment-r14? #t boolean #f #t)
(ke-udf-wall? #f boolean #f #f)
(ke-use-k-from-prev-it-in-dok? #f boolean #f #f)
(ke-nwt-ml? #f boolean #f #f)
(ke-scalable-wall? #f boolean #f #f)
(ke-enh-wall? #f boolean #f #f)
(ke-non-eqm #f boolean #f #f)
(ke-std-wall? #t boolean #f #t)
(sas-const 0.11 real #f 0.11)
(sa-des-inlet-turb-i 0 real #f 0)
(sa-des-all-lengths-modified? #t boolean #f #t)
(des-maxedge? #t boolean #f #t)
(rke-des-cdes 0.61 real #f 0.61)
(sst-des-iddes-simplify_omit_fe? #t boolean #f #t)
(sa-des-ddes-cd1 8 real #f 8)
(rke-des-ddes-cd1 20 real #f 20)
(sst-des-ddes-cd1 20 real #f 20)
(sst-des-cdes-i2 0.61 real #f 0.61)
(sst-des-cdes-i1 0.78 real #f 0.78)
(geko-des-cdes 0.61 real #f 0.61)
(sa-des-cdes 0.65 real #f 0.65)
(nut-ke1e-aplus 13.5 real #f 13.5)
(nut-ke1e-c3 7 real #f 7)
(nut-ke1e-c2 1.86 real #f 1.86)
(nut-ke1e-c1 0.144 real #f 0.144)
(nut-cmu 0.09 real #f 0.09)
(nut-imp-diff? #t boolean #f #t)
(nut-prod-const 2 real #f 2)
(nut-prod-modify? #f boolean #f #f)
(sa-kappa 0.4187 real #f 0.4187)
(nut-cw3 2 real #f 2)
(nut-cw2 0.3 real #f 0.3)
(nut-prt 0.667 real #f 0.667)
(nut-cv1 7.1 real #f 7.1)
(nut-cb2 0.622 real #f 0.622)
(nut-cb1 0.1355 real #f 0.1355)
(eles-rli-move-srcs-by-n-cell-layers 0 integer #f 0)
(eles-rli-suppress-src-terms-in-rans-layer? #f boolean #f #f)
(eles-rli-suppress-sas-term-in-rans-layer? #t boolean #f #t)
(synthetic-turb/stg/time-arg-values () real-list #f ())
(synthetic-turb/stg/time-arg-zone-id () integer-list #f ())
(synthetic-turb/stg/rans-ti-min 0 real #f 0)
(synthetic-turb/stg/rans-tvr-min 0 real #f 0)
(synthetic-turb/stg/c-kstep 0.5 real #f 0.5)
(synthetic-turb/stg/c-kmin 0.5 real #f 0.5)
(synthetic-turb/stg/c-kmax 2.882 real #f 2.882)
(synthetic-turb/stg/incremental-time-argument? #t boolean #f #t)
(synthetic-turb/stg/time-argument 1 integer #f 1)
(synthetic-turb-generator-nk 200 integer #f 200)
(synthetic-turb-generator-q 0.95 real #f 0.95)
(vm-sinusoidal-switching? #f boolean #f #f)
(vm-strmws-mean-flow-velo-lat-grad-method 2 integer #f 2)
(vm-eles-rli-axial-fluct-use-grad? #f boolean #f #f)
(vm-max-strmws-fluct-fract 0.8 real #f 0.8)
(vm-eddy-vel 1 real #f 1)
(vm-eddy-size-const 0.5 real #f 0.5)
(vm-grid-scale 1.5 real #f 1.5)
(vm-ls-constant? #f boolean #f #f)
(vm-n-travel 50 real #f 50)
(synthetic-turb/sas-des/adjust-mu_t/sgs-model 3 integer #f 3)
(synthetic-turb-sas_des-adjust-modeled-turb? #t boolean #f #t)
(synthetic-turb-tke-scale-coeff 1 real #f 1)
(synthetic-turb-eddy-length-scale-coeff 1 real #f 1)
(synthetic-turb-convective-time-scale-coeff 1 real #f 1)
(synthetic-turb-eddy-time-scale-coeff 1 real #f 1)
(delta-time-sampled-scr-urea-depo-risk 0 real time 0)
(delta-time-sampled-dpm-volfrac 0 real time -1e-30)
(delta-time-sampled-dpm 0 real time 0)
(idft/animation ((playback-write-video? . #f) (number-of-periods . 1) (time-steps-to-skip . 0) (object . "")) list #f ())
(idft/signal ((frequency . 0) (index . 0) (mode . "") (dataset . "") (field . "")) list #f ())
(rtdft/window "hanning" string #f "hanning")
(rtdft/verbosity 0 integer #f 0)
(delta-time-sampled-datasets 0 real time 0)
(stat-datasetname-index () list #f ())
(statistics-time-steps () real-list #f ())
(statistics-datasets () list #f ())
(save-statistics-datasets? #f boolean #f #f)
(unstat-cffname-index () list #f ())
(save-time-statistics-dpm? #f boolean #f #f)
(cff-unsteady-statistics-freq 0 integer #f 0)
(cff-unsteady-statistics () string-list #f ())
(save-cff-unsteady-statistics? #f boolean #f #f)
(delta-time-sampled-cff 0 real time 0)
(delta-time-sampled-species (0) real-list time ())
(delta-time-sampled-premix 0 real time 0)
(delta-time-sampled-non-premix 0 real time 0)
(delta-time-sampled-force 0 real time 0)
(delta-time-sampled-wall 0 real time 0)
(delta-time-sampled-heat-flux 0 real time 0)
(delta-time-sampled-shear 0 real time 0)
(delta-time-sampled 0 real time 0)
(number-of-samples 0 integer #f 0)
(save-time-statistics-premix? #t boolean #f #t)
(save-time-statistics-non-premix? #t boolean #f #t)
(save-time-statistics-species () string-list #f ())
(save-time-statistics-force? #f boolean #f #f)
(save-time-statistics-wall? #t boolean #f #t)
(save-time-statistics-heat-flux? #t boolean #f #t)
(save-time-statistics-shear? #t boolean #f #t)
(save-time-statistics-at-end? #t boolean #f #t)
(save-time-statistics? #f boolean #f #f)
(save-steady-statistics? #f boolean #f #f)
(les-inlet-random? #f boolean #f #f)
(les-utau-newton-iter? #t boolean #f #t)
(les-enh-wall-fn? #t boolean #f #t)
(les-ww-wall? #f boolean #f #f)
(les-mixed-sgs-on? #f boolean #f #f)
(les-dynamic-compressible-r16? #t boolean #f #t)
(les-dynamic-const-max 0.23 real #f 0.23)
(les-dynamic-pr-num-smooths 1 integer #f 1)
(les-dynamic-pr-min 0.01 real #f 0.01)
(les-dynamic-pr-max 10 real #f 10)
(les-dynamic-const-clip? #t boolean #f #t)
(les-dynamic-species-on? #f boolean #f #f)
(les-dynamic-energy-on? #f boolean #f #f)
(les-dynamic-smag-on? #f boolean #f #f)
(les-dynamic-sgske-on? #f boolean #f #f)
(les-sgske-on? #f boolean #f #f)
(les-wmles-smnsomg/c2 2 real #f 2)
(les-wmles-smnsomg/c1 3 real #f 3)
(les-wmles-smnsomg/cw 0.15 real #f 0.15)
(les-wmles-smnsomg/csmag 0.31 real #f 0.31)
(les-wmles/l-ratio-limit 100 real #f 100)
(les-wmles/cw 0.15 real #f 0.15)
(les-wmles/csmag 0.2 real #f 0.2)
(les-wmles-s_minus_omega-on? #f boolean #f #f)
(les-wmles-sgs-on? #f boolean #f #f)
(les-wale-sgs-mut-near-wall-lim? #t boolean #f #t)
(les-wale-sgs-on-r16? #t boolean #f #t)
(les-rng-sgs-on? #f boolean #f #f)
(les-fvar-const 0.5 real #f 0.5)
(les-sgske-ceps 1 real #f 1)
(les-sgske-prt 1 real #f 1)
(les-sgske-visc-const 0.05 real #f 0.05)
(les-wale-const 0.325 real #f 0.325)
(les-rng-const 0.157 real #f 0.157)
(les-smag-wmles/relax 0.5 real #f 0.5)
(use-smag-wmles? #f boolean #f #f)
(les-smag-const 0.1 real #f 0.1)
(les-2d? #f boolean #f #f)
(turbulence/consistent-specified-stress-bc? #t boolean #f #t)
(turbulence/machine-learning-wj-earsm-beta-coeffs? #f boolean #f #f)
(turbulence/machine-learning? #f boolean #f #f)
(turbulence/trans/harmonic-averaged-tke-for-tu? #t boolean #f #t)
(turbulence/trans/alg/cfpg-lowtu 1 real #f 1)
(turbulence/trans/alg/capg-lowtu -0.5 real #f -0.5)
(turbulence/trans/alg/cfpg-higtu 0.6 real #f 0.6)
(turbulence/trans/alg/capg-higtu -0.5 real #f -0.5)
(turbulence/trans/alg/clambda-scale 1 real #f 1)
(turbulence/trans/alg/rec-c2 1 real #f 1)
(turbulence/trans/alg/rec-c1 210 real #f 210)
(turbulence/trans/alg/rec-max 1000 real #f 1000)
(turbulence/trans/alg/ctu-lowtu 2.25 real #f 2.25)
(turbulence/trans/alg/ctu-higtu 1.06 real #f 1.06)
(turbulence/trans/alg/cbubble-c2 2.5 real #f 2.5)
(turbulence/trans/alg/cbubble-c1 0.5 real #f 0.5)
(turbulence/trans/alg/rv1-switch 1000 real #f 1000)
(turbulence/buoyancy-effects-option 1 integer #f 1)
(turbulence/verbosity 0 integer #f 0)
(les-cpld-diss-coeff 0.2 real #f 0.2)
(test-low-diffusion-inviscid-flux? #f boolean #f #f)
(z-displacement/default 0 real length 0)
(y-displacement/default 0 real length 0)
(x-displacement/default 0 real length 0)
(structure/amg/smoother/sweep-partition-interface? #f boolean #f #f)
(structure/amg/smoother/under-relax-factor 0 real #f 0)
(structure/equations-scale? #t boolean #f #t)
(structure/stabilization/max-iter 500 integer #f 500)
(structure/amg-stabilization 1 integer #f 1)
(structure/amg-cycle-type 3 integer #f 3)
(structure/amg-beta 0.7 real #f 0.7)
(structure/nonlin/amg-alpha 1e-12 real #f 1e-12)
(structure/amg-alpha 1e-10 real #f 1e-10)
(structure/scheme 30 integer #f 30)
(structure/relax 1 real #f 1)
(omega/nk 1 real #f 1)
(omega/nj 0 real #f 0)
(omega/ni 0 real #f 0)
(omega 0 real angular-velocity 0)
(residual-smoothing/iterations 0 integer #f 0)
(residual-smoothing/factor 0.5 real #f 0.5)
(precon/n-update-uref2 10 integer #f 10)
(mg/relax-spe 1 real #f 1)
(solid/relax 1 real #f 1)
(recon/bc-minmax-id-new 3 integer #f 3)
(cpld/sol-steering/cfl-cutoff-limit-activate? #t boolean #f #t)
(cpld/sol-steering/cfl-cutoff-limit-reached? #f boolean #f #f)
(cpld/sol-steering/resd-drop 0.0005 real #f 0.0005)
(cpld/sol-steering/verbosity? #f boolean #f #f)
(cpld/sol-steering/cfl-outerloop-redux 0.75 real #f 0.75)
(first-to-second-order-blending-pbns 1 real #f 1)
(cpld/sol-steering/avg-residue 0 real #f 0)
(cpld/sol-steering/avg-residue-prev 0 real #f 0)
(cpld/sol-steering/int-count 0 integer #f 0)
(cpld/sol-steering/niters 0 integer #f 0)
(cpld/sol-steering/fmg-settings? #f boolean #f #f)
(cpld/sol-steering/fmg-init-needed? #t boolean #f #t)
(cpld/sol-steering/max-fas-iterations-on-level (1 100 200 400 500 1000 1000 1000 1000 1000 1000 1000) integer-list #f (1 100 200 400 500 1000 1000 1000 1000 1000 1000 1000))
(cpld/sol-steering/default? #f boolean #f #f)
(cpld/sol-steering/use-fmg? #t boolean #f #t)
(cpld/sol-steering/cfl-max 200 real #f 200)
(cpld/sol-steering/cfl-start 5 real #f 5)
(cpld/sol-steering/cfl-implicit 5 real #f 5)
(cpld/sol-steering/upd-iters 20 integer #f 20)
(cpld/sol-steering/pre-iters 100 integer #f 100)
(cpld/sol-steering/init-phase 100 integer #f 100)
(cpld/sol-steering/flow-type "subsonic" string #f "subsonic")
(cpld/sol-steering? #f boolean #f #f)
(first-to-second-order-steering 0 real #f 0)
(first-to-second-order-blending 1 real #f 1)
(test-dbns-bcd? #f boolean #f #f)
(cpld/divergence-prevention-active-t? #f boolean #f #f)
(cpld/divergence-prevention-relaxation-t 0.1 real #f 0.1)
(cpld/solution-bounding/verbose-frequency 11 integer #f 11)
(cpld/solution-bounding/eps 1e-06 real #f 1e-06)
(cpld/solution-bounding/min-urf 0.01 real #f 0.01)
(cpld/solution-bounding? #t boolean #f #t)
(cpld/consistent-viscous-linearization? #t boolean #f #t)
(cpld/rdq-ar 0.5 real #f 0.5)
(cpld/rdq 0.75 real #f 0.75)
(enable-beta-dbns-features? #f boolean #f #f)
(cpld/smooth-cfl-recovery-sol-steering? #f boolean #f #f)
(cpld/smooth-cfl-recovery-local-cfl-saved 1 real #f 1)
(cpld/smooth-cfl-recovery-prev-cfl-redux 1 real #f 1)
(cpld/smooth-cfl-recovery-min-cfl-redux 1 real #f 1)
(cpld/smooth-cfl-recovery-iter-counter-saved 0 integer #f 0)
(cpld/smooth-cfl-recovery-iter-counter 0 integer #f 0)
(cpld/smooth-cfl-recovery-verbose 0 integer #f 0)
(cpld/smooth-cfl-recovery-max-percentage-increase 25 real #f 25)
(cpld/smooth-cfl-recovery-niter 10 integer #f 10)
(cpld/enable-smooth-cfl-recovery? #t boolean #f #t)
(cpld/mach-diff/t2-exp -35 real #f -35)
(cpld/mach-diff/t2-cfl 50 real #f 50)
(cpld/mach-diff/t1-exp -90 real #f -90)
(cpld/mach-diff/t1-cfl 10 real #f 10)
(cpld/mach-diff/mtype 1 integer #f 1)
(cpld/enable-mach-diff? #f boolean #f #f)
(cpld/cell-ar/rdq-restore 0.5 real #f 0.5)
(cpld/cell-ar/cflvnn 1 real #f 1)
(cpld/cell-ar/cflmult 100 real #f 100)
(cpld/cell-ar/debug? #f boolean #f #f)
(cpld/enhanced-casm? #f boolean #f #f)
(cpld/enable-newtimestep? #f boolean #f #f)
(cpld/partial-slip-tve-type 0 integer #f 0)
(cpld/partial-slip-thermal-type 1 integer #f 1)
(cpld/partial-slip-mom-type 1 integer #f 1)
(cpld/reporting-add-wall-dissipation-flux? #t boolean #f #t)
(cpld/inlet-diffusion? #t boolean #f #t)
(mp-rg/relax-unsteady 0.75 real #f 0.75)
(epsilon-rg/relax-unsteady 0.75 real #f 0.75)
(omega-rg/relax-unsteady 0.75 real #f 0.75)
(k-rg/relax-unsteady 0.75 real #f 0.75)
(nut-rg/relax-unsteady 0.75 real #f 0.75)
(density-rg/relax-unsteady 0.75 real #f 0.75)
(enthalpy-rg/relax-unsteady 0.75 real #f 0.75)
(pressure-rg/relax-unsteady 0.75 real #f 0.75)
(z-velocity-rg/relax-unsteady 0.75 real #f 0.75)
(y-velocity-rg/relax-unsteady 0.75 real #f 0.75)
(x-velocity-rg/relax-unsteady 0.75 real #f 0.75)
(mp-rg/relax 0.25 real #f 0.25)
(epsilon-rg/relax 0.25 real #f 0.25)
(omega-rg/relax 0.25 real #f 0.25)
(k-rg/relax 0.25 real #f 0.25)
(nut-rg/relax 0.25 real #f 0.25)
(density-rg/relax 0.25 real #f 0.25)
(enthalpy-rg/relax 0.25 real #f 0.25)
(pressure-rg/relax 0.25 real #f 0.25)
(z-velocity-rg/relax 0.25 real #f 0.25)
(y-velocity-rg/relax 0.25 real #f 0.25)
(x-velocity-rg/relax 0.25 real #f 0.25)
(defaults/pre-2022r1-sbes-bf-include-sub-function1? #f boolean #f #f)
(defaults/pre-2022r1-turb-consistent-specified-stress-bc? #f boolean #f #f)
(defaults/pre-2022r1-real-gas-species-diffusion-energy? #f boolean #f #f)
(defaults/pre-2021r2-save-time-statistics-at-end? #f boolean #f #f)
(defaults/pre-2021r2-turb-trans-harmonic-averaged-tke-for-tu? #f boolean #f #f)
(defaults/pre-2021r2-interior-nci-gradient-enhancement? #f boolean #f #f)
(defaults/pre-2021-normal-mach-number? #f boolean #f #f)
(defaults/pre-2021r1-node-weight-sum-threshold? #f boolean #f #f)
(defaults/pre-2021r1-symmetry-face-grad-weight? #f boolean #f #f)
(defaults/pre-2021r1-swirl-axi-mirror-limiting? #f boolean #f #f)
(defaults/pre-2021r1-wfgc-jump? #f boolean #f #f)
(defaults/pre-2021r1-delta-form? #f boolean #f #f)
(defaults/pre-2019r3-pmn? #f boolean #f #f)
(defaults/pre-2019r3-rc? #f boolean #f #f)
(defaults/pre-r19.3-pseudo? #f boolean #f #f)
(defaults/pre-r19.3-cpt? #f boolean #f #f)
(defaults/pre-r19.3-turb? #f boolean #f #f)
(defaults/pre-r19.0-early? #f boolean #f #f)
(defaults/pre-r19.0? #f boolean #f #f)
(gradient/optimized-t? #t boolean #f #t)
(pressure/optimized-t? #t boolean #f #t)
(numerics/optimized-t? #t boolean #f #t)
(turbo/continuity-relax-factor 0.025 real #f 0.025)
(turbo/continuity-relax-optimized? #t boolean #f #t)
(turbo/continuity-relax-t? #f boolean #f #f)
(turbo/enhancements-t? #f boolean #f #f)
(recon/relax-limit-mode 0 integer #f 0)
(recon/nb-hyb-symmetry-face-inv-distance-weight? #t boolean #f #t)
(recon/swirl-axis-mirror-limiting? #t boolean #f #t)
(recon/wfgc-jump-enhanced? #t boolean #f #t)
(recon/use-nci-sided-area-vectors? #t boolean #f #t)
(recon/relax/smooth-restart-from-data? #f boolean #f #f)
(recon/periodic/use-cell-values? #t boolean #f #t)
(recon/relax/verbosity 0 integer #f 0)
(recon/relax/unlimited? #t boolean #f #t)
(recon/relax/reset-at-timestep? #f boolean #f #f)
(recon/relax/unsteady-urf 0.75 real #f 0.75)
(recon/relax/steady-urf 0.25 real #f 0.25)
(recon/relax/all? #f boolean #f #f)
(recon/relax/relax? #f boolean #f #f)
(recon/lim/filter/svars ((sv_u . 2) (sv_v . 2) (sv_w . 2) (sv_p . 2) (sv_p_wn . 2) (sv_t . 2) (sv_h . 2) (sv_density . 2) (sv_nut . 1) (sv_k . 1) (sv_kl . 1) (sv_kt . 1) (sv_d . 1) (sv_o . 1) (sv_v2 . 1) (sv_fel . 1) (sv_intermit . 1) (sv_retheta . 1) (sv_sqrt_kt . 1) (sv_sqrt_kl . 1)) () #f ((sv_u . 2) (sv_v . 2) (sv_w . 2) (sv_p . 2) (sv_p_wn . 2) (sv_t . 2) (sv_h . 2) (sv_density . 2) (sv_nut . 1) (sv_k . 1) (sv_kl . 1) (sv_kt . 1) (sv_d . 1) (sv_o . 1) (sv_v2 . 1) (sv_fel . 1) (sv_intermit . 1) (sv_retheta . 1) (sv_sqrt_kt . 1) (sv_sqrt_kl . 1)))
(recon/lim/filter/dump-f? #f boolean #f #f)
(recon/lim/filter/1st-ord-blend-k 0.03 real #f 0.03)
(recon/lim/filter/2nd-ord-blend-k 0.5 real #f 0.5)
(recon/lim/filter/avg-method 0 integer #f 0)
(recon/lim/filter/function 3 integer #f 3)
(recon/lim/filter/verbose? #f boolean #f #f)
(recon/lim/filter/debug? #f boolean #f #f)
(recon/lim/debug-unfiltered? #f boolean #f #f)
(recon/lim/filter/on? #f boolean #f #f)
(recon/lim/dx-to-face? #t boolean #f #t)
(recon/lim/sigp 0.05 real #f 0.05)
(recon/lim/minmax/node-based? #f boolean #f #f)
(recon/lim/allneighbors? #f boolean #f #f)
(recon/lim/method 6 integer #f 6)
(recon/lim/newimpl? #f boolean #f #f)
(recon/hessian/lp 4 real #f 4)
(recon/hessian/multiscale? #t boolean #f #t)
(recon/hessian/aniso-scale? #t boolean #f #t)
(recon/hessian/scale? #t boolean #f #t)
(recon/hessian/method 2 integer #f 2)
(recon/hessian/aniso-hessian? #f boolean #f #f)
(recon/lsq-axis-dist 2 integer #f 2)
(recon/cell-lsq/skip-lsq-for-disco? #f boolean #f #f)
(recon/enable-node-grad-on-poly? #t boolean #f #t)
(cpld-lsq-ncycles 5 integer #f 5)
(recon/smallest-aspect-ratio 1e-05 real #f 1e-05)
(recon/cycle-vel-limit? #f boolean #f #f)
(recon/lim/list-sort? #t boolean #f #t)
(recon/lim/type 0 integer #f 0)
(recon/enthalpy? #t boolean #f #t)
(recon/density? #t boolean #f #t)
(recon/cpld-use-lsq-derivatives? #f boolean #f #f)
(recon/cpld-use-lsq-deriv? #f boolean #f #f)
(recon/nb-nci-local-proj? #t boolean #f #t)
(recon/nb-lim-cell-cell-boundary? #f boolean #f #f)
(recon/nb-hyb-bdry-ncycles 1 integer #f 1)
(recon/nb-hyb-bdry-vcorrection? #f boolean #f #f)
(recon/nb-hyb-bdry-correction? #f boolean #f #f)
(recon/nb-hyb-weight 0 integer #f 0)
(recon/nb-hyb-solver 0 integer #f 0)
(recon/nbg-hyb-bdry-extended? #f boolean #f #f)
(recon/nbg-vel-hyb-bdry? #t boolean #f #t)
(recon/nbg-hyb-bdry? #t boolean #f #t)
(recon/nb-twopass-grad? #f boolean #f #f)
(recon/nb-nci-local-proj? #t boolean #f #t)
(recon/node-based-old-nci? #f boolean #f #f)
(recon/node-based-it-grad? #t boolean #f #t)
(recon/node-grad-sas-dudx? #t boolean #f #t)
(recon/node-grad-d2udx2? #f boolean #f #f)
(bcd-freeze-iter 0 integer #f 0)
(bcd-c 10 real #f 10)
(bcd-bound-field? #f boolean #f #f)
(bcd-bound-expression "0.75" string #f "0.75")
(bcd-alfa 1 real #f 1)
(bcd-jasak-scheme? #f boolean #f #f)
(bcd-dbns-constant-blending-factor-t 0.8 real #f 0.8)
(bcd-constant-blending-factor-t 0.9 real #f 0.9)
(bcd-dbns-constant-blending? #t boolean #f #t)
(bcd-constant-blending-t? #f boolean #f #f)
(bcd-jasak-blending? #f boolean #f #f)
(bcd-tanh-blending? #f boolean #f #f)
(bcd-dbns-skew-correction-mode 1 integer #f 1)
(bcd-skew-correction-mode 0 integer #f 0)
(recon/node-weight-sum-threshold 1e-10 real #f 1e-10)
(recon/node-grad-diffusion? #f boolean #f #f)
(recon/node-boundary-lsq? #t boolean #f #t)
(recon/node-scale-id 2 integer #f 2)
(recon/node-cell-weight? #t boolean #f #t)
(clipped-node/inverse-dist? #f boolean #f #f)
(recon/node-weight-clip? #t boolean #f #t)
(recon/node-all-lsq? #f boolean #f #f)
(recon/node-loop-old? #t boolean #f #t)
(recon/node-gradient-lsq? #f boolean #f #f)
(recon/density-node-lsq? #t boolean #f #t)
(recon/pressure-recon-grad-ggcb? #t boolean #f #t)
(recon/pressure-node-based? #f boolean #f #f)
(recon/pressure-node-lsq? #f boolean #f #f)
(recon/skip-gg-lsq? #f boolean #f #f)
(recon/expert-lsf? #f boolean #f #f)
(recon/conserved-p? #f boolean #f #f)
(recon/cell-lsf-unchanged? #f boolean #f #f)
(recon/cell-lsf-recommend? #t boolean #f #t)
(recon/cell-lsf-weighted? #t boolean #f #t)
(recon/cell-lsf-eco? #f boolean #f #f)
(recon/cell-lsf? #f boolean #f #f)
(recon/cell-lsq/sv_d? #f boolean #f #f)
(recon/lscb-wf 2 integer #f 2)
(recon/shell-lsq/ggcb-weight? #t boolean #f #t)
(recon/cell-lsq/cortype 1 integer #f 1)
(recon/cell-lsq? #t boolean #f #t)
(recon/node-lsq? #f boolean #f #f)
(recon/length-based? #f boolean #f #f)
(recon/r15-sym-limit? #t boolean #f #t)
(recon/limit/epsilon 0.01 real #f 0.01)
(export/cdat/internal-face-cell-data #t boolean #f #t)
(interpolate-file-binary? #t boolean #f #t)
(recon/limit? #t boolean #f #t)
(recon/k-exact? #f boolean #f #f)
(recon/freeze? #f boolean #f #f)
(recon/off? #f boolean #f #f)
(export/tecplot-ascii? #f boolean #f #f)
(export/radtherm-poly-surface? #f boolean #f #f)
(export/cfdpost-case-write? #t boolean #f #t)
(export/fvuns/interior-zones () integer-list #f ())
(export/fvuns-fast-algo? #t boolean #f #t)
(export/automatic/particle () list #f ())
(export/automatic () list #f ())
(export/icecore-hdf5/chunk-size 16328 integer #f 16328)
(export/icecore-hdf5/chunked-data? #t boolean #f #t)
(export/icecore-hdf5/ziplevel -1 integer #f -1)
(export/fieldview/serial? #f boolean #f #f)
(export/fieldview/filetype 3 integer #f 3)
(export/abaqus/structural? #t boolean #f #t)
(export/write-thermal-load? #f boolean #f #f)
(export/vki-verbose? #f boolean #f #f)
(export/write-structural-load? #t boolean #f #t)
(export/endvs/write-vel-vector? #t boolean #f #t)
(export/endvs/prev-scalars () symbol-list #f ())
(export/endvs/prev-partids () integer-list #f ())
(export/endvs/start-server? #t boolean #f #t)
(export/endvs/verbose-server-full? #f boolean #f #f)
(export/endvs/verbose-update-beg-end? #t boolean #f #t)
(export/endvs/verbose? #f boolean #f #f)
(export/endvs/last-iter-no 0 integer #f 0)
(export/endvs/shutdown-servers-at-exit? #f boolean #f #f)
(export/endvs/compute-nodes 0 integer #f 0)
(export/endvs/frequency 1 integer #f 1)
(export/endvs/time-values () real-list #f ())
(export/endvs/nodes-per-server 0 integer #f 0)
(export/endvs/cachepath "" string #f "")
(export/endvs/baseport 50051 integer #f 50051)
(export/endvs/hostname "localhost" string #f "localhost")
(export/endvs/transient? #f boolean #f #f)
(export/endvs/filename "" string #f "")
(export/ensos/compute-nodes 0 integer #f 0)
(export/ensos/filename "" string #f "")
(export/ensos/frequency 1 integer #f 1)
(export/ensos/last-iter-no 0 integer #f 0)
(export/ensos/fl-start-num 1 integer #f 1)
(export/ensos/transient/separate-file? #t boolean #f #t)
(export/ensos/time-step-values () int-list #f ())
(export/ensos/time-values () real-list #f ())
(export/ensight/sos/transient? #f boolean #f #f)
(export/ascii/boundary-val? #t boolean #f #t)
(export/cgns-internal-zone #f boolean #f #f)
(export/cgns-hdf5? #t boolean #f #t)
(export/ensight/unequal-spaced-output? #f boolean #f #f)
(export/ensight/write-vel-vector? #t boolean #f #t)
(export/ensight/boundaries-all? #t boolean #f #t)
(export/ensight/functions () string-list #f ())
(export/ensight/filename "" string #f "")
(export/ensight/phase 1 integer #f 1)
(export/ensight/transient/separate-file? #t boolean #f #t)
(export/ensight/last-iter-no 0 integer #f 0)
(export/ensight/transient? #f boolean #f #f)
(export/ensight/fl-start-num 1 integer #f 1)
(export/ensight/frequency 1 integer #f 1)
(export/ensight/particle-time-values () real-list #f ())
(export/ensight/time-step-values () int-list #f ())
(export/ensight/time-values () real-list #f ())
(export/ensight/interior-zones () integer-list #f ())
(export/show-element-sets? #f boolean #f #f)
(export/cell-centered? #f boolean #f #f)
(export/functions () string-list #f ())
(export/filetype "CGNS" string #f "CGNS")
(export/fem-map? #f boolean #f #f)
(export/write-surfaces-only? #t boolean #f #t)
(export/merge-shadow-nodes? #t boolean #f #t)
(export/fsi-force-conserve? #f boolean #f #f)
(export/fsi-length-factor 1 real #f 1)
(export/fsi-temperature-units 1 integer #f 1)
(export/fsi-htc-type 1 integer #f 1)
(export/fsi-elemset-namelist () string-list #f ())
(export/fsi-nodeset-namelist () string-list #f ())
(export/fsi-elemset-idlist () integer-list #f ())
(export/fsi-nodeset-idlist () integer-list #f ())
(export/fsi-bcs-only? #t boolean #f #t)
(export/binary? #t boolean #f #t)
(import/cgns/add-inter-elem? #t boolean #f #t)
(import/add-dgcp-to-int-or-corner? #f boolean #f #f)
(import/determine-tecplot-mesh-topology? #f boolean #f #f)
(import/show-fsi-feature? #f boolean #f #f)
(maintain-emagnetic-loss-data? #t boolean #f #t)
(import/maxwell-transient? #t boolean #f #t)
(import/maxwell-data? #f boolean #f #f)
(import/fsi-read-mesh? #t boolean #f #t)
(import/fsi-volume-mesh? #f boolean #f #f)
(import/process-node-sets? #f boolean #f #f)
(import/cfx-by-ccl? #t boolean #f #t)
(import/cfx-merge-tolerance 0 real #f 0)
(visual-kinematics? #t boolean #f #t)
(export/cell-zone-list () integer-list #f ())
(export/time-average-htc? #f boolean #f #f)
(export/marked-cells? #f boolean #f #f)
(export/cdat/case-file/write-option 1 integer #f 1)
(export/cdat/case-file-name "" string #f "")
(cfd-post-mesh-info () () #f ())
(available-svar-list () list #f ())
(cell-function-list () list #f ())
(cfd-post-data () list #f ())
(fem-map/thread-id-list () list #f ())
(tve/patch 300 real temperature 300)
(tve/default 300 real temperature 300)
(twotemp/dissociation-vibration-clip-temperature-max-limit 20000 real #f 20000)
(twotemp/dissociation-vibration-clip-threshold 1 real #f 1)
(twotemp/robustness-enhancement-relax-dissociation? #f boolean #f #f)
(twotemp/robustness-enhancement-nasa9? #t boolean #f #t)
(twotemp/robustness-enhancement-frozen-sound-speed? #f boolean #f #f)
(twotemp/robustness-enhancement-tau? #f boolean #f #f)
(twotemp/robustness-enhancement-interior? #f boolean #f #f)
(twotemp/robustness-enhancement? #t boolean #f #t)
(twotemp/secondary-gradient? #t boolean #f #t)
(twotemp/inversion-stabilization 1 integer #f 1)
(twotemp/verbosity 0 integer #f 0)
(twotemp/collision-cross-section-for-park-correction 3e-21 real #f 3e-21)
(twotemp/positivity_limit 0.2 real #f 0.2)
(twotemp/mass-diffusion #t boolean #f #t)
(twotemp/translation-vibration-coupling #t boolean #f #t)
(twotemp/dissociation-vibration-coupling #t boolean #f #t)
(twotemp/patankar? #t boolean #f #t)
(twotemp/time-marching? #t boolean #f #t)
(twotemp/pseudo1t? #f boolean #f #f)
(twotemp/amg-stabilization 0 integer #f 0)
(twotemp/scheme 1 integer #f 1)
(twotemp/amg-method 0 integer #f 0)
(twotemp/cycle-type 0 integer #f 0)
(twotemp/amg-beta 0.7 real #f 0.7)
(twotemp/amg-alpha 0.1 real #f 0.1)
(twotemp/relax 0.8 real #f 0.8)
(twotemp/solve? #t boolean #f #t)
(cpld/pfar/verbose? #f boolean #f #f)
(cpld/pfar/emulate-pressure-outlet? #t boolean #f #t)
(cpld/pfar/tangency-correction-tol 0.05 real #f 0.05)
(cpld/pfar/tangency-correction? #t boolean #f #t)
(cpld/pfar/first-order? #f boolean #f #f)
(cpld/pfar/type 0 integer #f 0)
(cpld/rk2-enabled-t? #f boolean #f #f)
(amg-c/amg-alpha-restore 0.1 real #f 0.1)
(recon/lim/filter/on-restore? #f boolean #f #f)
(cpld/divergence-prevention-relaxation-restore 0.1 real #f 0.1)
(cpld/divergence-prevention-active-restore? #f boolean #f #f)
(cpld/hsn/adaptive-cfl-reduction-max 0.5 real #f 0.5)
(cpld/hsn/adaptive-cfl-reduction-min 1 real #f 1)
(cpld/hsn/adaptive-cfl-limit-max 0.5 real #f 0.5)
(cpld/hsn/adaptive-cfl-limit-min 1 real #f 1)
(cpld/hsn/adaptive-cfl-reduction? #f boolean #f #f)
(cpld/hsn/adaptive-grad-reduction-max 0.25 real #f 0.25)
(cpld/hsn/adaptive-grad-reduction-min 0.5 real #f 0.5)
(cpld/hsn/adaptive-grad-reduction? #f boolean #f #f)
(cpld/hsn/adaptive-laplace-dissipation-coef-max 0.5 real #f 0.5)
(cpld/hsn/adaptive-laplace-dissipation-coef-min 0 real #f 0)
(cpld/hsn/adaptive-laplace-dissipation? #f boolean #f #f)
(cpld/hsn/normal-mach-sensor-max 5 real #f 5)
(cpld/hsn/normal-mach-sensor-min 1 real #f 1)
(cpld/hsn/normal-mach-relax-factor 1 real #f 1)
(cpld/hsn/normal-mach-extra-layers 0 integer #f 0)
(cpld/hsn/normal-mach-coarse-type 0 integer #f 0)
(cpld/hsn/normal-mach-debug? #f boolean #f #f)
(cpld/hsn/normal-mach? #f boolean #f #f)
(cpld/hsn/grad-reduction 0.25 real #f 0.25)
(cpld/hsn/reduced-grad? #f boolean #f #f)
(cpld/hsn/cfl-reduction 0.5 real #f 0.5)
(cpld/hsn/cfl-limit 2 real #f 2)
(cpld/hsn/reduced-cfl? #f boolean #f #f)
(cpld/hsn/laplace-dissipation-coef 0 real #f 0)
(cpld/hsn/laplace-dissipation? #f boolean #f #f)
(cpld/hsn/sensor-extra-layers 1 integer #f 1)
(cpld/hsn/sensor-relax-factor 0.7 real #f 0.7)
(cpld/hsn/sensor-max 0.5 real #f 0.5)
(cpld/hsn/sensor-min 0.25 real #f 0.25)
(cpld/hsn/sensor-type 0 integer #f 0)
(cpld/hsn/flux-recompute-face-thermodynamic-state? #f boolean #f #f)
(cpld/hsn/high-speed-numerics-type 5 integer #f 5)
(cpld/hsn/visualize? #f boolean #f #f)
(cpld/hsn/enabled? #f boolean #f #f)
(cpld/temp-high-speed-numerics-enabled? #f boolean #f #f)
(cpld/temp-hs-roe-entropyfix-coeff 0.3 real #f 0.3)
(cpld/temp-hs-roe-entropyfix-local-mach-scale? #f boolean #f #f)
(cpld/temp-hs-roe-critical-average? #f boolean #f #f)
(cpld/temp-hs-roe-flux-method? #f boolean #f #f)
(cpld/reuse-linearization/ts-iteration 0 integer #f 0)
(cpld/reuse-linearization/flow-time -1 real #f -1)
(cpld/reuse-linearization/grid-id -1 integer #f -1)
(cpld/reuse-linearization-niters-auto? #f boolean #f #f)
(cpld/reuse-linearization-niters-unsteady 2 integer #f 2)
(cpld/reuse-linearization-niters-steady 5 integer #f 5)
(cpld/reuse-linearization-niters-start 5 integer #f 5)
(cpld/reuse-linearization? #f boolean #f #f)
(ms-levels/viscous-ta (#t #t #t #t) boolean-list #f (#t #t #t #t))
(ms-levels/dissipation-ta (#t #t #t #t) boolean-list #f (#t #t #t #t))
(ms-coefficients-ta (0.25 0.333333 0.5 1) real-list #f (0.25 0.333333 0.5 1))
(ms-levels/viscous (#t #t #t #t #t) boolean-list #f (#t #t #t #t #t))
(ms-levels/dissipation (#t #t #t #t #t) boolean-list #f (#t #t #t #t #t))
(ms-coefficients (0.2075 0.5915 1) real-list #f (0.2075 0.5915 1))
(inviscid-flux-new? #f boolean #f #f)
(dual-time/use-transient-scaling? #t boolean #f #t)
(dual-time/use-prec? #t boolean #f #t)
(fixed-periodic/periodic-total-time-steps 10 integer #f 10)
(fixed-periodic/periods-run 1 integer #f 1)
(fixed-periodic/periodic-time-step-size 0.1 real #f 0.1)
(fixed-periodic/time-steps-period 10 integer #f 10)
(fixed-periodic/period-or-freq-value 1 real #f 1)
(fixed-periodic/period-or-freq "Period" string #f "Period")
(fixed-periodic/is-fixed-periodic? #f boolean #f #f)
(pressure/output-dpdt? #t boolean #f #t)
(use-mkl-fft 2 integer #f 2)
(residual-verbosity 0 integer #f 0)
(flow-warnings? #t boolean #f #t)
(limiter-warnings? #t boolean #f #t)
(precondition? #t boolean #f #t)
(time-step 0 integer #f 0)
(max-courant-number/explicit 1 real #f 1)
(time-step-specification? #t boolean #f #t)
(restart-1st-order-in-time? #f boolean #f #f)
(physical-time-step-m1 1 real time 1)
(physical-time-step 1 real time 1)
(courant-number/implicit 5 real #f 5)
(courant-number/explicit 1 real #f 1)
(matching-tolerance 0.05 real #f 0.05)
(pemfc/liquid-k 0.6 real #f 0.6)
(material/check-different-material-at-interior? #t boolean #f #t)
(battery-short-resistance/patch 1e+20 contact-resistance-vol #f 1e+20)
(battery/fsi-coupling? #f boolean #f #f)
(battery/fmu-loaded? #f boolean #f #f)
(battery/msmd-model-on? #f boolean #f #f)
(battery/show-single-battery? #f boolean #f #f)
(battery/beta-feature? #f boolean #f #f)
(battery/model-loaded? #f boolean #f #f)
(battery/model0-loaded? #f boolean #f #f)
(sofc_01/sofc-loaded? #f boolean #f #f)
(pemfc-model-loaded? #f boolean #f #f)
(resolved-fc-model-loaded? #f boolean #f #f)
(user-defined-stop? #f boolean #f #f)
(max-flow-time -1 real time -1)
(initial-flow-time 0 real time 0)
(flow-time 0 real time 0)
(smooth-mesh/edge-nodes? #t boolean #f #t)
(smooth-mesh/boundary-nodes? #f boolean #f #f)
(smooth-mesh/method "quality based" string #f "quality based")
(smooth-mesh/only-marked-cells? #f boolean #f #f)
(smooth-mesh/percent-worst-to-improve 0.1 real #f 0.1)
(smooth-mesh/cell-skew-max 0.9 real #f 0.9)
(smooth-mesh/face-skew-max 0.7 real #f 0.7)
(smooth-mesh/relax 0.1 real #f 0.1)
(smooth-mesh/niter 4 integer #f 4)
(draw/domain/list () integer-list #f ())
(spark/r145? #f boolean #f #f)
(pdf/dpm-h-source-r145? #f boolean #f #f)
(les-wmles-smnsomg/version-r145? #f boolean #f #f)
(pre-2022r2-normalized-q-criterion? #f boolean #f #f)
(dpm/consistent-tke-ted-clipping? #t boolean #f #t)
(dpm/dynamic-les-treatment-pre192? #f boolean #f #f)
(dpm/sbes-treatment-pre192? #f boolean #f #f)
(dpm/always-move-away-from-face? #f boolean #f #f)
(mesh/use-pre-r19-metrics? #f boolean #f #f)
(les-dynamic-skip-exchange-r17? #f boolean #f #f)
(context/full-ui/show-dump? #t boolean #f #t)
(context/full-ui/visible? #f boolean #f #f)
(context/ui/mode-selector-visible? #f boolean #f #f)
(context/mode/conservative #f boolean #f #f)
(context/mode/agressive #f boolean #f #f)
(context/mode/afd #t boolean #f #t)
(context/multiple-contexts? #t boolean #f #t)
(context/auto-detect? #f boolean #f #f)
(context/current-r17+ ("Pseudo Time Method Mode" "coupled-pseudo-transient" "default") string-list #f ("default"))
(context/map-r17+ (("default" 0 (lambda () #t) (lambda () #f) #f) ("update derivatives after flow-solve" 90 (lambda () (rpgetvar 'context/auto-detect?)) (lambda () #t) (mom/update-derivatives-after-flow-solve? #t boolean #f #t #t)) ("turbulence models based on epsilon are first-order in space" 95 (lambda () (let* ((rpconf (%rp-config #f)) (sgmphs (cdr (assq 'sg-mphase? rpconf)))) (or (eq? sgmphs 'multi-fluid) (eq? sgmphs 'drift-flux) (eq? sgmphs 'homogeneous) (cdr (assq 'rp-ke? rpconf)) (cdr (assq 'rp-v2f? rpconf)) (and (cdr (assq 'rp-des? rpconf)) (rpgetvar 'des-rke-on?)) (and (cdr (assq 'sg-rsm? rpconf)) (not (drsm-omega-or-bsl-based?)) (rpgetvar 'drsm-tke-solve?))))) (lambda () #t) (k/scheme 0 integer #f 0 1 ("Changing Discretization Scheme for Turbulent Kinetic Energy:   ~a" (("First Order Upwind" . 0) ("Second Order Upwind" . 1) ("Power Law" . 2) ("Central Differencing" . 3) ("QUICK" . 4) ("Modified HRIC" . 5) ("Third-Order MUSCL" . 6) ("Bounded Central Differencing" . 7) ("CICSAM" . 8) ("Low Diffusion Second Order" . 9) ("Standard" . 10) ("Linear" . 11) ("Second Order" . 12) ("Body Force Weighted" . 13) ("PRESTO!" . 14) ("Continuity Based" . 15) ("Geo-Reconstruct" . 16) ("Donor-Acceptor" . 17) ("Modified Body Force Weighted" . 18) ("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Phase Coupled SIMPLE" . 23) ("Coupled" . 24) ("Fractional Step" . 25) ("Compressive" . 28) ("BGM" . 29) ("Phase Coupled PISO" . 30))))) ("RSM omega-based turbulence models are first-order in space" 97 (lambda () (let* ((rpconf (%rp-config #f)) (sgmphs (cdr (assq 'sg-mphase? rpconf)))) (or (eq? sgmphs 'multi-fluid) (eq? sgmphs 'drift-flux) (eq? sgmphs 'homogeneous) (and (cdr (assq 'sg-rsm? rpconf)) (drsm-omega-or-bsl-based?))))) (lambda () #t) (omega/scheme 0 integer #f 0 1 ("Changing Discretization Scheme for Specific Dissipation Rate:  ~a" (("First Order Upwind" . 0) ("Second Order Upwind" . 1) ("Power Law" . 2) ("Central Differencing" . 3) ("QUICK" . 4) ("Modified HRIC" . 5) ("Third-Order MUSCL" . 6) ("Bounded Central Differencing" . 7) ("CICSAM" . 8) ("Low Diffusion Second Order" . 9) ("Standard" . 10) ("Linear" . 11) ("Second Order" . 12) ("Body Force Weighted" . 13) ("PRESTO!" . 14) ("Continuity Based" . 15) ("Geo-Reconstruct" . 16) ("Donor-Acceptor" . 17) ("Modified Body Force Weighted" . 18) ("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Phase Coupled SIMPLE" . 23) ("Coupled" . 24) ("Fractional Step" . 25) ("Compressive" . 28) ("BGM" . 29) ("Phase Coupled PISO" . 30))))) ("pseudo-transient IF (single-phase) PBNS steady" 100 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (cdr (assq 'rp-seg? (%rp-config #f))) (not (cdr (assq 'rp-unsteady? (%rp-config #f)))))) (lambda () #t) (pseudo-transient-formulation? #t boolean #f #t #f ("Pseudo transient formulation:                    ~a" (("enabled" . #t) ("disabled" . #f))))) ("NOT pseudo-transient IF (single-phase) transient" 120 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (cdr (assq 'rp-unsteady? (%rp-config #f))))) (lambda () #t) (pseudo-transient-formulation? #f boolean #f #f #f ("Pseudo transient formulation:                    ~a" (("enabled" . #t) ("disabled" . #f))))) ("compr. enh. num. + press.-cpld. F cycle IF (single-phase) PBNS" 130 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (cdr (assq 'rp-seg? (%rp-config #f))))) (lambda () #t) (compress/enhanced-numerics/on? #t boolean #f #t #t) (pressure-coupled/cycle-type 3 integer #f 3 3 ("Multigrid cycle type for the pressure coupled:   ~a" ((0 . "Flexible") (1 . "V-Cycle") (2 . "W-Cycle") (3 . "F-Cycle"))))) ("HOTR IF (single-phase) except PBNS Transient" 140 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (not (and (cdr (assq 'rp-seg? (%rp-config #f))) (cdr (assq 'rp-unsteady? (%rp-config #f))))))) (lambda () #t) (recon/relax/relax? #t boolean #f #t #f ("HOTR:                                            ~a" (("enabled" . #t) ("disabled" . #f))))) ("coupled IF (single-phase) PBNS steady" 150 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (cdr (assq 'rp-seg? (%rp-config #f))) (not (cdr (assq 'rp-unsteady? (%rp-config #f)))))) (lambda () #t) (density/relax 0.5 real #f 0.5 1 ("Under-Relaxation Factor for density              ~a")) (density/pseudo-relax 0.5 real #f 0.5 1) (flow/scheme 24 integer #f 24 20 ("P-V coupling method:                             ~a" (("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Fractional Step" . 25) ("Coupled" . 24) ("Phase Coupled SIMPLE" . 23) ("Phase Coupled PISO" . 30))))) ("simpleC IF (single-phase) PBNS transient" 170 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (cdr (assq 'rp-seg? (%rp-config #f))) (cdr (assq 'rp-unsteady? (%rp-config #f))))) (lambda () #t) (pressure/relax 0.8 real #f 0.8 0.3 ("Under-Relaxation Factor for pressure:            ~a")) (mom/relax 0.7 real #f 0.7 0.7 ("Under-Relaxation Factor for momentum:            ~a")) (simplec/skew-iter 1 integer #f 1 0 ("Skewness Correction for SIMPLEC                  ~a")) (density/relax 1 real #f 1 1 ("Under-Relaxation Factor for density              ~a")) (density/pseudo-relax 1 real #f 1 1) (pressure-coupled/courant-number 10000000000 real #f 10000000000 200 ("CFL number for the coupled flow equation system: ~a")) (flow/scheme 21 integer #f 21 20 ("P-V coupling method:                             ~a" (("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Fractional Step" . 25) ("Coupled" . 24) ("Phase Coupled SIMPLE" . 23) ("Phase Coupled PISO" . 30))))) ("impl. Cou. num. IF (single-phase) DBNS incompressible" 180 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (not (cdr (assq 'rp-seg? (%rp-config #f)))) (not (is-compressible?)))) (lambda () #t) (courant-number/implicit 1000 real #f 1000 5 ("CFL value for the implicit dbns coupled solver:  ~a"))) ("impl. Cou. num. IF (single-phase) DBNS transient compressible" 200 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (not (cdr (assq 'rp-seg? (%rp-config #f)))) (cdr (assq 'rp-unsteady? (%rp-config #f))) (is-compressible?))) (lambda () #t) (courant-number/implicit 50 real #f 50 5 ("CFL value for the implicit dbns coupled solver:  ~a"))) ("PRESTO! IF (single-phase) PBNS steady buoyant OR swirl" 210 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (cdr (assq 'rp-seg? (%rp-config #f))) (not (cdr (assq 'rp-unsteady? (%rp-config #f)))) (or (and (cdr (assq 'rp-axi? (%rp-config #f))) (cdr (assq 'sg-swirl? (%rp-config #f)))) (have-boussinesq?)))) (lambda () #t) (pressure/scheme 14 integer #f 14 12 ("Spatial discretization for pressure:             ~a" (("First Order Upwind" . 0) ("Second Order Upwind" . 1) ("Power Law" . 2) ("Central Differencing" . 3) ("QUICK" . 4) ("Modified HRIC" . 5) ("Third-Order MUSCL" . 6) ("Bounded Central Differencing" . 7) ("CICSAM" . 8) ("Low Diffusion Second Order" . 9) ("Standard" . 10) ("Linear" . 11) ("Second Order" . 12) ("Body Force Weighted" . 13) ("PRESTO!" . 14) ("Continuity Based" . 15) ("Geo-Reconstruct" . 16) ("Donor-Acceptor" . 17) ("Modified Body Force Weighted" . 18) ("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Phase Coupled SIMPLE" . 23) ("Coupled" . 24) ("Fractional Step" . 25) ("Compressive" . 28) ("BGM" . 29) ("Phase Coupled PISO" . 30))))) ("PRESTO! IF sing.-eq. multi-phase" 230 (lambda () (and (rpgetvar 'context/auto-detect?) (let ((sgm (cdr (assq 'sg-mphase? (%rp-config #f))))) (not (eq? sgm #f))))) (lambda () #t) (pressure/scheme 14 integer #f 14 12 ("Spatial discretization for pressure:             ~a" (("First Order Upwind" . 0) ("Second Order Upwind" . 1) ("Power Law" . 2) ("Central Differencing" . 3) ("QUICK" . 4) ("Modified HRIC" . 5) ("Third-Order MUSCL" . 6) ("Bounded Central Differencing" . 7) ("CICSAM" . 8) ("Low Diffusion Second Order" . 9) ("Standard" . 10) ("Linear" . 11) ("Second Order" . 12) ("Body Force Weighted" . 13) ("PRESTO!" . 14) ("Continuity Based" . 15) ("Geo-Reconstruct" . 16) ("Donor-Acceptor" . 17) ("Modified Body Force Weighted" . 18) ("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Phase Coupled SIMPLE" . 23) ("Coupled" . 24) ("Fractional Step" . 25) ("Compressive" . 28) ("BGM" . 29) ("Phase Coupled PISO" . 30))))) ("Flow: transient; DPM: coupled" 10 (lambda () (and (cdr (assq 'rp-unsteady? (%rp-config #f))) (cdr (assq 'sg-dpm? (%rp-config #f))))) (lambda () (or (cdr (assq 'sg-dpm? (%rp-config #f))) (dpm-bcs-available?))) (dpm/sources-every-flow-iteration? #t boolean #f #t #f ("Update DPM source terms every flow iteration?:   ~a" (("enabled" . #t) ("disabled" . #f))))) ("Flow: transient; DPM: unsteady, coupled" 12 (lambda () (and (cdr (assq 'sg-dpm? (%rp-config #f))) (and (cdr (assq 'rp-unsteady? (%rp-config #f))) (rpgetvar 'dpm/unsteady-tracking?)))) (lambda () (or (cdr (assq 'sg-dpm? (%rp-config #f))) (dpm-bcs-available?))) (dpm/relax 0.9 real #f 0.9 0.5 ("DPM source terms under-relaxation factor:        ~a"))) ("DPM: Unsteady" 14 (lambda () (rpgetvar 'dpm/unsteady-tracking?)) (lambda () (or (cdr (assq 'sg-dpm? (%rp-config #f))) (dpm-bcs-available?))) (dpm/max-steps 500 integer #f 500 50000 ("DPM maximum number of steps:                     ~a"))) ("DPM: barycentric interpolation of density and viscosity in multi-phase context" 100 (lambda () (cdr (assq 'sg-mphase? (%rp-config #f)))) (lambda () (and (rpgetvar 'dpm/variable-interpolation/barycentric?) (or (cdr (assq 'sg-dpm? (%rp-config #f))) (dpm-bcs-available?)))) (density/interpolate #t boolean #f #t #f ("Spatial interpolation for density:               ~a" (("enabled" . #t) ("disabled" . #f)))) (laminar-viscosity/interpolate #t boolean #f #t #f ("Spatial interpolation for laminar viscosity:     ~a" (("enabled" . #t) ("disabled" . #f))))) ("VOF: Implicit and Steady State" 16 (lambda () (and (eq? (cdr (assq 'sg-mphase? (%rp-config #f))) 'vof) (not (cdr (assq 'rp-unsteady? (%rp-config #f)))) (eqv? (rpgetvar 'mp/scheme-type) 0))) (lambda () #t) (flow/scheme 24 integer #f 24 20 ("P-V coupling method:                             ~a" (("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Fractional Step" . 25) ("Coupled" . 24) ("Phase Coupled SIMPLE" . 23) ("Phase Coupled PISO" . 30)))) (pseudo-transient-formulation? #t boolean #f #t #f ("Pseudo transient for steady state VOF:           ~a" (("enabled" . #t) ("disabled" . #f))))) ("Wall Film: EWF with DPM collection" 18 (lambda () (if (and (rp-3d?) (cdr (assq 'rp-wallfilm? (%rp-config #f)))) (and (cdr (assq 'sg-wallfilm? (%rp-config #f))) (dpm-bcs-available?)) #f)) (lambda () (if (and (rp-3d?) (cdr (assq 'rp-wallfilm? (%rp-config #f)))) (let* ((film-vars (rpgetvar 'wall-film/model-parameters)) (dpm-collection? (cdr (assq 'dpm-collection? film-vars))) (dpm-splashing? (cdr (assq 'dpm-splashing? film-vars))) (sg-wallfilm? (cdr (assq 'sg-wallfilm? (%rp-config #f))))) (or (not sg-wallfilm?) (and dpm-collection? dpm-splashing?))) #f)) (dpm/orourke-splash-fraction? #f boolean #f #f #t ("O'Rourke splash fraction formulation:            ~a" (("enabled" . #t) ("disabled" . #f)))) (dpm/splash-pdf-tail-limiting? #f boolean #f #f #t ("Splash PDF distribution tail limiting:           ~a" (("enabled" . #t) ("disabled" . #f))))) ("MP: NITA defaults" 20 (lambda () (and (equal? (cdr (assq 'sg-mphase? (%rp-config #f))) 'multi-fluid) (eqv? (rpgetvar 'flow/scheme) 23) (cdr (assq 'sg-noniterative? (%rp-config #f))))) (lambda () #f) (piso/neighbor-option 1 integer #f 1 0 ("Piso neighbor option:                            ~a")) (piso/neighbor-add-option 1 integer #f 1 0 ("Piso neighbor add option:                        ~a")) (piso/neighbor-iter 2 integer #f 2 1 ("Piso neighbor iterations:                        ~a")) (mp/vof-piso-corrector? #t boolean #f #t #f ("Multiphase Piso vof corrector:                   ~a" (("enabled" . #t) ("disabled" . #f))))) ("MP: NITA defaults r182a" 22 (lambda () (and (equal? (cdr (assq 'sg-mphase? (%rp-config #f))) 'multi-fluid) (eqv? (rpgetvar 'flow/scheme) 23) (cdr (assq 'sg-noniterative? (%rp-config #f))))) (lambda () #f) (pressure/max-iter 0 integer #f 0 10 ("Pressure skewness correction:                    ~a"))) ("MP: NITA defaults r190" 26 (lambda () (and (equal? (cdr (assq 'sg-mphase? (%rp-config #f))) 'multi-fluid) (eqv? (rpgetvar 'flow/scheme) 23) (cdr (assq 'sg-noniterative? (%rp-config #f))) (eqv? (rpgetvar 'mp/scheme-type) 0))) (lambda () #f) (mp/max-iter 1 integer #f 1 5 ("Max. no. of MP NITA sub iterations:              ~a"))) ("MP: NITA: override mp/max-iter from 'defaults r190' with higher number if mp/vof-piso-corrector is Off" 30 (lambda () (and (equal? (cdr (assq 'sg-mphase? (%rp-config #f))) 'multi-fluid) (eqv? (rpgetvar 'flow/scheme) 23) (cdr (assq 'sg-noniterative? (%rp-config #f))) (eqv? (rpgetvar 'mp/scheme-type) 0) (not (rpgetvar 'mp/vof-piso-corrector?)))) (lambda () #f) (mp/max-iter 5 integer #f 5 5 ("Max. no. of MP NITA sub iterations:              ~a"))) ("MP: NITA defaults r192" 27 (lambda () (and (equal? (cdr (assq 'sg-mphase? (%rp-config #f))) 'multi-fluid) (eqv? (rpgetvar 'flow/scheme) 23) (cdr (assq 'sg-noniterative? (%rp-config #f))))) (lambda () #f) (pressure/explicit-relax 0.5 real #f 0.5 1 ("Explicit Relaxation Factor for Pressure:         ~a")) (mom/explicit-relax 0.7 real #f 0.7 1 ("Explicit Relaxation Factor for Momentum:         ~a"))) ("MP: NITA with POPULATION BALANCE" 34 (lambda () (and (equal? (cdr (assq 'sg-mphase? (%rp-config #f))) 'multi-fluid) (eqv? (rpgetvar 'flow/scheme) 23) (cdr (assq 'sg-noniterative? (%rp-config #f))) (cdr (assq 'sg-pb? (%rp-config #f))))) (lambda () #f) (pressure/explicit-relax 0.3 real #f 0.3 1 ("Explicit Relaxation Factor for Pressure:         ~a")) (piso/number-of-correctors 2 integer #f 2 1 ("Number of PISO Correctors              :         ~a")) (mp/nita/update-drag-coeff 1 integer #f 1 0 ("Update Drag Coeff                      :         ~a"))) ("DPM with NITA" 24 (lambda () (cdr (assq 'sg-noniterative? (%rp-config #f)))) (lambda () (and (cdr (assq 'sg-dpm? (%rp-config #f))) (dpm-bcs-available?))) (dpm/relax 1 real #f 1 0.5 ("DPM source term under-relaxation factor:         ~a"))) ("Aggressive NITA" 240 (lambda () (and (cdr (assq 'sg-noniterative? (%rp-config #f))) (rpgetvar 'nita/aggressive?) (not (equal? (cdr (assq 'sg-mphase? (%rp-config #f))) 'multi-fluid)))) (lambda () #f) (pressure/max-iter 0 integer #f 0 10 ("Max. no. of Pressure NITA sub iterations:             ~a")) (mom/max-iter 1 integer #f 1 5 ("Max. no. of Momentum NITA sub iterations:             ~a")) (temperature/max-iter 1 integer #f 1 5 ("Max. no. of Temperature NITA sub iterations:          ~a")) (enthalpy/max-iter 1 integer #f 1 5 ("Max. no. of Enthalpy sub iterations:                  ~a")) (mp/max-iter 1 integer #f 1 5 ("Max. no. of Multiphase NITA sub iterations:           ~a")) (potential/max-iter 1 integer #f 1 5 ("Max. no. of Potential NITA sub iterations:            ~a")) (dqmom-iem/max-iter 1 integer #f 1 5 ("Max. no. of DQMOM NITA sub iterations:                ~a")) (granular-temperature/max-iter 1 integer #f 1 5 ("Max. no. of Granular-Temperature NITA sub iterations: ~a")) (w-swirl/max-iter 1 integer #f 1 5 ("Max. no. of Swirl NITA sub iterations:                ~a")) (nut/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(NU) NITA sub iterations:       ~a")) (k/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(K) NITA sub iterations:        ~a")) (epsilon/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Epsilon) NITA sub iterations:  ~a")) (v2/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(V2) NITA sub iterations:       ~a")) (f/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(f) NITA sub iterations:        ~a")) (kl/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(kl) NITA sub iterations:       ~a")) (omega/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Omega) NITA sub iterations:    ~a")) (intermit/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Intermit) NITA sub iterations: ~a")) (retheta/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(retheta) NITA sub iterations:  ~a")) (drsm/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(drsm) NITA sub iterations:     ~a")) (fmean/max-iter 1 integer #f 1 5 ("Max. no. of fmean NITA sub iterations:                ~a")) (fmean2/max-iter 1 integer #f 1 5 ("Max. no. of fmean2 NITA sub iterations:               ~a")) (fvar/max-iter 1 integer #f 1 5 ("Max. no. of fvar NITA sub iterations:                 ~a")) (fvar2/max-iter 1 integer #f 1 5 ("Max. no. of fvar2 NITA sub iterations:                ~a")) (premixc/max-iter 1 integer #f 1 5 ("Max. no. of Premix NITA sub iterations:               ~a")) (premix-g-eqn/max-iter 1 integer #f 1 5 ("Max. no. of Premix-G-Eq NITA sub iterations:          ~a")) (premix-g-var/max-iter 1 integer #f 1 5 ("Max. no. of Premix-G-Var NITA sub iterations:         ~a")) (pdftss/max-iter 1 integer #f 1 5 ("Max. no. of PDF-tss NITA sub iterations:              ~a")) (pull/max-iter 1 integer #f 1 5 ("Max. no. of Pollutant NITA sub iterations:            ~a")) (soot-mom/max-iter 1 integer #f 1 5 ("Max. no. of Soots NITA sub iterations:                ~a")) (tvar/max-iter 1 integer #f 1 5 ("Max. no. of Tvar NITA sub iterations:                 ~a")) (pressure/amg-alpha 0.01 real #f 0.01 0.1 ("Multigrid termination for the pressure:               ~a")) (pressure/cycle-type 3 integer #f 3 1 ("Multigrid cycle type for the pressure:                ~a" ((0 . "Flexible") (1 . "V-Cycle") (2 . "W-Cycle") (3 . "F-Cycle")))) (flow/scheme 25 integer #f 25 20 ("Flow Scheme is:                                       ~a" (("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Fractional Step" . 25) ("Coupled" . 24) ("Phase Coupled SIMPLE" . 23) ("Phase Coupled PISO" . 30)))) (nita/flux/extrapolate? #t boolean #f #t #f ("Mass flux extrapolation:                              ~a" (("enabled" . #t) ("disabled" . #f))))) ("constant density NITA" 241 (lambda () (and (cdr (assq 'sg-noniterative? (%rp-config #f))) (eqv? (rpgetvar 'nita/single-phase/hybrid/option) 1) (not (cdr (assq 'sg-mphase? (%rp-config #f)))))) (lambda () #t) (pressure/max-iter 0 integer #f 0 10 ("Max. no. of Pressure NITA sub iterations:             ~a")) (mom/max-iter 1 integer #f 1 5 ("Max. no. of Momentum NITA sub iterations:             ~a")) (temperature/max-iter 1 integer #f 1 5 ("Max. no. of Temperature NITA sub iterations:          ~a")) (enthalpy/max-iter 1 integer #f 1 5 ("Max. no. of Enthalpy sub iterations:                  ~a")) (w-swirl/max-iter 1 integer #f 1 5 ("Max. no. of Swirl NITA sub iterations:                ~a")) (nut/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(NU) NITA sub iterations:       ~a")) (k/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(K) NITA sub iterations:        ~a")) (epsilon/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Epsilon) NITA sub iterations:  ~a")) (v2/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(V2) NITA sub iterations:       ~a")) (f/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(f) NITA sub iterations:        ~a")) (kl/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(kl) NITA sub iterations:       ~a")) (omega/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Omega) NITA sub iterations:    ~a")) (intermit/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Intermit) NITA sub iterations: ~a")) (retheta/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(retheta) NITA sub iterations:  ~a")) (drsm/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(drsm) NITA sub iterations:     ~a")) (fmean/max-iter 1 integer #f 1 5 ("Max. no. of fmean NITA sub iterations:                ~a")) (fmean2/max-iter 1 integer #f 1 5 ("Max. no. of fmean2 NITA sub iterations:               ~a")) (fvar/max-iter 1 integer #f 1 5 ("Max. no. of fvar NITA sub iterations:                 ~a")) (fvar2/max-iter 1 integer #f 1 5 ("Max. no. of fvar2 NITA sub iterations:                ~a")) (premixc/max-iter 1 integer #f 1 5 ("Max. no. of Premix NITA sub iterations:               ~a")) (premix-g-eqn/max-iter 1 integer #f 1 5 ("Max. no. of Premix-G-Eq NITA sub iterations:          ~a")) (premix-g-var/max-iter 1 integer #f 1 5 ("Max. no. of Premix-G-Var NITA sub iterations:         ~a")) (pdftss/max-iter 1 integer #f 1 5 ("Max. no. of PDF-tss NITA sub iterations:              ~a")) (pull/max-iter 1 integer #f 1 5 ("Max. no. of Pollutant NITA sub iterations:            ~a")) (soot-mom/max-iter 1 integer #f 1 5 ("Max. no. of Soots NITA sub iterations:                ~a")) (tvar/max-iter 1 integer #f 1 5 ("Max. no. of Tvar NITA sub iterations:                 ~a")) (pressure/cycle-type 3 integer #f 3 1 ("Multigrid cycle type for the pressure:                ~a" ((0 . "Flexible") (1 . "V-Cycle") (2 . "W-Cycle") (3 . "F-Cycle")))) (pressure/amg-alpha 0.01 real #f 0.01 0.1 ("Multigrid termination for the pressure:               ~a")) (mom/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for momentum:                 ~a")) (pressure/residual-tolerance 0.01 real #f 0.01 0.0001 ("Residual-tolerance for pressure:                 ~a")) (temperature/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for temperature:              ~a")) (enthalpy/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for enthalpy:                 ~a")) (w-swirl/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for w-swirl:                  ~a")) (nut/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (nu):          ~a")) (k/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (k):           ~a")) (epsilon/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (epsilon):     ~a")) (v2/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (V2):          ~a")) (f/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (f):           ~a")) (kl/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (kl):          ~a")) (omega/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (Omega):       ~a")) (intermit/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (Intermit):    ~a")) (retheta/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (retheta):     ~a")) (drsm/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (drsm):       ~a")) (flow/scheme 25 integer #f 25 20 ("Flow Scheme is:                                       ~a" (("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Fractional Step" . 25) ("Coupled" . 24) ("Phase Coupled SIMPLE" . 23) ("Phase Coupled PISO" . 30)))) (nita/flux/extrapolate? #t boolean #f #t #f ("Mass flux extrapolation:                              ~a" (("enabled" . #t) ("disabled" . #f)))) (nita/residual-tolerance/iter 2 integer #f 2 1 ("Number of iterations with residual-tolerance:         ~a")) (nita/outer-iter 2 integer #f 2 1 ("Max. no. of outer iterations:                         ~a")) (mom/relax 1 real #f 1 0.7 ("Under-relaxation for momentum             ~a")) (pressure/relax 1 real #f 1 0.3 ("Under-relaxation for pressure             ~a")) (w-swirl/relax 1 real #f 1 0.9 ("Under-relaxation for swirl                ~a")) (nut/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(nut)      ~a")) (k/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(k)        ~a")) (epsilon/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(epsilon)  ~a")) (v2/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(v2)       ~a")) (f/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(f)        ~a")) (kl/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(kl)       ~a")) (omega/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(omega)    ~a")) (intermit/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(intermit) ~a")) (retheta/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(retheta)  ~a")) (drsm/relax 1 real #f 1 0.5 ("Under-relaxation for turbulence(dtrsm)    ~a"))) ("variable density NITA" 242 (lambda () (and (cdr (assq 'sg-noniterative? (%rp-config #f))) (eqv? (rpgetvar 'nita/single-phase/hybrid/option) 2) (not (cdr (assq 'sg-mphase? (%rp-config #f)))))) (lambda () #t) (pressure/max-iter 0 integer #f 0 10 ("Max. no. of Pressure NITA sub iterations:             ~a")) (mom/max-iter 1 integer #f 1 5 ("Max. no. of Momentum NITA sub iterations:             ~a")) (temperature/max-iter 1 integer #f 1 5 ("Max. no. of Temperature NITA sub iterations:          ~a")) (enthalpy/max-iter 1 integer #f 1 5 ("Max. no. of Enthalpy sub iterations:                  ~a")) (species/max-iter (1) integer-list #f (1) (5) ("Max. no. of Species  sub iterations:                  ~a")) (w-swirl/max-iter 1 integer #f 1 5 ("Max. no. of Swirl NITA sub iterations:                ~a")) (nut/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(NU) NITA sub iterations:       ~a")) (k/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(K) NITA sub iterations:        ~a")) (epsilon/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Epsilon) NITA sub iterations:  ~a")) (v2/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(V2) NITA sub iterations:       ~a")) (f/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(f) NITA sub iterations:        ~a")) (kl/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(kl) NITA sub iterations:       ~a")) (omega/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Omega) NITA sub iterations:    ~a")) (intermit/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Intermit) NITA sub iterations: ~a")) (retheta/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(retheta) NITA sub iterations:  ~a")) (drsm/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(drsm) NITA sub iterations:     ~a")) (fmean/max-iter 1 integer #f 1 5 ("Max. no. of fmean NITA sub iterations:                ~a")) (fmean2/max-iter 1 integer #f 1 5 ("Max. no. of fmean2 NITA sub iterations:               ~a")) (fvar/max-iter 1 integer #f 1 5 ("Max. no. of fvar NITA sub iterations:                 ~a")) (fvar2/max-iter 1 integer #f 1 5 ("Max. no. of fvar2 NITA sub iterations:                ~a")) (premixc/max-iter 1 integer #f 1 5 ("Max. no. of Premix NITA sub iterations:               ~a")) (premix-g-eqn/max-iter 1 integer #f 1 5 ("Max. no. of Premix-G-Eq NITA sub iterations:          ~a")) (premix-g-var/max-iter 1 integer #f 1 5 ("Max. no. of Premix-G-Var NITA sub iterations:         ~a")) (pdftss/max-iter 1 integer #f 1 5 ("Max. no. of PDF-tss NITA sub iterations:              ~a")) (pull/max-iter 1 integer #f 1 5 ("Max. no. of Pollutant NITA sub iterations:            ~a")) (soot-mom/max-iter 1 integer #f 1 5 ("Max. no. of Soots NITA sub iterations:                ~a")) (tvar/max-iter 1 integer #f 1 5 ("Max. no. of Tvar NITA sub iterations:                 ~a")) (pressure/cycle-type 3 integer #f 3 1 ("Multigrid cycle type for the pressure:                ~a" ((0 . "Flexible") (1 . "V-Cycle") (2 . "W-Cycle") (3 . "F-Cycle")))) (pressure/amg-alpha 0.01 real #f 0.01 0.1 ("Multigrid termination for the pressure       :        ~a")) (mom/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for momentum:                 ~a")) (pressure/residual-tolerance 0.01 real #f 0.01 0.0001 ("Residual-tolerance for pressure:                 ~a")) (temperature/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for temperature:              ~a")) (enthalpy/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for enthalpy:                 ~a")) (w-swirl/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for w-swirl:                  ~a")) (nut/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (nu):          ~a")) (k/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (k):           ~a")) (epsilon/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (epsilon):     ~a")) (v2/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (V2):          ~a")) (f/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (f):           ~a")) (kl/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (kl):          ~a")) (omega/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (Omega):       ~a")) (intermit/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (Intermit):    ~a")) (retheta/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (retheta):     ~a")) (drsm/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (drsm):        ~a")) (species/residual-tolerance (0.001) real-list #f (0.001) (0.0001) ("Residual-tolerance for species:                  ~a")) (potential/residual-tolerance 0.001 real #f 0.001 1e-06 ("Residual-tolerance for potential:                ~a")) (dqmom-iem/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for DQMOM:                    ~a")) (fmean/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for fmean:                    ~a")) (fmean2/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for fmean2:                   ~a")) (fvar/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for fvar:                     ~a")) (fvar2/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for fvar2:                    ~a")) (premixc/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for premixc:                  ~a")) (pdftss/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for pdftss:                   ~a")) (pull/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for pull:                     ~a")) (soot-mom/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for soot-mom:                 ~a")) (tvar/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for tvar:                     ~a")) (premix-g-eqn/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for premix-g-eqn:            ~a")) (premix-g-var/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for premix-g-var:            ~a")) (flow/scheme 25 integer #f 25 20 ("Flow Scheme is:                                       ~a" (("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Fractional Step" . 25) ("Coupled" . 24) ("Phase Coupled SIMPLE" . 23) ("Phase Coupled PISO" . 30)))) (nita/flux/extrapolate? #f boolean #f #f #f ("Mass flux extrapolation:                              ~a" (("enabled" . #t) ("disabled" . #f)))) (nita/outer-iter 10 integer #f 10 1 ("Max. no. of outer iterations:                         ~a")) (models/equation-order 1 integer #f 1 0 ("Changing equation order                               ~a" (("Standard" . 0) ("Optimized-for-volumetric-expansion" . 1)))) (density/relax 0.75 real #f 0.75 1 ("Under-Relaxation Factor for density                   ~a")) (dpm/relax 0.75 real #f 0.75 0.5 ("DPM source terms under-relaxation factor:             ~a")) (fvar/relax 0.9 real #f 0.9 0.9 ("Under-relaxation factor for mean-fraction             ~a")) (mom/relax 0.75 real #f 0.75 0.7 ("Under-Relaxation Factor for momentum                 ~a")) (premixc/relax 0.9 real #f 0.9 0.9 ("Under-relaxation factor for premix-c                  ~a")) (pressure/relax 0.75 real #f 0.75 0.3 ("Under-Relaxation Factor for pressure  ~a"))) ("Multi Phase PISO" 32 (lambda () (and (equal? (cdr (assq 'sg-mphase? (%rp-config #f))) 'multi-fluid) (eqv? (rpgetvar 'flow/scheme) 30))) (lambda () #f) (pressure/max-iter 0 integer #f 0 10 ("Pressure skewness correction:         ~a")) (piso/coupling? #f boolean #f #f #t ("Skewness neighbor coupling:           ~a"))) ("Fast Transient SIMPLEC" 243 (lambda () (and (or (cdr (assq 'sg-pdf? (%rp-config #f))) (cdr (assq 'sg-par-premix? (%rp-config #f)))) (cdr (assq 'rp-unsteady? (%rp-config #f))) (not (cdr (assq 'sg-noniterative? (%rp-config #f)))) (rpgetvar 'pdf/activate-ft-simplec?))) (lambda () #f) (models/equation-order 1 integer #f 1 0 ("Equation order:                              ~a" (("Standard" . 0) ("Optimized-for-volumetric-expansion" . 1)))) (flow/scheme 21 integer #f 21 20 ("P-V coupling method is:                      ~a" (("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Fractional Step" . 25) ("Coupled" . 24) ("Phase Coupled SIMPLE" . 23) ("Phase Coupled PISO" . 30)))) (pressure/cycle-type 3 integer #f 3 1 ("AMG cycle type for pressure equation:          ~a" ((0 . "Flexible") (1 . "V-Cycle") (2 . "W-Cycle") (3 . "F-Cycle")))) (pressure/scheme 12 integer #f 12 12 ("Pressure discretization scheme:                ~a" (("First Order Upwind" . 0) ("Second Order Upwind" . 1) ("Power Law" . 2) ("Central Differencing" . 3) ("QUICK" . 4) ("Modified HRIC" . 5) ("Third-Order MUSCL" . 6) ("Bounded Central Differencing" . 7) ("CICSAM" . 8) ("Low Diffusion Second Order" . 9) ("Standard" . 10) ("Linear" . 11) ("Second Order" . 12) ("Body Force Weighted" . 13) ("PRESTO!" . 14) ("Continuity Based" . 15) ("Geo-Reconstruct" . 16) ("Donor-Acceptor" . 17) ("Modified Body Force Weighted" . 18) ("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Phase Coupled SIMPLE" . 23) ("Coupled" . 24) ("Fractional Step" . 25) ("Compressive" . 28) ("BGM" . 29) ("Phase Coupled PISO" . 30)))) (pressure/amg-alpha 0.01 real #f 0.01 0.1 ("Multigrid termination for the pressure:          ~a")) (pressure/relax 0.75 real #f 0.75 0.3 ("Under-Relaxation Factor for pressure:            ~a")) (mom/relax 0.75 real #f 0.75 0.7 ("Under-Relaxation Factor for momentum:            ~a")) (dpm/relax 0.75 real #f 0.75 0.5 ("Under-Relaxation Factor for dpm:                 ~a")) (density/relax 0.75 real #f 0.75 1 ("Under-Relaxation Factor for density:             ~a")) (max-iterations-per-step 10 integer #f 10 20 ("Max. no. of iterations per time step:            ~a"))) ("FGM Robustness Improvements" 244 (lambda () (and (cdr (assq 'sg-par-premix? (%rp-config #f))) (cdr (assq 'rp-unsteady? (%rp-config #f))) (rpgetvar 'prepdf/prmx-flamelet?) (eqv? (rpgetvar 'pdf/prmx-fla-turb-chem-model) 0) (cdr (assq 'sg-dpm? (%rp-config #f))))) (lambda () #f) (premixc/fgm-src-method-1? #t boolean #f #t #f ("Enable convergence method 1:                     ~a"))) ("DBNS Poor Mesh Numerics" 245 (lambda () (and (not (rp-seg?)) (rpgetvar 'mesh/bad/tmp-enhanced-pmn?))) (lambda () #f) (mesh/bad/enable-quality-based-treatment? #t boolean #f #t #f ("Quality Based Treatment?: ~a")) (mesh/bad/min-orthogonal-quality 0.2 real #f 0.2 0.05 ("Min Orthogonal Quality:   ~a")) (mesh/bad/tmp-limit-cfl? #t boolean #f #t #f ("Limit CFL?:               ~a")) (mesh/bad/tmp-cfl-limit 1 real #f 1 1 ("CFL Limit:                ~a")) (mesh/bad/repair-sltn-mode 0 integer #f 0 0 ("Solution repair mode:     ~a")) (mesh/bad/repair-grad-mode 2 integer #f 2 2 ("Gradient repair mode:     ~a"))) ("Pseudo Time Method" 2000 (lambda () (and (cdr (assq 'rp-seg? (%rp-config #f))) (not (eqv? (rpgetvar 'flow/scheme) 24)))) (lambda () #f) (pseudo-transient-formulation? #f boolean #f #f #t ("Pseudo transient: ~a"))) ("Pseudo Time Method Transient" 2001 (lambda () (and (cdr (assq 'rp-unsteady? (%rp-config #f))) (rpgetvar 'show-beta-features?))) (lambda () #f) (pseudo-transient-formulation? #f boolean #f #f #f ("Pseudo time method is disabled: ~a"))) ("Pseudo Time Method Mode" 2002 (lambda () (or (and (cdr (assq 'rp-seg? (%rp-config #f))) (eqv? (rpgetvar 'flow/scheme) 24)) (cdr (assq 'rp-amg? (%rp-config #f))))) (lambda () #f) (pseudo-transient-mode 0 integer #f 0 0 ("Pseudo transient Time Step Mode: ~a"))) ("Default Local Pseudo Time AMG Controls" 246 (lambda () (or (eqv? (rpgetvar 'pseudo-time-method/segregated-pbns/dt-method) 2) (eqv? (rpgetvar 'pseudo-time-method/coupled-pbns/dt-method) 2) (eqv? (rpgetvar 'pseudo-time-method/implicit-dbns/dt-method) 2))) (lambda () #f) (pressure/dual-ts-cycle-type 1 integer #f 1 1 ("AMG cycle type for Pressure equation:       ~a" ,cycle-map)) (x-mom/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for X-Momentum equation:     ~a" ,cycle-map)) (y-mom/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Y-Momentum equation:     ~a" ,cycle-map)) (z-mom/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Z-Momentum equation:     ~a" ,cycle-map)) (w-swirl/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Swirl equation:          ~a" ,cycle-map)) (temperature/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Temperature equation:    ~a" ,cycle-map)) (enthalpy/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Enthalpy equation:       ~a" ,cycle-map)) (tvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Tvar equation:           ~a" ,cycle-map)) (k/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for K equation:              ~a" ,cycle-map)) (epsilon/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Epsilon equation:        ~a" ,cycle-map)) (omega/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Omega equation:          ~a" ,cycle-map)) (kl/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for KL equation:             ~a" ,cycle-map)) (nut/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Nut equation:            ~a" ,cycle-map)) (drsm/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for DRSM equation:           ~a" ,cycle-map)) (retheta/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Retheta equation:        ~a" ,cycle-map)) (intermit/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Intermit equation:       ~a" ,cycle-map)) (v2/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for V2 equation:             ~a" ,cycle-map)) (f/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for F equation:              ~a" ,cycle-map)) (fmean/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Fmean equation:          ~a" ,cycle-map)) (fmean2/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Fmean2 equation:         ~a" ,cycle-map)) (fvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Fvar equation:           ~a" ,cycle-map)) (fvar2/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Fvar2 equation:          ~a" ,cycle-map)) (premixc/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Premixc equation:        ~a" ,cycle-map)) (premix-g-var/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Premix-G-var equation:   ~a" ,cycle-map)) (pdftss/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for PDF-tss equation:        ~a" ,cycle-map)) (sootspecies/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Soot-Species equation:   ~a" ,cycle-map)) (soot-mom/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Soot-Mom equation:       ~a" ,cycle-map)) (inert/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Inert equation:          ~a" ,cycle-map)) (ic-fvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for IC-Fvar equation:        ~a" ,cycle-map)) (vc-fvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for VC-Fvar equation:        ~a" ,cycle-map)) (vd-fvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for VD-Fvar equation:        ~a" ,cycle-map)) (potential/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Potential equation:      ~a" ,cycle-map)) (potential-2/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Electrolyte Potential equation:      ~a" ,cycle-map)) (lithium/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Lithium equation:        ~a" ,cycle-map)) (ecfm-sigma/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for ECFM-Sigma equation:     ~a" ,cycle-map)) (pollutant/dual-ts-cycle-type (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) integer-list #f (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) ("AMG cycle type for Pollutant equation:      ~a"))) ("Coupled Local Pseudo Time AMG Controls" 247 (lambda () (and (eqv? (rpgetvar 'flow/scheme) 24) (cdr (assq 'rp-seg? (%rp-config #f))) (eqv? (rpgetvar 'pseudo-time-method/coupled-pbns/dt-method) 2) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (not (cdr (assq 'rp-react? (%rp-config #f)))) (not (cdr (assq 'rp-structure? (%rp-config #f)))) (not (cdr (assq 'sg-wetsteam? (%rp-config #f)))) (not (cdr (assq 'sg-crev? (%rp-config #f)))) (not (cdr (assq 'sg-geqn? (%rp-config #f)))) (not (cdr (assq 'sg-dqmom-iem? (%rp-config #f)))) (not (cdr (assq 'sg-noniterative? (%rp-config #f)))))) (lambda () #f) (w-swirl/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Swirl equation:          ~a" ,cycle-map)) (temperature/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Temperature equation:    ~a" ,cycle-map)) (enthalpy/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Enthalpy equation:       ~a" ,cycle-map)) (tvar/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Tvar equation:           ~a" ,cycle-map)) (k/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for K equation:              ~a" ,cycle-map)) (epsilon/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Epsilon equation:        ~a" ,cycle-map)) (omega/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Omega equation:          ~a" ,cycle-map)) (kl/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for KL equation:             ~a" ,cycle-map)) (nut/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Nut equation:            ~a" ,cycle-map)) (drsm/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for DRSM equation:           ~a" ,cycle-map)) (retheta/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Retheta equation:        ~a" ,cycle-map)) (intermit/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Intermit equation:       ~a" ,cycle-map)) (v2/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for V2 equation:             ~a" ,cycle-map)) (f/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for F equation:              ~a" ,cycle-map)) (fmean/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Fmean equation:          ~a" ,cycle-map)) (fmean2/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Fmean2 equation:         ~a" ,cycle-map)) (fvar/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Fvar equation:           ~a" ,cycle-map)) (fvar2/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Fvar2 equation:          ~a" ,cycle-map)) (premixc/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Premixc equation:        ~a" ,cycle-map)) (premix-g-var/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Premix-G-var equation:   ~a" ,cycle-map)) (pdftss/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for PDF-tss equation:        ~a" ,cycle-map)) (sootspecies/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Soot-Species equation:   ~a" ,cycle-map)) (soot-mom/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Soot-Mom equation:       ~a" ,cycle-map)) (inert/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Inert equation:          ~a" ,cycle-map)) (ic-fvar/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for IC-Fvar equation:        ~a" ,cycle-map)) (vc-fvar/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for VC-Fvar equation:        ~a" ,cycle-map)) (vd-fvar/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for VD-Fvar equation:        ~a" ,cycle-map)) (potential/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Potential equation:      ~a" ,cycle-map)) (potential-2/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Electrolyte Potential equation:      ~a" ,cycle-map)) (lithium/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Lithium equation:        ~a" ,cycle-map)) (ecfm-sigma/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for ECFM-Sigma equation:     ~a" ,cycle-map)) (pollutant/dual-ts-cycle-type (3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3) integer-list #f (3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) ("AMG cycle type for Pollutant equation:      ~a"))) ("Segregated Local Pseudo Time AMG Controls" 248 (lambda () (and (not (eqv? (rpgetvar 'flow/scheme) 24)) (cdr (assq 'rp-seg? (%rp-config #f))) (eqv? (rpgetvar 'pseudo-time-method/segregated-pbns/dt-method) 2) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (not (cdr (assq 'rp-react? (%rp-config #f)))) (not (cdr (assq 'rp-structure? (%rp-config #f)))) (not (cdr (assq 'sg-wetsteam? (%rp-config #f)))) (not (cdr (assq 'sg-crev? (%rp-config #f)))) (not (cdr (assq 'sg-geqn? (%rp-config #f)))) (not (cdr (assq 'sg-dqmom-iem? (%rp-config #f)))) (not (cdr (assq 'sg-noniterative? (%rp-config #f)))))) (lambda () #f) (pressure/dual-ts-cycle-type 1 integer #f 1 1 ("AMG cycle type for Pressure equation:       ~a" ,cycle-map)) (x-mom/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for X-Momentum equation:     ~a" ,cycle-map)) (y-mom/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Y-Momentum equation:     ~a" ,cycle-map)) (z-mom/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Z-Momentum equation:     ~a" ,cycle-map)) (w-swirl/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Swirl equation:          ~a" ,cycle-map)) (temperature/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Temperature equation:    ~a" ,cycle-map)) (enthalpy/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Enthalpy equation:       ~a" ,cycle-map)) (tvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Tvar equation:           ~a" ,cycle-map)) (k/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for K equation:              ~a" ,cycle-map)) (epsilon/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Epsilon equation:        ~a" ,cycle-map)) (omega/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Omega equation:          ~a" ,cycle-map)) (kl/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for KL equation:             ~a" ,cycle-map)) (nut/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Nut equation:            ~a" ,cycle-map)) (drsm/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for DRSM equation:           ~a" ,cycle-map)) (retheta/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Retheta equation:        ~a" ,cycle-map)) (intermit/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Intermit equation:       ~a" ,cycle-map)) (v2/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for V2 equation:             ~a" ,cycle-map)) (f/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for F equation:              ~a" ,cycle-map)) (fmean/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Fmean equation:          ~a" ,cycle-map)) (fmean2/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Fmean2 equation:         ~a" ,cycle-map)) (fvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Fvar equation:           ~a" ,cycle-map)) (fvar2/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Fvar2 equation:          ~a" ,cycle-map)) (premixc/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Premixc equation:        ~a" ,cycle-map)) (premix-g-var/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Premix-G-var equation:   ~a" ,cycle-map)) (pdftss/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for PDF-tss equation:        ~a" ,cycle-map)) (sootspecies/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Soot-Species equation:   ~a" ,cycle-map)) (soot-mom/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Soot-Mom equation:       ~a" ,cycle-map)) (inert/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Inert equation:          ~a" ,cycle-map)) (ic-fvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for IC-Fvar equation:        ~a" ,cycle-map)) (vc-fvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for VC-Fvar equation:        ~a" ,cycle-map)) (vd-fvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for VD-Fvar equation:        ~a" ,cycle-map)) (potential/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Potential equation:      ~a" ,cycle-map)) (potential-2/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Electrolyte Potential equation:      ~a" ,cycle-map)) (lithium/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Lithium equation:        ~a" ,cycle-map)) (ecfm-sigma/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for ECFM-Sigma equation:     ~a" ,cycle-map)) (pollutant/dual-ts-cycle-type (3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3) integer-list #f (3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) ("AMG cycle type for Pollutant equation:      ~a"))) ("preview-defaults" 1000 (lambda () (rpgetvar 'solver/mode/preview-defaults)) (lambda () #f)) ("fast" 1000 (lambda () (rpgetvar 'solver/mode/fast)) (lambda () #f)) ("robust" 1000 (lambda () (rpgetvar 'solver/mode/robust)) (lambda () #f)) ("preview-defaults-base" 1003 (lambda () (rpgetvar 'solver/mode/preview-defaults)) (lambda () #t) (amg-coupled/greedy-coarsening? #t boolean #f #t #f ("Aggressive AMG coarsening for coupled equations: ~a" (("enabled" . #t) ("disabled" . #f)))) (amg/greedy-coarsening? #t boolean #f #t #f ("Aggressive AMG coarsening for scalar equations: ~a" (("enabled" . #t) ("disabled" . #f)))) (amg-coupled/group-method-fallback 2 integer #f 2 0) (amg/group-method-fallback 2 integer #f 2 0) (amg-coupled/group-size-3d 6 integer #f 6 8 ("AMG Group size for coupled equations: ~a")) (amg-scalar/group-size-3d 6 integer #f 6 8 ("AMG Group size for scalar equations: ~a")) (partition/auto/laplace/check-aspect-ratio 100 real #f 100 100 ("Laplace partitioning's checker cutoff aspect ratio: ~a")) (partition/auto/laplace/aspect-ratio 10 real #f 10 10 ("Laplace partitioning cutoff aspect ratio: ~a"))) ("preview-defaults-transient-pbns-base" 1003 (lambda () (and (cdr (assq 'rp-unsteady? (%rp-config #f))) (cdr (assq 'rp-seg? (%rp-config #f))) (rpgetvar 'solver/mode/preview-defaults))) (lambda () #t) (pressure/relax 0.8 real #f 0.8 0.3 ("Under-Relaxation Factor for pressure: ~a")) (mom/relax 0.7 real #f 0.7 0.7 ("Under-Relaxation Factor for momentum: ~a")) (simplec/skew-iter 1 integer #f 1 0 ("Skewness Correction for SIMPLEC: ~a")) (density/relax 1 real #f 1 1 ("Under-Relaxation Factor for density: ~a")) (density/pseudo-relax 1 real #f 1 1) (pressure-coupled/courant-number 10000000000 real #f 10000000000 200 ("CFL number for the coupled flow equation system: ~a")) (flow/scheme 21 integer #f 21 20 ("Pressure-velocity coupling: ~a" (("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Fractional Step" . 25) ("Coupled" . 24) ("Phase Coupled SIMPLE" . 23) ("Phase Coupled PISO" . 30))))) ("robust-base" 1000 (lambda () (rpgetvar 'solver/mode/robust)) (lambda () #t) (pressure/presto/limit-pgrad? #t boolean #f #t #f ("Limit high order terms in PRESTO!: ~a" (("enabled" . #t) ("disabled" . #f)))) (mesh/bad/enable-quality-based-treatment? #t boolean #f #t #f ("Enable poor mesh numerics based on cell quality: ~a" (("enabled" . #t) ("disabled" . #f)))) (amg/divergence-epsilon 1000000 real #f 1000000 1000 ("AMG divergence epsilon: ~a")) (partition/laplace/use? #t boolean #f #t #f ("Use Laplace partitioning: ~a" (("enabled" . #t) ("disabled" . #f))))) ("fast-base" 1000 (lambda () (rpgetvar 'solver/mode/fast)) (lambda () #t)) ("coupled-pseudo-transient" 1001 (lambda () (and (rpgetvar 'solver/mode/coupled-pseudo-transient) (and (not (cdr (assq 'rp-unsteady? (%rp-config #f)))) (cdr (assq 'rp-seg? (%rp-config #f))) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (not (cdr (assq 'sg-melt? (%rp-config #f)))) (not (or (rpgetvar 'battery/model0-loaded?) (rpgetvar 'battery/model-loaded?) (rpgetvar 'resolved-fc-model-loaded?) (rpgetvar 'sofc_01/sofc-loaded?) (rpgetvar 'pemfc-model-loaded?)))))) (lambda () #f) (flow/scheme 24 integer #f 24 20 ("Pressure-velocity coupling: ~a" (("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Fractional Step" . 25) ("Coupled" . 24) ("Phase Coupled SIMPLE" . 23) ("Phase Coupled PISO" . 30)))) (pseudo-transient-formulation? #t boolean #f #t #f ("Pseudo-transient: ~a" (("enabled" . #t) ("disabled" . #f)))) (amg-coupled/greedy-coarsening? #t boolean #f #t #f ("Aggressive AMG coarsening for coupled equations: ~a" (("enabled" . #t) ("disabled" . #f)))) (amg/greedy-coarsening? #t boolean #f #t #f ("Aggressive AMG coarsening for segregated equations: ~a" (("enabled" . #t) ("disabled" . #f)))) (amg-coupled/group-size-3d 6 integer #f 6 8 ("AMG group size for coupled equations: ~a")) (amg-scalar/group-size-3d 6 integer #f 6 8 ("AMG group size for segregated equations: ~a"))) ("reacting-flow-numerics" 1003 (lambda () (and (rpgetvar 'solver/mode/coupled-pseudo-transient) (not (cdr (assq 'rp-unsteady? (%rp-config #f)))) (cdr (assq 'rp-seg? (%rp-config #f))) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (= (rpgetvar 'flow/scheme) 24) (eqv? (rpgetvar 'pseudo-time-method/coupled-pbns/dt-method) 1) (or (cdr (assq 'rp-react? (%rp-config #f))) (cdr (assq 'sg-pdf? (%rp-config #f))) (cdr (assq 'sg-pdf-transport? (%rp-config #f))) (cdr (assq 'sg-premixed? (%rp-config #f))) (cdr (assq 'sg-par-premix? (%rp-config #f)))))) (lambda () #t) (density/pseudo-relax 0.25 real #f 0.25 1 ("Density explicit underrelaxation factor: ~a")) (temperature/pseudo-specific? #t boolean #f #t #t) (tvar/pseudo-specific? #t boolean #f #t #f) (enthalpy/pseudo-specific? #t boolean #f #t #f) (species/pseudo-specific? (#t) boolean-list #f (#t) (#f)) (pollutant/pseudo-specific? (#t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t) boolean-list #f (#t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t) (#f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f)) (temperature/pseudo-time-scale-factor 1e+20 real #f 1e+20 1) (tvar/pseudo-time-scale-factor 1e+20 real #f 1e+20 1) (enthalpy/pseudo-time-scale-factor 1e+20 real #f 1e+20 1) (species/pseudo-time-scale-factor (1e+20) real-list #f (1e+20) (1)) (pollutant/pseudo-time-scale-factor (1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20) real-list #f (1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20 1e+20) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))) ("species-numerics" 1002 (lambda () (and (rpgetvar 'solver/mode/coupled-pseudo-transient) (not (cdr (assq 'rp-unsteady? (%rp-config #f)))) (cdr (assq 'rp-seg? (%rp-config #f))) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (= (rpgetvar 'flow/scheme) 24) (eqv? (rpgetvar 'pseudo-time-method/coupled-pbns/dt-method) 1) (cdr (assq 'rp-spe? (%rp-config #f))) (cdr (assq 'rp-seg? (%rp-config #f))))) (lambda () #t) (density/pseudo-relax 0.25 real #f 0.25 1 ("Density explicit underrelaxation factor: ~a"))) ("tight-amg" 1000 (lambda () (rpgetvar 'solver/mode/tight-amg)) (lambda () #t) (amg-coupled/max-cycles 100 integer #f 100 10 ("Max cycles for coupled systems: ~a")) (amg-scalar/max-cycles 100 integer #f 100 30 ("Max cycles for scalar systems: ~a")) (amg/max-cycles 100 integer #f 100 30) (wd-phi/amg-alpha 0.0001 real #f 0.0001 0.1 ("AMG tolerances: ~a")) (dynamesh/smooth/laplace/amg-alpha 0.0001 real #f 0.0001 0.1) (x-mom/amg-alpha 0.0001 real #f 0.0001 0.1) (y-mom/amg-alpha 0.0001 real #f 0.0001 0.1) (z-mom/amg-alpha 0.0001 real #f 0.0001 0.1) (pressure/amg-alpha 0.0001 real #f 0.0001 0.1) (pressure-coupled/amg-alpha 0.0001 real #f 0.0001 0.1) (temperature/amg-alpha 0.0001 real #f 0.0001 0.1) (p1/amg-alpha 0.0001 real #f 0.0001 0.1) (disco/amg-alpha 0.0001 real #f 0.0001 0.1) (enthalpy/amg-alpha 0.0001 real #f 0.0001 0.1) (species/amg-alpha (0.0001) real-list #f (0.0001) (0.1)) (potential/amg-alpha 0.0001 real #f 0.0001 0.1) (dqmom-iem/amg-alpha 0.0001 real #f 0.0001 0.1) (uds/amg-alpha (0.0001) real-list #f (0.0001) (0.1)) (hyb-init/amg-alpha (0.0001 0.0001) real-list #f (0.0001 0.0001) (0.1 0.1)) (mp/amg-alpha 0.0001 real #f 0.0001 0.1) (granular-temperature/amg-alpha 0.0001 real #f 0.0001 0.1) (pb-disc/amg-alpha (0.0001) real-list #f (0.0001) (0.1)) (pb-qmom/amg-alpha (0.0001) real-list #f (0.0001) (0.1)) (pb-smm/amg-alpha (0.0001) real-list #f (0.0001) (0.1)) (pb-dqmom/amg-alpha (0.0001) real-list #f (0.0001) (0.1)) (iac/amg-alpha 0.0001 real #f 0.0001 0.1) (lsfun/amg-alpha 0.0001 real #f 0.0001 0.1) (w-swirl/amg-alpha 0.0001 real #f 0.0001 0.1) (nut/amg-alpha 0.0001 real #f 0.0001 0.1) (k/amg-alpha 0.0001 real #f 0.0001 0.1) (epsilon/amg-alpha 0.0001 real #f 0.0001 0.1) (v2/amg-alpha 0.0001 real #f 0.0001 0.1) (f/amg-alpha 0.0001 real #f 0.0001 0.1) (kl/amg-alpha 0.0001 real #f 0.0001 0.1) (omega/amg-alpha 0.0001 real #f 0.0001 0.1) (intermit/amg-alpha 0.0001 real #f 0.0001 0.1) (retheta/amg-alpha 0.0001 real #f 0.0001 0.1) (drsm/amg-alpha 0.0001 real #f 0.0001 0.1) (acoustics-waveeq/amg-alpha 0.0001 real #f 0.0001 0.1) (fmean/amg-alpha 0.0001 real #f 0.0001 0.1) (fmean2/amg-alpha 0.0001 real #f 0.0001 0.1) (fvar/amg-alpha 0.0001 real #f 0.0001 0.1) (fvar2/amg-alpha 0.0001 real #f 0.0001 0.1) (ic-fvar/amg-alpha 0.0001 real #f 0.0001 0.1) (vc-fvar/amg-alpha 0.0001 real #f 0.0001 0.1) (vd-fvar/amg-alpha 0.0001 real #f 0.0001 0.1) (ufla-y/amg-alpha 0.0001 real #f 0.0001 0.1) (premixc/amg-alpha 0.0001 real #f 0.0001 0.1) (pdftss/amg-alpha 0.0001 real #f 0.0001 0.1) (pull/amg-alpha 0.0001 real #f 0.0001 0.0001) (amg-c/amg-alpha 0.0001 real #f 0.0001 0.1) (soot-mom/amg-alpha 0.0001 real #f 0.0001 0.1) (tvar/amg-alpha 0.0001 real #f 0.0001 0.1) (ignition/amg-alpha 0.0001 real #f 0.0001 0.1) (ecfm-sigma/amg-alpha 0.0001 real #f 0.0001 0.1) (premix-g-eqn/amg-alpha 0.0001 real #f 0.0001 0.1) (premix-g-var/amg-alpha 0.0001 real #f 0.0001 0.1) (inert/amg-alpha 0.0001 real #f 0.0001 0.1) (wetsteam/amg-alpha 0.0001 real #f 0.0001 0.1)) ("default-urfs" 1000 (lambda () (rpgetvar 'solver/mode/default-urfs)) (lambda () #t) (pseudo-auto-time-step? #t boolean #f #t #t) (pseudo-auto-time-solid? #t boolean #f #t #t) (pseudo/autotime-lscale-option 1 integer #f 1 1) (pseudo-auto-time-step-scale-factor 1 real #f 1 1) (pressure-coupled/mom/pseudo-explicit-relax 0.5 real #f 0.5 0.5) (pressure-coupled/pressure/pseudo-explicit-relax 0.5 real #f 0.5 0.5) (potential/pseudo-relax 0.75 real #f 0.75 0.75) (potential-faradaic/pseudo-relax 0.1 real #f 0.1 0.1) (drift/pseudo-relax 0.1 real #f 0.1 0.1) (delh/pseudo-relax 0.9 real #f 0.9 0.9) (disco/pseudo-relax 1 real #f 1 1) (cvt/pseudo-relax 1 real #f 1 1) (wd-phi/pseudo-relax 0.75 real #f 0.75 0.75) (dynamesh/smooth/laplace/pseudo-relax 0.75 real #f 0.75 0.75) (mom/pseudo-relax 0.5 real #f 0.5 0.5) (pressure/pseudo-relax 0.5 real #f 0.5 0.5) (temperature/pseudo-relax 0.75 real #f 0.75 0.75) (tvar/pseudo-relax 0.75 real #f 0.75 0.75) (enthalpy/pseudo-relax 0.75 real #f 0.75 0.75) (species/pseudo-relax (0.75) real-list #f (0.75) (0.75)) (dqmom-iem/pseudo-relax 0.75 real #f 0.75 0.75) (mp/pseudo-relax 0.5 real #f 0.5 0.5) (w-swirl/pseudo-relax 0.75 real #f 0.75 0.75) (nut/pseudo-relax 0.75 real #f 0.75 0.75) (k/pseudo-relax 0.75 real #f 0.75 0.75) (epsilon/pseudo-relax 0.75 real #f 0.75 0.75) (v2/pseudo-relax 0.75 real #f 0.75 0.75) (f/pseudo-relax 0.75 real #f 0.75 0.75) (kl/pseudo-relax 0.75 real #f 0.75 0.75) (omega/pseudo-relax 0.75 real #f 0.75 0.75) (intermit/pseudo-relax 0.75 real #f 0.75 0.75) (retheta/pseudo-relax 0.75 real #f 0.75 0.75) (drsm/pseudo-relax 0.75 real #f 0.75 0.75) (fmean/pseudo-relax 0.75 real #f 0.75 0.75) (fmean2/pseudo-relax 0.75 real #f 0.75 0.75) (fvar/pseudo-relax 0.75 real #f 0.75 0.75) (fvar2/pseudo-relax 0.75 real #f 0.75 0.75) (premixc/pseudo-relax 0.75 real #f 0.75 0.75) (pdftss/pseudo-relax 0.75 real #f 0.75 0.75) (pull/pseudo-relax 0.75 real #f 0.75 0.75) (granular-temperature/pseudo-relax 0.75 real #f 0.75 0.75) (ecfm-sigma/pseudo-relax 0.75 real #f 0.75 0.75) (premix-g-var/pseudo-relax 0.75 real #f 0.75 0.75) (inert/pseudo-relax 0.75 real #f 0.75 0.75) (pollutant/pseudo-relax (0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75) real-list #f (0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75) (0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75 0.75)) (pb-qmom/pseudo-relax (0.75) real-list #f (0.75) (0.75)) (pb-smm/pseudo-relax (0.75) real-list #f (0.75) (0.75)) (pb-dqmom/pseudo-relax (0.75) real-list #f (0.75) (0.75)) (pb-disc/pseudo-relax (0.75) real-list #f (0.75) (0.75)) (iac/pseudo-relax 0.75 real #f 0.75 0.75) (wetsteam/pseudo-relax 0.75 real #f 0.75 0.6) (density/pseudo-relax 1 real #f 1 1) (body-force/pseudo-relax 1 real #f 1 1) (turb-viscosity/pseudo-relax 1 real #f 1 1) (p1/pseudo-relax 1 real #f 1 1) (soot-mom/pseudo-relax 1 real #f 1 0.75) (uds/pseudo-relax (0.75) real-list #f (0.75) (0.75)) (potential/pseudo-implicit-relax 1 real #f 1 1) (temperature/pseudo-implicit-relax 1 real #f 1 1) (tvar/pseudo-implicit-relax 0.9 real #f 0.9 0.9) (enthalpy/pseudo-implicit-relax 1 real #f 1 1) (species/pseudo-implicit-relax (1) real-list #f (1) (1)) (dqmom-iem/pseudo-implicit-relax 1 real #f 1 1) (mp/pseudo-implicit-relax 0.5 real #f 0.5 0.5) (w-swirl/pseudo-implicit-relax 0.9 real #f 0.9 0.9) (nut/pseudo-implicit-relax 0.8 real #f 0.8 0.8) (k/pseudo-implicit-relax 0.8 real #f 0.8 0.8) (epsilon/pseudo-implicit-relax 0.8 real #f 0.8 0.8) (v2/pseudo-implicit-relax 0.8 real #f 0.8 0.8) (f/pseudo-implicit-relax 0.8 real #f 0.8 0.8) (kl/pseudo-implicit-relax 0.8 real #f 0.8 0.8) (omega/pseudo-implicit-relax 0.8 real #f 0.8 0.8) (intermit/pseudo-implicit-relax 0.8 real #f 0.8 0.8) (retheta/pseudo-implicit-relax 0.8 real #f 0.8 0.8) (drsm/pseudo-implicit-relax 0.5 real #f 0.5 0.5) (fmean/pseudo-implicit-relax 1 real #f 1 1) (fmean2/pseudo-implicit-relax 1 real #f 1 1) (fvar/pseudo-implicit-relax 0.9 real #f 0.9 0.9) (fvar2/pseudo-implicit-relax 0.9 real #f 0.9 0.9) (premixc/pseudo-implicit-relax 0.9 real #f 0.9 0.9) (pdftss/pseudo-implicit-relax 1 real #f 1 1) (granular-temperature/pseudo-implicit-relax 0.2 real #f 0.2 0.2) (ecfm-sigma/pseudo-implicit-relax 0.9 real #f 0.9 0.9) (premix-g-var/pseudo-implicit-relax 0.8 real #f 0.8 0.8) (inert/pseudo-implicit-relax 1 real #f 1 1) (pollutant/pseudo-implicit-relax (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) real-list #f (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)) (pb-qmom/pseudo-implicit-relax (0.5) real-list #f (0.5) (0.5)) (pb-smm/pseudo-implicit-relax (0.5) real-list #f (0.5) (0.5)) (pb-dqmom/pseudo-implicit-relax (0.5) real-list #f (0.5) (0.5)) (pb-disc/pseudo-implicit-relax (0.5) real-list #f (0.5) (0.5)) (iac/pseudo-implicit-relax 0.3 real #f 0.3 0.3) (wetsteam/pseudo-implicit-relax 0.1 real #f 0.1 0.1) (soot-mom/pseudo-implicit-relax 1 real #f 1 1) (sootspecies/pseudo-implicit-relax 1 real #f 1 1) (uds/pseudo-implicit-relax (1) real-list #f (1) (1)) (potential/pseudo-specific? #f boolean #f #f #f) (temperature/pseudo-specific? #t boolean #f #t #t) (tvar/pseudo-specific? #f boolean #f #f #f) (enthalpy/pseudo-specific? #f boolean #f #f #f) (species/pseudo-specific? (#f) boolean-list #f (#f) (#f)) (dqmom-iem/pseudo-specific? #f boolean #f #f #f) (mp/pseudo-specific? #t boolean #f #t #t) (w-swirl/pseudo-specific? #t boolean #f #t #t) (nut/pseudo-specific? #t boolean #f #t #t) (k/pseudo-specific? #t boolean #f #t #t) (epsilon/pseudo-specific? #t boolean #f #t #t) (v2/pseudo-specific? #t boolean #f #t #t) (f/pseudo-specific? #t boolean #f #t #t) (kl/pseudo-specific? #t boolean #f #t #t) (omega/pseudo-specific? #t boolean #f #t #t) (intermit/pseudo-specific? #t boolean #f #t #t) (retheta/pseudo-specific? #t boolean #f #t #t) (drsm/pseudo-specific? #t boolean #f #t #t) (fmean/pseudo-specific? #f boolean #f #f #f) (fmean2/pseudo-specific? #f boolean #f #f #f) (fvar/pseudo-specific? #f boolean #f #f #f) (fvar2/pseudo-specific? #f boolean #f #f #f) (premixc/pseudo-specific? #f boolean #f #f #f) (pdftss/pseudo-specific? #f boolean #f #f #f) (granular-temperature/pseudo-specific? #t boolean #f #t #t) (ecfm-sigma/pseudo-specific? #f boolean #f #f #f) (premix-g-var/pseudo-specific? #f boolean #f #f #f) (inert/pseudo-specific? #f boolean #f #f #f) (pollutant/pseudo-specific? (#f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f) boolean-list #f (#f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f) (#f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f)) (pb-qmom/pseudo-specific? (#t) boolean-list #f (#t) (#t)) (pb-smm/pseudo-specific? (#t) boolean-list #f (#t) (#t)) (pb-dqmom/pseudo-specific? (#t) boolean-list #f (#t) (#t)) (pb-disc/pseudo-specific? (#t) boolean-list #f (#t) (#t)) (iac/pseudo-specific? #t boolean #f #t #t) (wetsteam/pseudo-specific? #t boolean #f #t #t) (soot-mom/pseudo-specific? #f boolean #f #f #f) (uds/pseudo-specific? (#f) boolean-list #f (#f) (#f)) (mom/update-derivatives-after-flow-solve? #t boolean #f #t #t)) ("overset-solver-defaults" 1004 (lambda () (and (rpgetvar 'solver/mode/overset-defaults?) (sg-overset?))) (lambda () #f) (amg/divergence-epsilon 1000000 real #f 1000000 1000) (amg/laplace-coarsening? #f boolean #f #f #f) (amg-coupled/laplace-coarsening? #f boolean #f #f #f))) () #f (("default" 0 (lambda () #t) (lambda () #f) #f) ("update derivatives after flow-solve" 90 (lambda () (rpgetvar 'context/auto-detect?)) (lambda () #t) (mom/update-derivatives-after-flow-solve? #t boolean #f #t #t)) ("turbulence models based on epsilon are first-order in space" 95 (lambda () (let* ((rpconf (%rp-config #f)) (sgmphs (cdr (assq 'sg-mphase? rpconf)))) (or (eq? sgmphs 'multi-fluid) (eq? sgmphs 'drift-flux) (eq? sgmphs 'homogeneous) (cdr (assq 'rp-ke? rpconf)) (cdr (assq 'rp-v2f? rpconf)) (and (cdr (assq 'rp-des? rpconf)) (rpgetvar 'des-rke-on?)) (and (cdr (assq 'sg-rsm? rpconf)) (not (drsm-omega-or-bsl-based?)) (rpgetvar 'drsm-tke-solve?))))) (lambda () #t) (k/scheme 0 integer #f 0 1 ("Changing Discretization Scheme for Turbulent Kinetic Energy:   ~a" (("First Order Upwind" . 0) ("Second Order Upwind" . 1) ("Power Law" . 2) ("Central Differencing" . 3) ("QUICK" . 4) ("Modified HRIC" . 5) ("Third-Order MUSCL" . 6) ("Bounded Central Differencing" . 7) ("CICSAM" . 8) ("Low Diffusion Second Order" . 9) ("Standard" . 10) ("Linear" . 11) ("Second Order" . 12) ("Body Force Weighted" . 13) ("PRESTO!" . 14) ("Continuity Based" . 15) ("Geo-Reconstruct" . 16) ("Donor-Acceptor" . 17) ("Modified Body Force Weighted" . 18) ("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Phase Coupled SIMPLE" . 23) ("Coupled" . 24) ("Fractional Step" . 25) ("Compressive" . 28) ("BGM" . 29) ("Phase Coupled PISO" . 30))))) ("RSM omega-based turbulence models are first-order in space" 97 (lambda () (let* ((rpconf (%rp-config #f)) (sgmphs (cdr (assq 'sg-mphase? rpconf)))) (or (eq? sgmphs 'multi-fluid) (eq? sgmphs 'drift-flux) (eq? sgmphs 'homogeneous) (and (cdr (assq 'sg-rsm? rpconf)) (drsm-omega-or-bsl-based?))))) (lambda () #t) (omega/scheme 0 integer #f 0 1 ("Changing Discretization Scheme for Specific Dissipation Rate:  ~a" (("First Order Upwind" . 0) ("Second Order Upwind" . 1) ("Power Law" . 2) ("Central Differencing" . 3) ("QUICK" . 4) ("Modified HRIC" . 5) ("Third-Order MUSCL" . 6) ("Bounded Central Differencing" . 7) ("CICSAM" . 8) ("Low Diffusion Second Order" . 9) ("Standard" . 10) ("Linear" . 11) ("Second Order" . 12) ("Body Force Weighted" . 13) ("PRESTO!" . 14) ("Continuity Based" . 15) ("Geo-Reconstruct" . 16) ("Donor-Acceptor" . 17) ("Modified Body Force Weighted" . 18) ("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Phase Coupled SIMPLE" . 23) ("Coupled" . 24) ("Fractional Step" . 25) ("Compressive" . 28) ("BGM" . 29) ("Phase Coupled PISO" . 30))))) ("pseudo-transient IF (single-phase) PBNS steady" 100 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (cdr (assq 'rp-seg? (%rp-config #f))) (not (cdr (assq 'rp-unsteady? (%rp-config #f)))))) (lambda () #t) (pseudo-transient-formulation? #t boolean #f #t #f ("Pseudo transient formulation:                    ~a" (("enabled" . #t) ("disabled" . #f))))) ("NOT pseudo-transient IF (single-phase) transient" 120 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (cdr (assq 'rp-unsteady? (%rp-config #f))))) (lambda () #t) (pseudo-transient-formulation? #f boolean #f #f #f ("Pseudo transient formulation:                    ~a" (("enabled" . #t) ("disabled" . #f))))) ("compr. enh. num. + press.-cpld. F cycle IF (single-phase) PBNS" 130 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (cdr (assq 'rp-seg? (%rp-config #f))))) (lambda () #t) (compress/enhanced-numerics/on? #t boolean #f #t #t) (pressure-coupled/cycle-type 3 integer #f 3 3 ("Multigrid cycle type for the pressure coupled:   ~a" ((0 . "Flexible") (1 . "V-Cycle") (2 . "W-Cycle") (3 . "F-Cycle"))))) ("HOTR IF (single-phase) except PBNS Transient" 140 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (not (and (cdr (assq 'rp-seg? (%rp-config #f))) (cdr (assq 'rp-unsteady? (%rp-config #f))))))) (lambda () #t) (recon/relax/relax? #t boolean #f #t #f ("HOTR:                                            ~a" (("enabled" . #t) ("disabled" . #f))))) ("coupled IF (single-phase) PBNS steady" 150 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (cdr (assq 'rp-seg? (%rp-config #f))) (not (cdr (assq 'rp-unsteady? (%rp-config #f)))))) (lambda () #t) (density/relax 0.5 real #f 0.5 1 ("Under-Relaxation Factor for density              ~a")) (density/pseudo-relax 0.5 real #f 0.5 1) (flow/scheme 24 integer #f 24 20 ("P-V coupling method:                             ~a" (("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Fractional Step" . 25) ("Coupled" . 24) ("Phase Coupled SIMPLE" . 23) ("Phase Coupled PISO" . 30))))) ("simpleC IF (single-phase) PBNS transient" 170 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (cdr (assq 'rp-seg? (%rp-config #f))) (cdr (assq 'rp-unsteady? (%rp-config #f))))) (lambda () #t) (pressure/relax 0.8 real #f 0.8 0.3 ("Under-Relaxation Factor for pressure:            ~a")) (mom/relax 0.7 real #f 0.7 0.7 ("Under-Relaxation Factor for momentum:            ~a")) (simplec/skew-iter 1 integer #f 1 0 ("Skewness Correction for SIMPLEC                  ~a")) (density/relax 1 real #f 1 1 ("Under-Relaxation Factor for density              ~a")) (density/pseudo-relax 1 real #f 1 1) (pressure-coupled/courant-number 10000000000 real #f 10000000000 200 ("CFL number for the coupled flow equation system: ~a")) (flow/scheme 21 integer #f 21 20 ("P-V coupling method:                             ~a" (("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Fractional Step" . 25) ("Coupled" . 24) ("Phase Coupled SIMPLE" . 23) ("Phase Coupled PISO" . 30))))) ("impl. Cou. num. IF (single-phase) DBNS incompressible" 180 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (not (cdr (assq 'rp-seg? (%rp-config #f)))) (not (is-compressible?)))) (lambda () #t) (courant-number/implicit 1000 real #f 1000 5 ("CFL value for the implicit dbns coupled solver:  ~a"))) ("impl. Cou. num. IF (single-phase) DBNS transient compressible" 200 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (not (cdr (assq 'rp-seg? (%rp-config #f)))) (cdr (assq 'rp-unsteady? (%rp-config #f))) (is-compressible?))) (lambda () #t) (courant-number/implicit 50 real #f 50 5 ("CFL value for the implicit dbns coupled solver:  ~a"))) ("PRESTO! IF (single-phase) PBNS steady buoyant OR swirl" 210 (lambda () (and (rpgetvar 'context/auto-detect?) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (cdr (assq 'rp-seg? (%rp-config #f))) (not (cdr (assq 'rp-unsteady? (%rp-config #f)))) (or (and (cdr (assq 'rp-axi? (%rp-config #f))) (cdr (assq 'sg-swirl? (%rp-config #f)))) (have-boussinesq?)))) (lambda () #t) (pressure/scheme 14 integer #f 14 12 ("Spatial discretization for pressure:             ~a" (("First Order Upwind" . 0) ("Second Order Upwind" . 1) ("Power Law" . 2) ("Central Differencing" . 3) ("QUICK" . 4) ("Modified HRIC" . 5) ("Third-Order MUSCL" . 6) ("Bounded Central Differencing" . 7) ("CICSAM" . 8) ("Low Diffusion Second Order" . 9) ("Standard" . 10) ("Linear" . 11) ("Second Order" . 12) ("Body Force Weighted" . 13) ("PRESTO!" . 14) ("Continuity Based" . 15) ("Geo-Reconstruct" . 16) ("Donor-Acceptor" . 17) ("Modified Body Force Weighted" . 18) ("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Phase Coupled SIMPLE" . 23) ("Coupled" . 24) ("Fractional Step" . 25) ("Compressive" . 28) ("BGM" . 29) ("Phase Coupled PISO" . 30))))) ("PRESTO! IF sing.-eq. multi-phase" 230 (lambda () (and (rpgetvar 'context/auto-detect?) (let ((sgm (cdr (assq 'sg-mphase? (%rp-config #f))))) (not (eq? sgm #f))))) (lambda () #t) (pressure/scheme 14 integer #f 14 12 ("Spatial discretization for pressure:             ~a" (("First Order Upwind" . 0) ("Second Order Upwind" . 1) ("Power Law" . 2) ("Central Differencing" . 3) ("QUICK" . 4) ("Modified HRIC" . 5) ("Third-Order MUSCL" . 6) ("Bounded Central Differencing" . 7) ("CICSAM" . 8) ("Low Diffusion Second Order" . 9) ("Standard" . 10) ("Linear" . 11) ("Second Order" . 12) ("Body Force Weighted" . 13) ("PRESTO!" . 14) ("Continuity Based" . 15) ("Geo-Reconstruct" . 16) ("Donor-Acceptor" . 17) ("Modified Body Force Weighted" . 18) ("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Phase Coupled SIMPLE" . 23) ("Coupled" . 24) ("Fractional Step" . 25) ("Compressive" . 28) ("BGM" . 29) ("Phase Coupled PISO" . 30))))) ("Flow: transient; DPM: coupled" 10 (lambda () (and (cdr (assq 'rp-unsteady? (%rp-config #f))) (cdr (assq 'sg-dpm? (%rp-config #f))))) (lambda () (or (cdr (assq 'sg-dpm? (%rp-config #f))) (dpm-bcs-available?))) (dpm/sources-every-flow-iteration? #t boolean #f #t #f ("Update DPM source terms every flow iteration?:   ~a" (("enabled" . #t) ("disabled" . #f))))) ("Flow: transient; DPM: unsteady, coupled" 12 (lambda () (and (cdr (assq 'sg-dpm? (%rp-config #f))) (and (cdr (assq 'rp-unsteady? (%rp-config #f))) (rpgetvar 'dpm/unsteady-tracking?)))) (lambda () (or (cdr (assq 'sg-dpm? (%rp-config #f))) (dpm-bcs-available?))) (dpm/relax 0.9 real #f 0.9 0.5 ("DPM source terms under-relaxation factor:        ~a"))) ("DPM: Unsteady" 14 (lambda () (rpgetvar 'dpm/unsteady-tracking?)) (lambda () (or (cdr (assq 'sg-dpm? (%rp-config #f))) (dpm-bcs-available?))) (dpm/max-steps 500 integer #f 500 50000 ("DPM maximum number of steps:                     ~a"))) ("DPM: barycentric interpolation of density and viscosity in multi-phase context" 100 (lambda () (cdr (assq 'sg-mphase? (%rp-config #f)))) (lambda () (and (rpgetvar 'dpm/variable-interpolation/barycentric?) (or (cdr (assq 'sg-dpm? (%rp-config #f))) (dpm-bcs-available?)))) (density/interpolate #t boolean #f #t #f ("Spatial interpolation for density:               ~a" (("enabled" . #t) ("disabled" . #f)))) (laminar-viscosity/interpolate #t boolean #f #t #f ("Spatial interpolation for laminar viscosity:     ~a" (("enabled" . #t) ("disabled" . #f))))) ("VOF: Implicit and Steady State" 16 (lambda () (and (eq? (cdr (assq 'sg-mphase? (%rp-config #f))) 'vof) (not (cdr (assq 'rp-unsteady? (%rp-config #f)))) (eqv? (rpgetvar 'mp/scheme-type) 0))) (lambda () #t) (flow/scheme 24 integer #f 24 20 ("P-V coupling method:                             ~a" (("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Fractional Step" . 25) ("Coupled" . 24) ("Phase Coupled SIMPLE" . 23) ("Phase Coupled PISO" . 30)))) (pseudo-transient-formulation? #t boolean #f #t #f ("Pseudo transient for steady state VOF:           ~a" (("enabled" . #t) ("disabled" . #f))))) ("Wall Film: EWF with DPM collection" 18 (lambda () (if (and (rp-3d?) (cdr (assq 'rp-wallfilm? (%rp-config #f)))) (and (cdr (assq 'sg-wallfilm? (%rp-config #f))) (dpm-bcs-available?)) #f)) (lambda () (if (and (rp-3d?) (cdr (assq 'rp-wallfilm? (%rp-config #f)))) (let* ((film-vars (rpgetvar 'wall-film/model-parameters)) (dpm-collection? (cdr (assq 'dpm-collection? film-vars))) (dpm-splashing? (cdr (assq 'dpm-splashing? film-vars))) (sg-wallfilm? (cdr (assq 'sg-wallfilm? (%rp-config #f))))) (or (not sg-wallfilm?) (and dpm-collection? dpm-splashing?))) #f)) (dpm/orourke-splash-fraction? #f boolean #f #f #t ("O'Rourke splash fraction formulation:            ~a" (("enabled" . #t) ("disabled" . #f)))) (dpm/splash-pdf-tail-limiting? #f boolean #f #f #t ("Splash PDF distribution tail limiting:           ~a" (("enabled" . #t) ("disabled" . #f))))) ("MP: NITA defaults" 20 (lambda () (and (equal? (cdr (assq 'sg-mphase? (%rp-config #f))) 'multi-fluid) (eqv? (rpgetvar 'flow/scheme) 23) (cdr (assq 'sg-noniterative? (%rp-config #f))))) (lambda () #f) (piso/neighbor-option 1 integer #f 1 0 ("Piso neighbor option:                            ~a")) (piso/neighbor-add-option 1 integer #f 1 0 ("Piso neighbor add option:                        ~a")) (piso/neighbor-iter 2 integer #f 2 1 ("Piso neighbor iterations:                        ~a")) (mp/vof-piso-corrector? #t boolean #f #t #f ("Multiphase Piso vof corrector:                   ~a" (("enabled" . #t) ("disabled" . #f))))) ("MP: NITA defaults r182a" 22 (lambda () (and (equal? (cdr (assq 'sg-mphase? (%rp-config #f))) 'multi-fluid) (eqv? (rpgetvar 'flow/scheme) 23) (cdr (assq 'sg-noniterative? (%rp-config #f))))) (lambda () #f) (pressure/max-iter 0 integer #f 0 10 ("Pressure skewness correction:                    ~a"))) ("MP: NITA defaults r190" 26 (lambda () (and (equal? (cdr (assq 'sg-mphase? (%rp-config #f))) 'multi-fluid) (eqv? (rpgetvar 'flow/scheme) 23) (cdr (assq 'sg-noniterative? (%rp-config #f))) (eqv? (rpgetvar 'mp/scheme-type) 0))) (lambda () #f) (mp/max-iter 1 integer #f 1 5 ("Max. no. of MP NITA sub iterations:              ~a"))) ("MP: NITA: override mp/max-iter from 'defaults r190' with higher number if mp/vof-piso-corrector is Off" 30 (lambda () (and (equal? (cdr (assq 'sg-mphase? (%rp-config #f))) 'multi-fluid) (eqv? (rpgetvar 'flow/scheme) 23) (cdr (assq 'sg-noniterative? (%rp-config #f))) (eqv? (rpgetvar 'mp/scheme-type) 0) (not (rpgetvar 'mp/vof-piso-corrector?)))) (lambda () #f) (mp/max-iter 5 integer #f 5 5 ("Max. no. of MP NITA sub iterations:              ~a"))) ("MP: NITA defaults r192" 27 (lambda () (and (equal? (cdr (assq 'sg-mphase? (%rp-config #f))) 'multi-fluid) (eqv? (rpgetvar 'flow/scheme) 23) (cdr (assq 'sg-noniterative? (%rp-config #f))))) (lambda () #f) (pressure/explicit-relax 0.5 real #f 0.5 1 ("Explicit Relaxation Factor for Pressure:         ~a")) (mom/explicit-relax 0.7 real #f 0.7 1 ("Explicit Relaxation Factor for Momentum:         ~a"))) ("MP: NITA with POPULATION BALANCE" 34 (lambda () (and (equal? (cdr (assq 'sg-mphase? (%rp-config #f))) 'multi-fluid) (eqv? (rpgetvar 'flow/scheme) 23) (cdr (assq 'sg-noniterative? (%rp-config #f))) (cdr (assq 'sg-pb? (%rp-config #f))))) (lambda () #f) (pressure/explicit-relax 0.3 real #f 0.3 1 ("Explicit Relaxation Factor for Pressure:         ~a")) (piso/number-of-correctors 2 integer #f 2 1 ("Number of PISO Correctors              :         ~a")) (mp/nita/update-drag-coeff 1 integer #f 1 0 ("Update Drag Coeff                      :         ~a"))) ("DPM with NITA" 24 (lambda () (cdr (assq 'sg-noniterative? (%rp-config #f)))) (lambda () (and (cdr (assq 'sg-dpm? (%rp-config #f))) (dpm-bcs-available?))) (dpm/relax 1 real #f 1 0.5 ("DPM source term under-relaxation factor:         ~a"))) ("Aggressive NITA" 240 (lambda () (and (cdr (assq 'sg-noniterative? (%rp-config #f))) (rpgetvar 'nita/aggressive?) (not (equal? (cdr (assq 'sg-mphase? (%rp-config #f))) 'multi-fluid)))) (lambda () #f) (pressure/max-iter 0 integer #f 0 10 ("Max. no. of Pressure NITA sub iterations:             ~a")) (mom/max-iter 1 integer #f 1 5 ("Max. no. of Momentum NITA sub iterations:             ~a")) (temperature/max-iter 1 integer #f 1 5 ("Max. no. of Temperature NITA sub iterations:          ~a")) (enthalpy/max-iter 1 integer #f 1 5 ("Max. no. of Enthalpy sub iterations:                  ~a")) (mp/max-iter 1 integer #f 1 5 ("Max. no. of Multiphase NITA sub iterations:           ~a")) (potential/max-iter 1 integer #f 1 5 ("Max. no. of Potential NITA sub iterations:            ~a")) (dqmom-iem/max-iter 1 integer #f 1 5 ("Max. no. of DQMOM NITA sub iterations:                ~a")) (granular-temperature/max-iter 1 integer #f 1 5 ("Max. no. of Granular-Temperature NITA sub iterations: ~a")) (w-swirl/max-iter 1 integer #f 1 5 ("Max. no. of Swirl NITA sub iterations:                ~a")) (nut/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(NU) NITA sub iterations:       ~a")) (k/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(K) NITA sub iterations:        ~a")) (epsilon/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Epsilon) NITA sub iterations:  ~a")) (v2/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(V2) NITA sub iterations:       ~a")) (f/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(f) NITA sub iterations:        ~a")) (kl/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(kl) NITA sub iterations:       ~a")) (omega/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Omega) NITA sub iterations:    ~a")) (intermit/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Intermit) NITA sub iterations: ~a")) (retheta/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(retheta) NITA sub iterations:  ~a")) (drsm/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(drsm) NITA sub iterations:     ~a")) (fmean/max-iter 1 integer #f 1 5 ("Max. no. of fmean NITA sub iterations:                ~a")) (fmean2/max-iter 1 integer #f 1 5 ("Max. no. of fmean2 NITA sub iterations:               ~a")) (fvar/max-iter 1 integer #f 1 5 ("Max. no. of fvar NITA sub iterations:                 ~a")) (fvar2/max-iter 1 integer #f 1 5 ("Max. no. of fvar2 NITA sub iterations:                ~a")) (premixc/max-iter 1 integer #f 1 5 ("Max. no. of Premix NITA sub iterations:               ~a")) (premix-g-eqn/max-iter 1 integer #f 1 5 ("Max. no. of Premix-G-Eq NITA sub iterations:          ~a")) (premix-g-var/max-iter 1 integer #f 1 5 ("Max. no. of Premix-G-Var NITA sub iterations:         ~a")) (pdftss/max-iter 1 integer #f 1 5 ("Max. no. of PDF-tss NITA sub iterations:              ~a")) (pull/max-iter 1 integer #f 1 5 ("Max. no. of Pollutant NITA sub iterations:            ~a")) (soot-mom/max-iter 1 integer #f 1 5 ("Max. no. of Soots NITA sub iterations:                ~a")) (tvar/max-iter 1 integer #f 1 5 ("Max. no. of Tvar NITA sub iterations:                 ~a")) (pressure/amg-alpha 0.01 real #f 0.01 0.1 ("Multigrid termination for the pressure:               ~a")) (pressure/cycle-type 3 integer #f 3 1 ("Multigrid cycle type for the pressure:                ~a" ((0 . "Flexible") (1 . "V-Cycle") (2 . "W-Cycle") (3 . "F-Cycle")))) (flow/scheme 25 integer #f 25 20 ("Flow Scheme is:                                       ~a" (("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Fractional Step" . 25) ("Coupled" . 24) ("Phase Coupled SIMPLE" . 23) ("Phase Coupled PISO" . 30)))) (nita/flux/extrapolate? #t boolean #f #t #f ("Mass flux extrapolation:                              ~a" (("enabled" . #t) ("disabled" . #f))))) ("constant density NITA" 241 (lambda () (and (cdr (assq 'sg-noniterative? (%rp-config #f))) (eqv? (rpgetvar 'nita/single-phase/hybrid/option) 1) (not (cdr (assq 'sg-mphase? (%rp-config #f)))))) (lambda () #t) (pressure/max-iter 0 integer #f 0 10 ("Max. no. of Pressure NITA sub iterations:             ~a")) (mom/max-iter 1 integer #f 1 5 ("Max. no. of Momentum NITA sub iterations:             ~a")) (temperature/max-iter 1 integer #f 1 5 ("Max. no. of Temperature NITA sub iterations:          ~a")) (enthalpy/max-iter 1 integer #f 1 5 ("Max. no. of Enthalpy sub iterations:                  ~a")) (w-swirl/max-iter 1 integer #f 1 5 ("Max. no. of Swirl NITA sub iterations:                ~a")) (nut/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(NU) NITA sub iterations:       ~a")) (k/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(K) NITA sub iterations:        ~a")) (epsilon/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Epsilon) NITA sub iterations:  ~a")) (v2/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(V2) NITA sub iterations:       ~a")) (f/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(f) NITA sub iterations:        ~a")) (kl/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(kl) NITA sub iterations:       ~a")) (omega/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Omega) NITA sub iterations:    ~a")) (intermit/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Intermit) NITA sub iterations: ~a")) (retheta/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(retheta) NITA sub iterations:  ~a")) (drsm/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(drsm) NITA sub iterations:     ~a")) (fmean/max-iter 1 integer #f 1 5 ("Max. no. of fmean NITA sub iterations:                ~a")) (fmean2/max-iter 1 integer #f 1 5 ("Max. no. of fmean2 NITA sub iterations:               ~a")) (fvar/max-iter 1 integer #f 1 5 ("Max. no. of fvar NITA sub iterations:                 ~a")) (fvar2/max-iter 1 integer #f 1 5 ("Max. no. of fvar2 NITA sub iterations:                ~a")) (premixc/max-iter 1 integer #f 1 5 ("Max. no. of Premix NITA sub iterations:               ~a")) (premix-g-eqn/max-iter 1 integer #f 1 5 ("Max. no. of Premix-G-Eq NITA sub iterations:          ~a")) (premix-g-var/max-iter 1 integer #f 1 5 ("Max. no. of Premix-G-Var NITA sub iterations:         ~a")) (pdftss/max-iter 1 integer #f 1 5 ("Max. no. of PDF-tss NITA sub iterations:              ~a")) (pull/max-iter 1 integer #f 1 5 ("Max. no. of Pollutant NITA sub iterations:            ~a")) (soot-mom/max-iter 1 integer #f 1 5 ("Max. no. of Soots NITA sub iterations:                ~a")) (tvar/max-iter 1 integer #f 1 5 ("Max. no. of Tvar NITA sub iterations:                 ~a")) (pressure/cycle-type 3 integer #f 3 1 ("Multigrid cycle type for the pressure:                ~a" ((0 . "Flexible") (1 . "V-Cycle") (2 . "W-Cycle") (3 . "F-Cycle")))) (pressure/amg-alpha 0.01 real #f 0.01 0.1 ("Multigrid termination for the pressure:               ~a")) (mom/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for momentum:                 ~a")) (pressure/residual-tolerance 0.01 real #f 0.01 0.0001 ("Residual-tolerance for pressure:                 ~a")) (temperature/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for temperature:              ~a")) (enthalpy/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for enthalpy:                 ~a")) (w-swirl/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for w-swirl:                  ~a")) (nut/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (nu):          ~a")) (k/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (k):           ~a")) (epsilon/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (epsilon):     ~a")) (v2/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (V2):          ~a")) (f/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (f):           ~a")) (kl/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (kl):          ~a")) (omega/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (Omega):       ~a")) (intermit/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (Intermit):    ~a")) (retheta/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (retheta):     ~a")) (drsm/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (drsm):       ~a")) (flow/scheme 25 integer #f 25 20 ("Flow Scheme is:                                       ~a" (("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Fractional Step" . 25) ("Coupled" . 24) ("Phase Coupled SIMPLE" . 23) ("Phase Coupled PISO" . 30)))) (nita/flux/extrapolate? #t boolean #f #t #f ("Mass flux extrapolation:                              ~a" (("enabled" . #t) ("disabled" . #f)))) (nita/residual-tolerance/iter 2 integer #f 2 1 ("Number of iterations with residual-tolerance:         ~a")) (nita/outer-iter 2 integer #f 2 1 ("Max. no. of outer iterations:                         ~a")) (mom/relax 1 real #f 1 0.7 ("Under-relaxation for momentum             ~a")) (pressure/relax 1 real #f 1 0.3 ("Under-relaxation for pressure             ~a")) (w-swirl/relax 1 real #f 1 0.9 ("Under-relaxation for swirl                ~a")) (nut/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(nut)      ~a")) (k/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(k)        ~a")) (epsilon/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(epsilon)  ~a")) (v2/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(v2)       ~a")) (f/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(f)        ~a")) (kl/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(kl)       ~a")) (omega/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(omega)    ~a")) (intermit/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(intermit) ~a")) (retheta/relax 1 real #f 1 0.8 ("Under-relaxation for turbulence(retheta)  ~a")) (drsm/relax 1 real #f 1 0.5 ("Under-relaxation for turbulence(dtrsm)    ~a"))) ("variable density NITA" 242 (lambda () (and (cdr (assq 'sg-noniterative? (%rp-config #f))) (eqv? (rpgetvar 'nita/single-phase/hybrid/option) 2) (not (cdr (assq 'sg-mphase? (%rp-config #f)))))) (lambda () #t) (pressure/max-iter 0 integer #f 0 10 ("Max. no. of Pressure NITA sub iterations:             ~a")) (mom/max-iter 1 integer #f 1 5 ("Max. no. of Momentum NITA sub iterations:             ~a")) (temperature/max-iter 1 integer #f 1 5 ("Max. no. of Temperature NITA sub iterations:          ~a")) (enthalpy/max-iter 1 integer #f 1 5 ("Max. no. of Enthalpy sub iterations:                  ~a")) (species/max-iter (1) integer-list #f (1) (5) ("Max. no. of Species  sub iterations:                  ~a")) (w-swirl/max-iter 1 integer #f 1 5 ("Max. no. of Swirl NITA sub iterations:                ~a")) (nut/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(NU) NITA sub iterations:       ~a")) (k/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(K) NITA sub iterations:        ~a")) (epsilon/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Epsilon) NITA sub iterations:  ~a")) (v2/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(V2) NITA sub iterations:       ~a")) (f/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(f) NITA sub iterations:        ~a")) (kl/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(kl) NITA sub iterations:       ~a")) (omega/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Omega) NITA sub iterations:    ~a")) (intermit/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(Intermit) NITA sub iterations: ~a")) (retheta/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(retheta) NITA sub iterations:  ~a")) (drsm/max-iter 1 integer #f 1 5 ("Max. no. of Turbulence(drsm) NITA sub iterations:     ~a")) (fmean/max-iter 1 integer #f 1 5 ("Max. no. of fmean NITA sub iterations:                ~a")) (fmean2/max-iter 1 integer #f 1 5 ("Max. no. of fmean2 NITA sub iterations:               ~a")) (fvar/max-iter 1 integer #f 1 5 ("Max. no. of fvar NITA sub iterations:                 ~a")) (fvar2/max-iter 1 integer #f 1 5 ("Max. no. of fvar2 NITA sub iterations:                ~a")) (premixc/max-iter 1 integer #f 1 5 ("Max. no. of Premix NITA sub iterations:               ~a")) (premix-g-eqn/max-iter 1 integer #f 1 5 ("Max. no. of Premix-G-Eq NITA sub iterations:          ~a")) (premix-g-var/max-iter 1 integer #f 1 5 ("Max. no. of Premix-G-Var NITA sub iterations:         ~a")) (pdftss/max-iter 1 integer #f 1 5 ("Max. no. of PDF-tss NITA sub iterations:              ~a")) (pull/max-iter 1 integer #f 1 5 ("Max. no. of Pollutant NITA sub iterations:            ~a")) (soot-mom/max-iter 1 integer #f 1 5 ("Max. no. of Soots NITA sub iterations:                ~a")) (tvar/max-iter 1 integer #f 1 5 ("Max. no. of Tvar NITA sub iterations:                 ~a")) (pressure/cycle-type 3 integer #f 3 1 ("Multigrid cycle type for the pressure:                ~a" ((0 . "Flexible") (1 . "V-Cycle") (2 . "W-Cycle") (3 . "F-Cycle")))) (pressure/amg-alpha 0.01 real #f 0.01 0.1 ("Multigrid termination for the pressure       :        ~a")) (mom/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for momentum:                 ~a")) (pressure/residual-tolerance 0.01 real #f 0.01 0.0001 ("Residual-tolerance for pressure:                 ~a")) (temperature/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for temperature:              ~a")) (enthalpy/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for enthalpy:                 ~a")) (w-swirl/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for w-swirl:                  ~a")) (nut/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (nu):          ~a")) (k/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (k):           ~a")) (epsilon/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (epsilon):     ~a")) (v2/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (V2):          ~a")) (f/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (f):           ~a")) (kl/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (kl):          ~a")) (omega/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (Omega):       ~a")) (intermit/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (Intermit):    ~a")) (retheta/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (retheta):     ~a")) (drsm/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for turbulence (drsm):        ~a")) (species/residual-tolerance (0.001) real-list #f (0.001) (0.0001) ("Residual-tolerance for species:                  ~a")) (potential/residual-tolerance 0.001 real #f 0.001 1e-06 ("Residual-tolerance for potential:                ~a")) (dqmom-iem/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for DQMOM:                    ~a")) (fmean/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for fmean:                    ~a")) (fmean2/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for fmean2:                   ~a")) (fvar/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for fvar:                     ~a")) (fvar2/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for fvar2:                    ~a")) (premixc/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for premixc:                  ~a")) (pdftss/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for pdftss:                   ~a")) (pull/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for pull:                     ~a")) (soot-mom/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for soot-mom:                 ~a")) (tvar/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for tvar:                     ~a")) (premix-g-eqn/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for premix-g-eqn:            ~a")) (premix-g-var/residual-tolerance 0.001 real #f 0.001 0.0001 ("Residual-tolerance for premix-g-var:            ~a")) (flow/scheme 25 integer #f 25 20 ("Flow Scheme is:                                       ~a" (("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Fractional Step" . 25) ("Coupled" . 24) ("Phase Coupled SIMPLE" . 23) ("Phase Coupled PISO" . 30)))) (nita/flux/extrapolate? #f boolean #f #f #f ("Mass flux extrapolation:                              ~a" (("enabled" . #t) ("disabled" . #f)))) (nita/outer-iter 10 integer #f 10 1 ("Max. no. of outer iterations:                         ~a")) (models/equation-order 1 integer #f 1 0 ("Changing equation order                               ~a" (("Standard" . 0) ("Optimized-for-volumetric-expansion" . 1)))) (density/relax 0.75 real #f 0.75 1 ("Under-Relaxation Factor for density                   ~a")) (dpm/relax 0.75 real #f 0.75 0.5 ("DPM source terms under-relaxation factor:             ~a")) (fvar/relax 0.9 real #f 0.9 0.9 ("Under-relaxation factor for mean-fraction             ~a")) (mom/relax 0.75 real #f 0.75 0.7 ("Under-Relaxation Factor for momentum                 ~a")) (premixc/relax 0.9 real #f 0.9 0.9 ("Under-relaxation factor for premix-c                  ~a")) (pressure/relax 0.75 real #f 0.75 0.3 ("Under-Relaxation Factor for pressure  ~a"))) ("Multi Phase PISO" 32 (lambda () (and (equal? (cdr (assq 'sg-mphase? (%rp-config #f))) 'multi-fluid) (eqv? (rpgetvar 'flow/scheme) 30))) (lambda () #f) (pressure/max-iter 0 integer #f 0 10 ("Pressure skewness correction:         ~a")) (piso/coupling? #f boolean #f #f #t ("Skewness neighbor coupling:           ~a"))) ("Fast Transient SIMPLEC" 243 (lambda () (and (or (cdr (assq 'sg-pdf? (%rp-config #f))) (cdr (assq 'sg-par-premix? (%rp-config #f)))) (cdr (assq 'rp-unsteady? (%rp-config #f))) (not (cdr (assq 'sg-noniterative? (%rp-config #f)))) (rpgetvar 'pdf/activate-ft-simplec?))) (lambda () #f) (models/equation-order 1 integer #f 1 0 ("Equation order:                              ~a" (("Standard" . 0) ("Optimized-for-volumetric-expansion" . 1)))) (flow/scheme 21 integer #f 21 20 ("P-V coupling method is:                      ~a" (("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Fractional Step" . 25) ("Coupled" . 24) ("Phase Coupled SIMPLE" . 23) ("Phase Coupled PISO" . 30)))) (pressure/cycle-type 3 integer #f 3 1 ("AMG cycle type for pressure equation:          ~a" ((0 . "Flexible") (1 . "V-Cycle") (2 . "W-Cycle") (3 . "F-Cycle")))) (pressure/scheme 12 integer #f 12 12 ("Pressure discretization scheme:                ~a" (("First Order Upwind" . 0) ("Second Order Upwind" . 1) ("Power Law" . 2) ("Central Differencing" . 3) ("QUICK" . 4) ("Modified HRIC" . 5) ("Third-Order MUSCL" . 6) ("Bounded Central Differencing" . 7) ("CICSAM" . 8) ("Low Diffusion Second Order" . 9) ("Standard" . 10) ("Linear" . 11) ("Second Order" . 12) ("Body Force Weighted" . 13) ("PRESTO!" . 14) ("Continuity Based" . 15) ("Geo-Reconstruct" . 16) ("Donor-Acceptor" . 17) ("Modified Body Force Weighted" . 18) ("SIMPLE" . 20) ("SIMPLEC" . 21) ("PISO" . 22) ("Phase Coupled SIMPLE" . 23) ("Coupled" . 24) ("Fractional Step" . 25) ("Compressive" . 28) ("BGM" . 29) ("Phase Coupled PISO" . 30)))) (pressure/amg-alpha 0.01 real #f 0.01 0.1 ("Multigrid termination for the pressure:          ~a")) (pressure/relax 0.75 real #f 0.75 0.3 ("Under-Relaxation Factor for pressure:            ~a")) (mom/relax 0.75 real #f 0.75 0.7 ("Under-Relaxation Factor for momentum:            ~a")) (dpm/relax 0.75 real #f 0.75 0.5 ("Under-Relaxation Factor for dpm:                 ~a")) (density/relax 0.75 real #f 0.75 1 ("Under-Relaxation Factor for density:             ~a")) (max-iterations-per-step 10 integer #f 10 20 ("Max. no. of iterations per time step:            ~a"))) ("FGM Robustness Improvements" 244 (lambda () (and (cdr (assq 'sg-par-premix? (%rp-config #f))) (cdr (assq 'rp-unsteady? (%rp-config #f))) (rpgetvar 'prepdf/prmx-flamelet?) (eqv? (rpgetvar 'pdf/prmx-fla-turb-chem-model) 0) (cdr (assq 'sg-dpm? (%rp-config #f))))) (lambda () #f) (premixc/fgm-src-method-1? #t boolean #f #t #f ("Enable convergence method 1:                     ~a"))) ("DBNS Poor Mesh Numerics" 245 (lambda () (and (not (rp-seg?)) (rpgetvar 'mesh/bad/tmp-enhanced-pmn?))) (lambda () #f) (mesh/bad/enable-quality-based-treatment? #t boolean #f #t #f ("Quality Based Treatment?: ~a")) (mesh/bad/min-orthogonal-quality 0.2 real #f 0.2 0.05 ("Min Orthogonal Quality:   ~a")) (mesh/bad/tmp-limit-cfl? #t boolean #f #t #f ("Limit CFL?:               ~a")) (mesh/bad/tmp-cfl-limit 1 real #f 1 1 ("CFL Limit:                ~a")) (mesh/bad/repair-sltn-mode 0 integer #f 0 0 ("Solution repair mode:     ~a")) (mesh/bad/repair-grad-mode 2 integer #f 2 2 ("Gradient repair mode:     ~a"))) ("Pseudo Time Method" 2000 (lambda () (and (cdr (assq 'rp-seg? (%rp-config #f))) (not (eqv? (rpgetvar 'flow/scheme) 24)))) (lambda () #f) (pseudo-transient-formulation? #f boolean #f #f #t ("Pseudo transient: ~a"))) ("Pseudo Time Method Transient" 2001 (lambda () (and (cdr (assq 'rp-unsteady? (%rp-config #f))) (rpgetvar 'show-beta-features?))) (lambda () #f) (pseudo-transient-formulation? #f boolean #f #f #f ("Pseudo time method is disabled: ~a"))) ("Pseudo Time Method Mode" 2002 (lambda () (or (and (cdr (assq 'rp-seg? (%rp-config #f))) (eqv? (rpgetvar 'flow/scheme) 24)) (cdr (assq 'rp-amg? (%rp-config #f))))) (lambda () #f) (pseudo-transient-mode 0 integer #f 0 0 ("Pseudo transient Time Step Mode: ~a"))) ("Default Local Pseudo Time AMG Controls" 246 (lambda () (or (eqv? (rpgetvar 'pseudo-time-method/segregated-pbns/dt-method) 2) (eqv? (rpgetvar 'pseudo-time-method/coupled-pbns/dt-method) 2) (eqv? (rpgetvar 'pseudo-time-method/implicit-dbns/dt-method) 2))) (lambda () #f) (pressure/dual-ts-cycle-type 1 integer #f 1 1 ("AMG cycle type for Pressure equation:       ~a" ,cycle-map)) (x-mom/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for X-Momentum equation:     ~a" ,cycle-map)) (y-mom/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Y-Momentum equation:     ~a" ,cycle-map)) (z-mom/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Z-Momentum equation:     ~a" ,cycle-map)) (w-swirl/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Swirl equation:          ~a" ,cycle-map)) (temperature/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Temperature equation:    ~a" ,cycle-map)) (enthalpy/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Enthalpy equation:       ~a" ,cycle-map)) (tvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Tvar equation:           ~a" ,cycle-map)) (k/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for K equation:              ~a" ,cycle-map)) (epsilon/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Epsilon equation:        ~a" ,cycle-map)) (omega/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Omega equation:          ~a" ,cycle-map)) (kl/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for KL equation:             ~a" ,cycle-map)) (nut/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Nut equation:            ~a" ,cycle-map)) (drsm/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for DRSM equation:           ~a" ,cycle-map)) (retheta/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Retheta equation:        ~a" ,cycle-map)) (intermit/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Intermit equation:       ~a" ,cycle-map)) (v2/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for V2 equation:             ~a" ,cycle-map)) (f/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for F equation:              ~a" ,cycle-map)) (fmean/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Fmean equation:          ~a" ,cycle-map)) (fmean2/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Fmean2 equation:         ~a" ,cycle-map)) (fvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Fvar equation:           ~a" ,cycle-map)) (fvar2/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Fvar2 equation:          ~a" ,cycle-map)) (premixc/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Premixc equation:        ~a" ,cycle-map)) (premix-g-var/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Premix-G-var equation:   ~a" ,cycle-map)) (pdftss/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for PDF-tss equation:        ~a" ,cycle-map)) (sootspecies/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Soot-Species equation:   ~a" ,cycle-map)) (soot-mom/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Soot-Mom equation:       ~a" ,cycle-map)) (inert/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Inert equation:          ~a" ,cycle-map)) (ic-fvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for IC-Fvar equation:        ~a" ,cycle-map)) (vc-fvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for VC-Fvar equation:        ~a" ,cycle-map)) (vd-fvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for VD-Fvar equation:        ~a" ,cycle-map)) (potential/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Potential equation:      ~a" ,cycle-map)) (potential-2/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Electrolyte Potential equation:      ~a" ,cycle-map)) (lithium/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Lithium equation:        ~a" ,cycle-map)) (ecfm-sigma/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for ECFM-Sigma equation:     ~a" ,cycle-map)) (pollutant/dual-ts-cycle-type (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) integer-list #f (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) ("AMG cycle type for Pollutant equation:      ~a"))) ("Coupled Local Pseudo Time AMG Controls" 247 (lambda () (and (eqv? (rpgetvar 'flow/scheme) 24) (cdr (assq 'rp-seg? (%rp-config #f))) (eqv? (rpgetvar 'pseudo-time-method/coupled-pbns/dt-method) 2) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (not (cdr (assq 'rp-react? (%rp-config #f)))) (not (cdr (assq 'rp-structure? (%rp-config #f)))) (not (cdr (assq 'sg-wetsteam? (%rp-config #f)))) (not (cdr (assq 'sg-crev? (%rp-config #f)))) (not (cdr (assq 'sg-geqn? (%rp-config #f)))) (not (cdr (assq 'sg-dqmom-iem? (%rp-config #f)))) (not (cdr (assq 'sg-noniterative? (%rp-config #f)))))) (lambda () #f) (w-swirl/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Swirl equation:          ~a" ,cycle-map)) (temperature/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Temperature equation:    ~a" ,cycle-map)) (enthalpy/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Enthalpy equation:       ~a" ,cycle-map)) (tvar/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Tvar equation:           ~a" ,cycle-map)) (k/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for K equation:              ~a" ,cycle-map)) (epsilon/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Epsilon equation:        ~a" ,cycle-map)) (omega/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Omega equation:          ~a" ,cycle-map)) (kl/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for KL equation:             ~a" ,cycle-map)) (nut/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Nut equation:            ~a" ,cycle-map)) (drsm/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for DRSM equation:           ~a" ,cycle-map)) (retheta/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Retheta equation:        ~a" ,cycle-map)) (intermit/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Intermit equation:       ~a" ,cycle-map)) (v2/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for V2 equation:             ~a" ,cycle-map)) (f/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for F equation:              ~a" ,cycle-map)) (fmean/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Fmean equation:          ~a" ,cycle-map)) (fmean2/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Fmean2 equation:         ~a" ,cycle-map)) (fvar/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Fvar equation:           ~a" ,cycle-map)) (fvar2/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Fvar2 equation:          ~a" ,cycle-map)) (premixc/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Premixc equation:        ~a" ,cycle-map)) (premix-g-var/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Premix-G-var equation:   ~a" ,cycle-map)) (pdftss/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for PDF-tss equation:        ~a" ,cycle-map)) (sootspecies/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Soot-Species equation:   ~a" ,cycle-map)) (soot-mom/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Soot-Mom equation:       ~a" ,cycle-map)) (inert/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for Inert equation:          ~a" ,cycle-map)) (ic-fvar/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for IC-Fvar equation:        ~a" ,cycle-map)) (vc-fvar/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for VC-Fvar equation:        ~a" ,cycle-map)) (vd-fvar/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for VD-Fvar equation:        ~a" ,cycle-map)) (potential/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Potential equation:      ~a" ,cycle-map)) (potential-2/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Electrolyte Potential equation:      ~a" ,cycle-map)) (lithium/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Lithium equation:        ~a" ,cycle-map)) (ecfm-sigma/dual-ts-cycle-type 3 integer #f 3 0 ("AMG cycle type for ECFM-Sigma equation:     ~a" ,cycle-map)) (pollutant/dual-ts-cycle-type (3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3) integer-list #f (3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) ("AMG cycle type for Pollutant equation:      ~a"))) ("Segregated Local Pseudo Time AMG Controls" 248 (lambda () (and (not (eqv? (rpgetvar 'flow/scheme) 24)) (cdr (assq 'rp-seg? (%rp-config #f))) (eqv? (rpgetvar 'pseudo-time-method/segregated-pbns/dt-method) 2) (not (cdr (assq 'sg-mphase? (%rp-config #f)))) (not (cdr (assq 'rp-react? (%rp-config #f)))) (not (cdr (assq 'rp-structure? (%rp-config #f)))) (not (cdr (assq 'sg-wetsteam? (%rp-config #f)))) (not (cdr (assq 'sg-crev? (%rp-config #f)))) (not (cdr (assq 'sg-geqn? (%rp-config #f)))) (not (cdr (assq 'sg-dqmom-iem? (%rp-config #f)))) (not (cdr (assq 'sg-noniterative? (%rp-config #f)))))) (lambda () #f) (pressure/dual-ts-cycle-type 1 integer #f 1 1 ("AMG cycle type for Pressure equation:       ~a" ,cycle-map)) (x-mom/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for X-Momentum equation:     ~a" ,cycle-map)) (y-mom/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Y-Momentum equation:     ~a" ,cycle-map)) (z-mom/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Z-Momentum equation:     ~a" ,cycle-map)) (w-swirl/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Swirl equation:          ~a" ,cycle-map)) (temperature/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Temperature equation:    ~a" ,cycle-map)) (enthalpy/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Enthalpy equation:       ~a" ,cycle-map)) (tvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Tvar equation:           ~a" ,cycle-map)) (k/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for K equation:              ~a" ,cycle-map)) (epsilon/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Epsilon equation:        ~a" ,cycle-map)) (omega/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Omega equation:          ~a" ,cycle-map)) (kl/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for KL equation:             ~a" ,cycle-map)) (nut/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Nut equation:            ~a" ,cycle-map)) (drsm/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for DRSM equation:           ~a" ,cycle-map)) (retheta/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Retheta equation:        ~a" ,cycle-map)) (intermit/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Intermit equation:       ~a" ,cycle-map)) (v2/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for V2 equation:             ~a" ,cycle-map)) (f/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for F equation:              ~a" ,cycle-map)) (fmean/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Fmean equation:          ~a" ,cycle-map)) (fmean2/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Fmean2 equation:         ~a" ,cycle-map)) (fvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Fvar equation:           ~a" ,cycle-map)) (fvar2/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Fvar2 equation:          ~a" ,cycle-map)) (premixc/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Premixc equation:        ~a" ,cycle-map)) (premix-g-var/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Premix-G-var equation:   ~a" ,cycle-map)) (pdftss/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for PDF-tss equation:        ~a" ,cycle-map)) (sootspecies/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Soot-Species equation:   ~a" ,cycle-map)) (soot-mom/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Soot-Mom equation:       ~a" ,cycle-map)) (inert/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for Inert equation:          ~a" ,cycle-map)) (ic-fvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for IC-Fvar equation:        ~a" ,cycle-map)) (vc-fvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for VC-Fvar equation:        ~a" ,cycle-map)) (vd-fvar/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for VD-Fvar equation:        ~a" ,cycle-map)) (potential/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Potential equation:      ~a" ,cycle-map)) (potential-2/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Electrolyte Potential equation:      ~a" ,cycle-map)) (lithium/dual-ts-cycle-type 3 integer #f 3 3 ("AMG cycle type for Lithium equation:        ~a" ,cycle-map)) (ecfm-sigma/dual-ts-cycle-type 0 integer #f 0 0 ("AMG cycle type for ECFM-Sigma equation:     ~a" ,cycle-map)) (pollutant/dual-ts-cycle-type (3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3) integer-list #f (3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) ("AMG cycle type for Pollutant equation:      ~a")))))